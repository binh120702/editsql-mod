medium pred: select count ( * ) from wedding where Year = 1
medium gold: SELECT count ( * )  FROM church AS T1 JOIN wedding AS T2 ON T1.church_id   =   T2.church_id WHERE T2.year   =   2015

extra pred: select count ( * ) from chip_model where Model_name not in ( select T2.chip_model from chip_model as T1 join phone as T2 on T1.Model_name = T2.chip_model ) and T1.RAM_MiB > = 1
extra gold: SELECT count ( * )  FROM chip_model WHERE model_name IN  ( SELECT chip_model FROM phone )  AND RAM_MiB  > =   64

easy pred: select country from circuits
easy gold: SELECT name FROM races

easy pred: select country from circuits where lng > 1
easy gold: SELECT name FROM races WHERE TIME > "12:00:00"

easy pred: select country from circuits where lng < 1
easy gold: SELECT name FROM races WHERE TIME < "09:00:00"

easy pred: select driverId from qualifying where number = 1
easy gold: SELECT name FROM circuits WHERE country  =  "Spain"

medium pred: select country from circuits where circuitRef > 1
medium gold: SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T1.year > 2017

medium pred: select T3.country from qualifying as T1 join races as T2 on T1.raceId = T2.raceId join circuits as T3 on T2.circuitId = T3.circuitId where T1.number = 1 and T3.lat > 1
medium gold: SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T2.country  =  "Spain" AND T1.year > 2017

extra pred: select circuitId from races group by name having count ( * ) > 1
extra gold: SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5

medium pred: select circuitId from races group by name having count ( * ) = 1
medium gold: SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11

medium pred: select T3.url from races as T1 join qualifying as T2 on T1.raceId = T2.raceId join constructors as T3 on T2.constructorId = T3.constructorId where T1.name = 1
medium gold: SELECT T2.raceID FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.surname = "Nakajima"

medium pred: select T1.fastestLaptime from results as T1 join races as T2 where T2.name = 1
medium gold: SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.surname = "Nakajima" and T2.rank = 1

hard pred: select state from College where cName = 1
hard gold: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID WHERE T1.cName   =   'OU'

extra pred: select cName from College where enr > 1 and state = 1 union select cName from College where enr > 1 and state = 1
extra gold: SELECT cName FROM College WHERE enr  <  13000 AND state  =  "AZ" UNION SELECT cName FROM College WHERE enr  >  15000 AND state  =  "LA"

eval_err_num:1
extra pred: select avg ( T2.HS ) , like ( T2.HS ) from Tryout as T1 join Player as T2 on T1.pID = T2.pID where T1.decision = 1
extra gold: SELECT avg ( T1.HS )  ,  max ( T1.HS )  FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision   =   'yes'

eval_err_num:2
extra pred: select avg ( T2.HS ) , like ( T2.HS ) , T2.pID , T1.cName from Tryout as T1 join Player as T2 on T1.pID = T2.pID where T1.decision = 1
extra gold: SELECT avg ( T1.HS )  ,  max ( T1.HS ) , T1.pid, T2.cname FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision   =   'yes'

eval_err_num:3
easy pred: select * from employees where COMMISSION_PCT intersect 1
easy gold: SELECT *  FROM employees WHERE commission_pct ! =  "null"

eval_err_num:4
easy pred: select count ( * ) from employees where COMMISSION_PCT intersect 1
easy gold: SELECT count ( * )   FROM employees WHERE commission_pct ! =  "null"

eval_err_num:5
medium pred: select DEPARTMENT_ID , avg ( SALARY ) from employees where COMMISSION_PCT intersect 1 group by DEPARTMENT_ID
medium gold: SELECT department_id ,  AVG ( salary )  FROM employees WHERE commission_pct ! =  "null" GROUP BY department_id

hard pred: select T1.FIRST_NAME , T1.LAST_NAME from employees as T1 join locations as T2 where T2.CITY = 1
hard gold: SELECT first_name ,  last_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN  locations AS T3 ON T2.location_id   =   T3.location_id WHERE  T3.city   =   'London'

hard pred: select DEPARTMENT_ID , count ( * ) from departments group by DEPARTMENT_ID
hard gold: select T1.DEPARTMENT_ID, count ( * )  from  departments AS T1 JOIN employees AS T2 where  T1.DEPARTMENT_ID  =  T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID

hard pred: select DEPARTMENT_ID , DEPARTMENT_NAME , count ( * ) from departments group by DEPARTMENT_ID
hard gold: select T1.DEPARTMENT_ID, T1.DEPARTMENT_NAME, count ( * )  from departments AS T1 JOIN employees AS T2 where T1.DEPARTMENT_ID  =  T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID

medium pred: select order_date from Customer_Orders where order_status = 1
medium gold: SELECT t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   "Delivered"

eval_err_num:6
medium pred: select like ( T1.active_to_date ) from Customer_Contact_Channels as T1 join Customers as T2 on T1.customer_id = T2.customer_id where T2.customer_name = 1
medium gold: SELECT max ( t2.active_to_date )  FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  "Tillman Ernser"

medium pred: select payment_method from Customers where customer_name = 1
medium gold: SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  "Devin Mills"

medium pred: select customer_id from Customers where customer_name = 1
medium gold: SELECT DISTINCT t1.customer_id FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  "Devin Mills"

extra pred: select customer_name from Customers where payment_method = ( select customer_id from Customers where customer_name = 1 )
extra gold: SELECT DISTINCT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.payment_method  =   ( SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  "Devin Mills" ) 

hard pred: select count ( * ) from Customers where date_became_customer < ( select T3.date_became_customer from Order_Items as T1 join Customer_Orders as T2 on T1.order_id = T2.order_id join Customers as T3 on T2.customer_id = T3.customer_id group by T3.customer_name order by sum ( T1.order_quantity ) desc limit 1 )
hard gold: SELECT count ( * )   FROM customers where date_became_customer <  ( SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1 ) 

medium pred: select count ( * ) from Customers where customer_name = 1
medium gold: SELECT count ( * )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id where t1.customer_name = "Eunice Morar"

extra pred: select T2.School_name from budget as T1 join School as T2 on T1.School_id = T2.School_id group by T2.School_name having sum ( T1.Budgeted ) > 1 or sum ( T1.Budgeted ) > 1
extra gold: SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum ( T1.budgeted )  > 100 OR sum ( T3.amount )  > 10

eval_err_num:7
hard pred: select T3.name from medicine as T1 join medicine_enzyme_interaction as T2 on T1.id = T2.medicine_id join enzyme as T3 on T2.enzyme_id = T3.id where T1.name = 1 and T3.Location intersect 1
hard gold: SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id   =   T2.id JOIN enzyme AS T3 ON T1.enzyme_id   =   T3.id WHERE T2.name   =   'Aripiprazole' and T3.location ! =  "Cytosol"

eval_err_num:8
extra pred: select T1.Party from party as T1 join election as T2 on T1.Party_ID = T2.Party where T2.Committee = 1 != select T3.Party from party as T3 join election as T4 on T3.Party_ID = T4.Party where T4.Committee = 1
extra gold: SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T1.Committee   =   "Appropriations" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T1.Committee   =   "Economic Matters"

medium pred: select County_name , count ( * ) from county group by County_Id
medium gold: SELECT T1.County_name,COUNT ( * )  FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District GROUP BY T1.County_id

medium pred: select County_name from county group by County_Id having count ( * ) > = 1
medium gold: SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District GROUP BY T1.County_id HAVING COUNT ( * )    > =    2

extra pred: select customer_id from Customers group by customer_id order by count ( * ) limit 1
extra gold: SELECT DISTINCT t3.customer_id FROM products AS t1 JOIN complaints AS t2 ON t1.product_id   =   t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count ( * )  LIMIT 1

medium pred: select ( Population ) , Name from country where GovernmentForm = 1 group by Name
medium gold: SELECT GNP, population FROM country WHERE GovernmentForm   =   "US Territory"

medium pred: select avg ( GNP ) from country where GovernmentForm = 1 group by Name
medium gold: SELECT avg ( GNP )  ,  sum ( population )  FROM country WHERE GovernmentForm   =   "US Territory"

hard pred: select Name from country where Continent not in ( select T3.CountryCode from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code join city as T3 on T2.Code = T3.CountryCode where T1.Language = 1 )
hard gold: SELECT Name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" ) 

extra pred: select sum ( Population ) from country where Continent not in ( select T3.CountryCode from countrylanguage as T1 join country as T2 on T1.CountryCode = T2.Code join city as T3 on T2.Code = T3.CountryCode where T1.Language = 1 )
extra gold: SELECT Name,sum ( Population )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" )  group by Name

medium pred: select Population from country where Continent = 1
medium gold: SELECT name,population FROM country WHERE Continent   =   "Africa"

extra pred: select Population from country where Continent = 1 and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 ) and
extra gold: SELECT Name,population FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

extra pred: select GovernmentForm from country where Continent = 1 and Population > ( select min ( Population ) from country where Continent = 1 ) and Population > ( select min ( Population ) from country where Continent = 1 )
extra gold: SELECT Name,GovernmentForm FROM country WHERE Continent   =   "Asia"  AND population  >   ( SELECT min ( population )  FROM country WHERE Continent   =   "Africa" ) 

easy pred: select T2.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Name = 1
easy gold: SELECT Population FROM country where Name   =   "Afghanistan"

easy pred: select T2.Population from country as T1 join city as T2 on T1.Code = T2.CountryCode where T1.Name = 1
easy gold: SELECT Population FROM country where Name   =   "Aruba"

medium pred: select T3.Language from city as T1 join country as T2 on T1.CountryCode = T2.Code join countrylanguage as T3 on T2.Code = T3.CountryCode where T1.Name = 1
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba"

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Aruba" and T2.IsOfficial = 'T'

medium pred: select T2.Language from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1
medium gold: SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T1.Name   =   "Afghanistan" and T2.IsOfficial = 'T'

medium pred: select count ( * ) from country as T1 join countrylanguage as T2 on T1.Code = T2.CountryCode where T1.Name = 1 and T2.Language = 1
medium gold: SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.language = 'Dari' and T1.name ! =  'Afghanistan'

hard pred: select Name from country where Region = 1 order by LifeExpectancy desc limit 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy DESC LIMIT 1

eval_err_num:9
medium pred: select Founder from Manufacturers where Founder max 1
medium gold: SELECT founder FROM manufacturers WHERE Founder LIKE 'S%'

eval_err_num:10
easy pred: select like ( Price ) from Products
easy gold: SELECT max ( Price )  from Products

medium pred: select Event_Name , Event_Name from party_events
medium gold: SELECT distinct member_name, T2.Event_Name FROM member as T1 join party_events as T2 on T1.Member_ID = T2.Member_in_charge_ID

hard pred: select Member_Name from member except select Member_Name from member
hard gold: SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id   =   T2.member_in_charge_id

medium pred: select gradepoint from Gradeconversion order by gradepoint
medium gold: SELECT gradepoint,lettergrade FROM GRADECONVERSION

eval_err_num:11
easy pred: select like ( gradepoint ) from Gradeconversion
easy gold: SELECT max ( gradepoint )  FROM GRADECONVERSION

eval_err_num:12
medium pred: select like ( gradepoint ) , lettergrade from Gradeconversion group by lettergrade
medium gold: SELECT LETTERGRADE, max ( gradepoint )  FROM GRADECONVERSION GROUP BY LETTERGRADE

medium pred: select min ( gradepoint ) , min ( gradepoint ) from Gradeconversion
medium gold: SELECT min ( gradepoint ) , lettergrade FROM GRADECONVERSION group by lettergrade

easy pred: select min ( gradepoint ) , min ( gradepoint ) from Gradeconversion
easy gold: SELECT min ( gradepoint )  FROM GRADECONVERSION

eval_err_num:13
medium pred: select like ( gradepoint ) , min ( gradepoint ) , min ( gradepoint ) from Gradeconversion
medium gold: SELECT max ( gradepoint )  ,  min ( gradepoint )  FROM GRADECONVERSION

eval_err_num:14
easy pred: select like ( gradepoint ) from Gradeconversion
easy gold: SELECT max ( gradepoint )   FROM GRADECONVERSION

eval_err_num:15
medium pred: select like ( gradepoint ) , like ( gradepoint ) from Gradeconversion
medium gold: SELECT lettergrade, max ( gradepoint )   FROM GRADECONVERSION group by lettergrade

eval_err_num:16
medium pred: select like ( gradepoint ) , min ( gradepoint ) from Gradeconversion
medium gold: SELECT lettergrade, max ( gradepoint ) , min ( gradepoint )   FROM GRADECONVERSION group by lettergrade

eval_err_num:17
hard pred: select like ( T1.gradepoint ) from Gradeconversion as T1 join Enrolled_in as T2 on T1.lettergrade = T2.Grade join Student as T3 on T2.StuID = T3.StuID where T3.city_code = 1
hard gold: SELECT max ( T2.gradepoint )   FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID WHERE T3.city_code   =   "NYC"

extra pred: select LName , Age from Student where StuID = 1 or StuID = 1
extra gold: SELECT LName, age, FName FROM STUDENT WHERE stuid  =  1003 or stuid  =  1004

medium pred: select Sex , count ( * ) from Student group by Sex , Sex
medium gold: SELECT sex, count ( * )  FROM STUDENT group by sex

eval_err_num:18
medium pred: select T2.Title , like ( T1.Price ) from schedule as T1 join film as T2 on T1.Film_ID = T2.Film_ID group by T2.Film_ID
medium gold: SELECT T1.title, max ( price )  from film as T1 join schedule as T2 on T1.film_id  =  T2.film_id group by T1.film_id

eval_err_num:19
easy pred: select count ( * ) from cinema ( select Location from cinema where Openning_year = 1 != select Location from cinema where Openning_year = 1 )
easy gold: select count ( * )  from  ( SELECT LOCATION FROM cinema WHERE openning_year   =   2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year   =   2011 ) 

extra pred: select customer_name from Customers group by customer_id order by count ( * ) desc limit 1
extra gold: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1

medium pred: select Start_year from club where name = 1
medium gold: SELECT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T1.name   =   "IFG"

medium pred: select Start_year from club where name = 1
medium gold: SELECT DISTINCT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T1.name   =   "AIB"

medium pred: select Position from player where name = 1
medium gold: SELECT t2.position FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T2.name   =   "Michael Platt"

eval_err_num:20
hard pred: select Country from competition where Competition_type = 1 != select Country from competition where Competition_type = 1
hard gold: SELECT country FROM competition WHERE competition_type   =   'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type   =   'Tournament'

eval_err_num:21
easy pred: select like ( Support_rate ) from candidate
easy gold: SELECT max ( support_rate )  FROM candidate

eval_err_num:22
extra pred: select T3.loan_type from customer as T1 join bank as T2 on T1.branch_ID = T2.branch_ID join loan as T3 on T2.branch_ID = T3.branch_ID where T1.cust_name = 1 != select T6.loan_type from customer as T4 join bank as T5 on T4.branch_ID = T5.branch_ID join loan as T6 on T5.branch_ID = T6.branch_ID where T4.cust_name = 1
extra gold: select t2.loan_type from customer as t1 join loan as t2 on t1.cust_id  =  t2.cust_id where t1.cust_name  =  "Mary" intersect select t4.loan_type from customer as t3 join loan as t4 on t3.cust_id  =  t4.cust_id where t3.cust_name  =  "Jack"

eval_err_num:23
easy pred: select like ( credit_score ) from customer
easy gold: SELECT MAX ( credit_score )  FROM customer

eval_err_num:24
easy pred: select like ( acc_bal ) from customer
easy gold: SELECT MAX ( acc_bal )  FROM customer

extra pred: select Name , Birth_Date from people except select Name , Birth_Date from people
extra gold: SELECT Name ,  birth_date FROM people EXCEPT SELECT T1.Name ,  T1.birth_date FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id   =   T2.people_id

extra pred: select Name , Birth_Place from people except select Name , Birth_Place from people
extra gold: SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id   =   T2.people_id

easy pred: select Name from people
easy gold: SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID

easy pred: select count ( * ) from singer
easy gold: select count ( distinct Singer_ID )  from Singer

medium pred: select count ( * ) from song where Sales > 1
medium gold: SELECT count ( DISTINCT T1.Name )  FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales > 300000

eval_err_num:25
hard pred: select Headquarters from company where Main_Industry = 1 != select Headquarters from company where Main_Industry = 1
hard gold: SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'

medium pred: select Company from company order by Market_Value desc limit 1
medium gold: SELECT company FROM company  ORDER BY market_value LIMIT 1

eval_err_num:26
easy pred: select like ( grant_id ) from Documents where document_type_code = 1
easy gold: SELECT max ( grant_id )  FROM Documents where document_type_code = "APP"

easy pred: select T3.staff_id from Projects as T1 join Organisations as T2 on T1.organisation_id = T2.organisation_id join Research_Staff as T3 on T2.organisation_id = T3.employer_organisation_id where T1.organisation_id = 1
easy gold: SELECT staff_id from Research_Staff where employer_organisation_id  =  5

extra pred: select staff_id from Project_Staff where project_id not in ( select project_id from Project_Staff )
extra gold: SELECT T1.staff_id FROM Project_Staff AS T1 JOIN Projects AS T2 WHERE T1.project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'  ) 

hard pred: select outcome_code from Project_Outcomes group by outcome_code order by count ( outcome_code ) desc limit 1
hard gold: SELECT count ( outcome_code )  from project_outcomes group by outcome_code order by count ( outcome_code )  desc limit 1

extra pred: select project_id from Projects group by project_id order by count ( * ) desc limit 1
extra gold: SELECT T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.project_id ORDER BY count ( * )  DESC LIMIT 1

extra pred: select project_details , project_id from Projects group by project_id order by count ( * ) desc limit 1
extra gold: SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.project_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:27
easy pred: select like ( grade ) from Highschooler
easy gold: SELECT MAX ( grade )  FROM Highschooler

hard pred: select avg ( grade ) from Highschooler
hard gold: SELECT avg ( grade )  FROM Highschooler WHERE id IN  ( SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id ) 

hard pred: select T2.student_id from Highschooler as T1 join Friend as T2 on T1.ID = T2.friend_id where T1.ID not in ( select student_id from Friend )
hard gold: SELECT * FROM Highschooler WHERE id not IN  ( SELECT student_id FROM Friend ) 

hard pred: select name from Highschooler where ID not in ( select student_id from Friend )
hard gold: SELECT name FROM Highschooler WHERE id IN  ( SELECT student_id FROM Friend ) 

eval_err_num:28
easy pred: select like ( Price ) from publication
easy gold: SELECT max ( T2.price )  FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID

medium pred: select Writer from book where Title = 1
medium gold: SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID WHERE T1.Title  =  "The Black Lamb"

medium pred: select Price from publication where Publisher = 1 and Publication_Date = 1
medium gold: SELECT T2.Price FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID WHERE T2.Publisher  =  "Wiley" and T2.Publication_Date  =  "June 2006"

easy pred: select Employee_ID from Employees
easy gold: SELECT employee_id FROM Employees as t1 join Documents_to_be_destroyed as t2 on t1.Employee_ID  =  t2.Destroyed_by_Employee_ID

easy pred: select count ( * ) from Employees
easy gold: select count ( employee_id )  from employees

medium pred: select count ( * ) from Documents_to_be_Destroyed as T1 join Employees as T2 on T1.Destruction_Authorised_by_Employee_ID = T2.Employee_ID join Roles as T3 on T2.Role_Code = T3.Role_Code where T3.Role_Name = 1 and T1.Planned_Destruction_Date > 1
medium gold: SELECT COUNT ( * )  FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  "Editor" AND T1.Date_of_Birth > 1978

eval_err_num:29
medium pred: select Issue_Date from volume where Song max 1
medium gold: SELECT Issue_Date FROM volume WHERE Song LIKE "%The Way%"

eval_err_num:30
medium pred: select Volume_Issue from volume where Song max 1
medium gold: SELECT volume_Issue FROM volume WHERE Song LIKE "%The Way%"

eval_err_num:31
medium pred: select Artist_ID from volume where Song max 1
medium gold: SELECT artist_id FROM volume WHERE Song LIKE "%Everybody Have Fun Tonight%"

eval_err_num:32
extra pred: select Name , Age from editor where Age = ( select like ( Age ) from editor )
extra gold: SELECT Name, age FROM editor WHERE Age   =    ( select max ( age )  from editor ) 

medium pred: select player_name , id from Player
medium gold: SELECT player_api_id, player_name FROM Player

medium pred: select T2.player_name , T2.id , T2.height , T1.overall_rating from Player_Attributes as T1 join Player as T2 on T1.player_api_id = T2.player_api_id
medium gold: SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id  =  T2.player_fifa_api_id

medium pred: select T2.player_name , T2.id from Player_Attributes as T1 join Player as T2 on T1.player_api_id = T2.player_api_id where T1.overall_rating > 1
medium gold: SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id  =  T2.player_fifa_api_id WHERE T2.overall_rating > 85

hard pred: select player_name , id from Player where height > 1
hard gold: SELECT player_api_id FROM Player WHERE height > 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85

extra pred: select count ( * ) from Player_Attributes as T1 join Player as T2 on T1.player_api_id = T2.player_api_id where T1.overall_rating < ( select avg ( overall_rating ) from Player_Attributes )
extra gold: SELECT count ( DISTINCT T1.id )  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  <   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) 

hard pred: select Railway from railway group by Builder order by count ( * ) desc limit 1
hard gold: SELECT Railway FROM railway GROUP BY Builder having Builder = "GWR Swindon" ORDER BY built DESC limit 1

hard pred: select Built from railway group by Builder order by count ( * ) desc limit 1
hard gold: SELECT Built  FROM railway  GROUP BY  Builder having Builder = "GWR Swindon" order  by Built desc limit 1

eval_err_num:33
hard pred: select Country from manager where Age > 1 != select Country from manager where Age < 1
hard gold: SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46

eval_err_num:34
medium pred: select min ( Age ) , like ( Age ) from manager
medium gold: select min ( age ) ,max ( age )  from manager

eval_err_num:35
easy pred: select participants_in_Events.* from Participants_in_Events
easy gold: select * from Participants_in_Events

eval_err_num:36
medium pred: select T2.Name from perpetrator as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Country intersect 1
medium gold: SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country ! =  "China"

eval_err_num:37
medium pred: select T2.Name , T1.Country from perpetrator as T1 join people as T2 on T1.People_ID = T2.People_ID where T1.Country intersect 1
medium gold: SELECT T1.Name, T2.Country FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country ! =  "China"

medium pred: select count ( * ) from perpetrator where Country = 1
medium gold: SELECT count ( * )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  "China"

hard pred: select Major , count ( Major ) from Student group by Major order by count ( Major ) asc limit 1
hard gold: SELECT Major ,  count ( * )  FROM Student GROUP BY Major ORDER BY count ( Major )  ASC LIMIT 1

easy pred: select count ( * ) , Major from Student where Major = 1
easy gold: SELECT count ( * )  FROM Student WHERE  Major  =  600

medium pred: select Fname , LName from Student where Major = 1 and Major = 1
medium gold: SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major  =  600

eval_err_num:38
medium pred: select T2.Claim_Header_ID from Claims_Documents as T1 join Claim_Headers as T2 on T1.Claim_ID = T2.Claim_Header_ID where T1.Document_Type_Code = 1
medium gold: SELECT  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID WHERE Restaurant.ResName = "Subway"

eval_err_num:39
medium pred: select T2.Claim_Header_ID from Claims_Documents as T1 join Claim_Headers as T2 on T1.Claim_ID = T2.Claim_Header_ID where T1.Document_Type_Code = 1 order by T1.Created_Date limit 1
medium gold: SELECT  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID WHERE Restaurant.ResName = "Honeygrow"

eval_err_num:40
medium pred: select T2.Amount_Claimed from Claims_Documents as T1 join Claim_Headers as T2 on T1.Claim_ID = T2.Claim_Header_ID where T1.Created_Date = ( select Created_Date from Claims_Documents order by Created_Date limit 1 )
medium gold: SELECT Restaurant.ResName, sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID group by restaurant.resid

eval_err_num:41
extra pred: select sum ( T2.Amount_Claimed ) from Claims_Documents as T1 join Claim_Headers as T2 on T1.Claim_ID = T2.Claim_Header_ID where T1.Created_Date = ( select Created_Date from Claims_Documents order by Created_Date limit 1 )
extra gold: SELECT Restaurant.ResName ,  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum ( Visits_Restaurant.Spent )  ASC LIMIT 1

medium pred: select count ( * ) from Customers
medium gold: SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.document_type_code  =  "Document"

eval_err_num:42
extra pred: select count ( * ) from Discount_Coupons where coupon_amount = 1
extra gold: SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.document_type_code  =  "Document" ORDER BY created_date LIMIT 1

eval_err_num:43
extra pred: select T1.customer_id from Customers as T1 join Discount_Coupons as T2 on T1.coupon_id = T2.coupon_id where T2.coupon_amount = 1
extra gold: SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.created_date   =    ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 

eval_err_num:44
extra pred: select T1.good_or_bad_customer from Customers as T1 join Discount_Coupons as T2 on T1.coupon_id = T2.coupon_id where T2.coupon_amount = 1
extra gold: SELECT sum ( t1.amount_claimed )  FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.created_date   =    ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 

eval_err_num:45
easy pred: select Starting_year from player_coach
easy gold: SELECT count ( * )  FROM customers

eval_err_num:46
medium pred: select Coach_name from coach where Gender = 1
medium gold: SELECT count ( * )  FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500

eval_err_num:47
medium pred: select Residence from player
medium gold: SELECT t1.customer_id FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500

eval_err_num:48
medium pred: select T2.Player_name , T2.Gender from player_coach as T1 join player as T2 on T1.Player_ID = T2.Player_ID where T1.Starting_year > 1
medium gold: SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500

easy pred: select Occupation from player group by Occupation order by count ( * ) desc limit 1
easy gold: SELECT Starting_year FROM player_coach

easy pred: select Occupation from player group by Occupation order by count ( * ) limit 1
easy gold: SELECT Coach_name FROM coach WHERE Gender = "M"

easy pred: select Player_name from player group by Occupation order by count ( * ) limit 1
easy gold: SELECT Residence FROM player

hard pred: select Player_name from player group by Occupation order by count ( * ) desc limit 1
hard gold: SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID WHERE T1.Starting_year  >  2011

hard pred: select count ( Residence ) from player
hard gold: SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * )  DESC LIMIT 1

hard pred: select Residence from player
hard gold: SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * )  LIMIT 1

hard pred: select Residence from player group by Residence having count ( * ) > = 1
hard gold: SELECT Player_name FROM player GROUP BY Occupation ORDER BY COUNT ( * )  LIMIT 1

eval_err_num:49
easy pred: select Residence from player where Gender = 1 != select Residence from player where Gender = 1
easy gold: SELECT count ( distinct Residence )  FROM player

easy pred: select Sponsor_name from player where Player_name = 1
easy gold: SELECT distinct Residence FROM player

easy pred: select Votes from player where Player_name = 1
easy gold: SELECT Residence FROM player group by Residence HAVING COUNT ( * )   > =   1

eval_err_num:50
hard pred: select count ( * ) from Papers
hard gold: SELECT Residence FROM player WHERE gender   =   "M" INTERSECT SELECT Residence FROM player WHERE gender   =   "F"

eval_err_num:51
easy pred: select paperID from Papers
easy gold: SELECT Sponsor_Name FROM player WHERE Player_name  =  "Jean Luc Bouché"

eval_err_num:52
easy pred: select count ( title ) from Papers
easy gold: SELECT Votes FROM player WHERE player_name  =  "Niki Ashton"

easy pred: select country from Inst group by country order by count ( * ) limit 1
easy gold: SELECT count ( * )  FROM papers

easy pred: select country from Inst group by country order by count ( * ) desc limit 1
easy gold: SELECT paperID  FROM papers

easy pred: select country , count ( * ) from Inst where country = 1
easy gold: SELECT count ( title )  FROM papers

eval_err_num:53
extra pred: select T1.Name , T3.District from phone as T1 join phone_market as T2 on T1.Phone_ID = T2.Phone_ID join market as T3 on T2.Market_ID = T3.Market_ID order by T3.Ranking
extra gold: SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )   LIMIT 1

eval_err_num:54
extra pred: select T1.Carrier from phone as T1 join phone_market as T2 on T1.Phone_ID = T2.Phone_ID join market as T3 on T2.Market_ID = T3.Market_ID where T3.District = 1
extra gold: SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:55
hard pred: select T3.District from phone as T1 join phone_market as T2 on T1.Phone_ID = T2.Phone_ID join market as T3 on T2.Market_ID = T3.Market_ID where T1.Carrier = 1 and T3.District intersect 1
hard gold: SELECT t1.country,count ( * )  FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid where country  =  "USA"

eval_err_num:56
hard pred: select count ( * ) from stadium
hard gold: SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID ORDER BY T2.Ranking

eval_err_num:57
hard pred: select id , count ( * ) from stadium group by id
hard gold: SELECT T3.carrier FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID where T2.District  =  "Alberta"

eval_err_num:58
hard pred: select id , sum ( Total_Attendance ) from stadium group by id
hard gold: SELECT T2.district FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID where T3.carrier  =  "TMobile" and T2.district ! =  "Alberta"

eval_err_num:59
easy pred: select City from city order by City asc
easy gold: select count ( * )  from stadium

eval_err_num:60
medium pred: select City from city
medium gold: SELECT T1.id , count ( * )  FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id

eval_err_num:61
medium pred: select T1.City from city as T1 join temperature as T2 on T1.City_ID = T2.City_ID where T2.Feb > T2.Jun union select City from city
medium gold: SELECT T1.id , sum ( Total_Attendance )  FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id

eval_err_num:62
easy pred: select T2.Project_Details from Documents as T1 join Projects as T2 on T1.Project_ID = T2.Project_ID where T1.Document_Name = 1
easy gold: select city from city order by city asc

eval_err_num:63
easy pred: select Document_Date from Documents where Document_Name = 1
easy gold: SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city

eval_err_num:64
extra pred: select count ( Document_Date ) from Documents where Document_Type_Code = 1
extra gold: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city

medium pred: select Document_Date from Documents
medium gold: SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.document_name   =   "King Book"

medium pred: select Document_Name from Documents
medium gold: SELECT T2.Document_Date FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.document_name   =   "King Book"

medium pred: select Document_Type_Code from Documents
medium gold: SELECT count ( T2.Document_Date )  FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.Document_Type_Code  =   "CV"

eval_err_num:65
easy pred: select dimensions from product where product = 1
easy gold: select document_date from documents

eval_err_num:66
easy pred: select pages_per_minute_color from product where product = 1
easy gold: select document_name from documents

eval_err_num:67
easy pred: select max_page_size from product where product = 1
easy gold: select document_type_code from documents

easy pred: select District_name from district where District_ID = 1
easy gold: SELECT dimensions FROM product WHERE product  =  "Plustek MobileOffice D28 Corporate"

easy pred: select District_name from district where District_ID = 1
easy gold: SELECT pages_per_minute_color FROM product WHERE product  =  "Xerox Travel Scanner 100"

easy pred: select count ( * ) from district where District_ID = 1
easy gold: SELECT max_page_size FROM product WHERE product  =  "Plustek MobileOffice D28 Corporate"

easy pred: select T1.Store_Name from store as T1 join store_district as T2 on T1.Store_ID = T2.Store_ID join district as T3 on T2.District_ID = T3.District_ID where T3.District_ID = 1
easy gold: SELECT dpi FROM product WHERE product  =  "Fujitsu fi-6130 A4 Series Scanner"

medium pred: select T1.Store_Name from store as T1 join store_district as T2 on T1.Store_ID = T2.Store_ID join district as T3 on T2.District_ID = T3.District_ID where T3.District_ID = 1
medium gold: SELECT product,pages_per_minute_color FROM product order by pages_per_minute_color desc limit 1

eval_err_num:68
easy pred: select count ( * ) from battle where id not in ( select lost_in_battle from ship where tonnage = 1 )
easy gold: SELECT district_name from district where district_id  =  15

eval_err_num:69
easy pred: select count ( lost_in_battle ) from ship where tonnage = 1
easy gold: SELECT district_name from district where district_id  =  11

eval_err_num:70
hard pred: select count ( * ) from ship where tonnage = 1
hard gold: SELECT count ( * )  FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t3.district_id  =  15

eval_err_num:71
hard pred: select lost_in_battle from ship where tonnage = 1
hard gold: SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t3.district_id  =  15

eval_err_num:72
extra pred: select Name from Department
extra gold: SELECT count ( * )  FROM battle WHERE id NOT IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

eval_err_num:73
hard pred: select Head from Department where Name = 1
hard gold: SELECT count ( * )  FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

eval_err_num:74
easy pred: select Name from Department where Head > 1
easy gold: SELECT count ( * )  FROM ship WHERE tonnage   =   '225'

eval_err_num:75
hard pred: select Name from Department order by Head desc limit 1
hard gold: SELECT result FROM battle WHERE id IN  (  SELECT lost_in_battle FROM ship WHERE tonnage   =   '225'  ) 

easy pred: select Name from Department group by DepartmentID order by count ( DepartmentID ) desc limit 1
easy gold: select Head from Department where Name = 'General Medicine'

easy pred: select Head from Department where Name = 1
easy gold: select Name from Department where Head>4

medium pred: select Head from Department where Name = 1
medium gold: select Name from Department order by Head desc limit 1

easy pred: select count ( * ) from Block where BlockCode = 1
easy gold: SELECT name FROM department

hard pred: select T1.RoomNumber from Room as T1 join Block as T2 on T1.BlockFloor = T2.BlockFloor where T2.BlockCode = 1
hard gold: SELECT name FROM department GROUP BY departmentID ORDER BY count ( departmentID )  DESC LIMIT 1

easy pred: select BlockCode from Block where BlockCode = 1
easy gold: SELECT head FROM department where name  =  "Psychiatry"

easy pred: select T1.RoomType from Room as T1 join Block as T2 on T1.BlockFloor = T2.BlockFloor where T2.BlockCode = 1
easy gold: SELECT head FROM department where name  =  "Surgery"

medium pred: select AppointmentID from Appointment order by Start desc limit 1
medium gold: SELECT count ( * )  FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T1.blockcode  =  1

medium pred: select End from Appointment order by Start desc limit 1
medium gold: SELECT T2.roomnumber FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T1.blockcode  =  1

medium pred: select PrepNurse from Appointment order by Start desc limit 1
medium gold: SELECT T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T2.roomnumber  =  201

eval_err_num:76
medium pred: select avg ( STU_GPA ) from STUDENT
medium gold: SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1

eval_err_num:77
medium pred: select avg ( T3.STU_GPA ) from CLASS as T1 join ENROLL as T2 on T1.CLASS_CODE = T2.CLASS_CODE join STUDENT as T3 on T2.STU_NUM = T3.STU_NUM where T1.CRS_CODE = 1
medium gold: SELECT End FROM appointment ORDER BY START DESC LIMIT 1

eval_err_num:78
medium pred: select T2.ENROLL_GRADE from CLASS as T1 join ENROLL as T2 on T1.CLASS_CODE = T2.CLASS_CODE where T1.CRS_CODE = 1
medium gold: SELECT PrepNurse FROM appointment ORDER BY START DESC LIMIT 1

medium pred: select T1.DEPT_NAME from DEPARTMENT as T1 join COURSE as T2 on T1.DEPT_CODE = T2.DEPT_CODE group by T2.DEPT_CODE order by count ( * ) desc limit 1
medium gold: SELECT avg ( T2.stu_gpa )  FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code

hard pred: select T1.DEPT_ADDRESS from DEPARTMENT as T1 join COURSE as T2 on T1.DEPT_CODE = T2.DEPT_CODE group by T2.DEPT_CODE order by count ( * ) desc limit 1
hard gold: SELECT avg ( T2.stu_gpa )  FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code WHERE T3.crs_code   =   'ACCT-211'

hard pred: select T1.EMP_NUM from DEPARTMENT as T1 join COURSE as T2 on T1.DEPT_CODE = T2.DEPT_CODE group by T2.DEPT_CODE order by count ( * ) desc limit 1
hard gold: SELECT T1.enroll_grade FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code WHERE T3.crs_code   =   'ACCT-211'

extra pred: select count ( PROF_NUM ) from CLASS where CRS_CODE = 1
extra gold: SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1

extra pred: select T2.EMP_FNAME , T6.PROF_OFFICE from CLASS as T1 join EMPLOYEE as T2 on T1.PROF_NUM = T2.EMP_NUM join ENROLL as T3 on T1.CLASS_CODE = T3.CLASS_CODE join STUDENT as T4 on T3.STU_NUM = T4.STU_NUM join DEPARTMENT as T5 on T4.DEPT_CODE = T5.DEPT_CODE join PROFESSOR as T6 on T5.DEPT_CODE = T6.DEPT_CODE where T1.CRS_CODE = 1
extra gold: SELECT T4.DEPT_ADDRESS FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1

extra pred: select CRS_DESCRIPTION from COURSE where CRS_CODE = 1
extra gold: SELECT T4.EMP_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1

easy pred: select EMP_FNAME , EMP_LNAME from EMPLOYEE order by EMP_FNAME
easy gold: SELECT count ( distinct PROF_NUM )  FROM CLASS WHERE CRS_CODE  =  "ACCT-211"

extra pred: select T2.PROF_OFFICE from EMPLOYEE as T1 join PROFESSOR as T2 on T1.EMP_NUM = T2.EMP_NUM order by T1.EMP_FNAME
extra gold: SELECT EMP_FNAME, PROF_OFFICE FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num WHERE T1.CRS_CODE  =  "ACCT-211"

easy pred: select PROF_HIGH_DEGREE from PROFESSOR
easy gold: SELECT CRS_DESCRIPTION FROM COURSE WHERE CRS_CODE  =  "ACCT-211"

eval_err_num:79
medium pred: select name from user_profiles where uid in ( select uid from tweets )
medium gold: SELECT T2.emp_fname ,  T2.emp_lname FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num   =   T2.emp_num ORDER BY T2.emp_fname

eval_err_num:80
medium pred: select avg ( followers ) from user_profiles where uid in ( select uid from tweets )
medium gold: SELECT T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num   =   T2.emp_num ORDER BY T2.emp_fname

hard pred: select name from user_profiles
hard gold: SELECT name FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) 

hard pred: select name from user_profiles order by followers desc limit 1
hard gold: SELECT avg ( followers )  FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) 

easy pred: select name from user_profiles where uid = 1
easy gold: SELECT name FROM user_profiles

medium pred: select followers from user_profiles where name = 1
medium gold: SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1

medium pred: select T1.partitionid , T1.name from user_profiles as T1 join tweets as T2 on T1.uid = T2.uid where T1.uid = T2.uid group by T2.uid having count ( * ) < 1
medium gold: SELECT email FROM user_profiles ORDER BY followers DESC LIMIT 1

easy pred: select name from user_profiles
easy gold: SELECT name FROM user_profiles where uid  = 1

easy pred: select T1.name from user_profiles as T1 join tweets as T2 on T1.uid = T2.uid group by T2.uid having count ( * ) > 1
easy gold: SELECT followers FROM user_profiles where name  =  'Mary'

hard pred: select T1.name , count ( * ) from user_profiles as T1 join tweets as T2 on T1.uid = T2.uid group by T2.uid having count ( * ) > 1
hard gold: SELECT T1.partitionid, T1.name FROM user_profiles AS T1 join tweets AS T2 where T1.uid  =  T2.uid  group by T2.uid having count ( * ) <2

eval_err_num:81
easy pred: select count ( Name ) from country
easy gold: SELECT name FROM user_profiles

eval_err_num:82
medium pred: select count ( * ) from country ( select Name from country group by Name having count ( * ) > 1 )
medium gold: SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1

eval_err_num:83
medium pred: select Name from country group by Name having count ( * ) > 1
medium gold: SELECT T1.name, count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1

easy pred: select Roller_Coaster_ID from roller_coaster where Length > 1
easy gold: SELECT count ( distinct T1.Name )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID

easy pred: select Roller_Coaster_ID from roller_coaster where Length > 1 and Height > 1
easy gold: select count ( * )  from  ( SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1 ) 

medium pred: select Roller_Coaster_ID , Status from roller_coaster where Length > 1 and Height > 1
medium gold: SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1

medium pred: select Roller_Coaster_ID , Status , Speed from roller_coaster where Length > 1 and Height > 1
medium gold: SELECT T1.Name,count ( * )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1

eval_err_num:84
easy pred: select Name from wine where Price > 1 and Price > 1
easy gold: SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH  >  3300

extra pred: select Appelation from wine where Year > 1
extra gold: SELECT DISTINCT Name FROM WINE WHERE Price  >   ( SELECT min ( Price )  FROM wine WHERE Winery   =   "John Anthony" )  and  Price>300

easy pred: select * from wine order by Price desc limit 1
easy gold: SELECT Appelation FROM WINE WHERE YEAR  >  2008

hard pred: select * from wine order by Score desc limit 1
hard gold: SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area   =   "Central Coast"

hard pred: select * from wine order by Cases desc limit 1
hard gold: select state from APPELLATIONS where appelation in  ( SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area   =   "Central Coast" ) 

easy pred: select Winery from wine order by Cases asc limit 1
easy gold: select avg ( price )  from wine

medium pred: select Grape from wine where Score > 1
medium gold: SELECT * FROM WINE ORDER BY price desc limit 1

medium pred: select Appelation from wine where Score > 1
medium gold: SELECT * FROM WINE ORDER BY score desc limit 1

medium pred: select Name from wine where Score > 1
medium gold: SELECT * FROM WINE ORDER BY cases desc limit 1

medium pred: select Grape , Appelation , Name from wine where Score > 1
medium gold: SELECT Winery FROM WINE ORDER BY cases asc limit 1

eval_err_num:85
easy pred: select like ( Price ) , like ( Score ) , Year from wine group by Year
easy gold: SELECT  distinct  Grape  FROM WINE WHERE Score  >  93

easy pred: select No from wine order by Score desc limit 1
easy gold: SELECT  distinct appelation   FROM WINE WHERE Score  >  93

medium pred: select Grape , Appelation , Name from wine where Score > 1 order by Name
medium gold: SELECT max ( Price )  ,  max ( Score )  ,  YEAR FROM WINE GROUP BY YEAR

medium pred: select Appelation from wine where Score > 1
medium gold: SELECT  No  FROM WINE    order  BY  Score  desc   limit 1

eval_err_num:86
medium pred: select T2.Name from furniture_manufacte as T1 join manufacturer as T2 on T1.Manufacturer_ID = T2.Manufacturer_ID order by T1.Price_in_Dollar desc limit 1
medium gold: SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name

eval_err_num:87
easy pred: select Manufacturer_ID from furniture_manufacte order by Price_in_Dollar desc limit 1
easy gold: SELECT distinct Appelation  FROM WINE WHERE Score  >  93

eval_err_num:88
easy pred: select T1.Manufacturer_ID , T2.Num_of_Shops from furniture_manufacte as T1 join manufacturer as T2 on T1.Manufacturer_ID = T2.Manufacturer_ID order by T1.Price_in_Dollar desc limit 1
easy gold: SELECT distinct state from  WINE WHERE Score  >  93

eval_err_num:89
hard pred: select count ( * ) from SportsInfo ( select * from SportsInfo group by StuID having count ( * ) > 1 )
hard gold: SELECT t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1

eval_err_num:90
hard pred: select T2.LName , T2.LName from SportsInfo as T1 join Student as T2 on T1.StuID = T2.StuID group by T1.StuID having count ( * ) > 1
hard gold: SELECT t1.Manufacturer_ID FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1

easy pred: select sum ( GamesPlayed ) from SportsInfo
easy gold: SELECT count ( * )  FROM  ( SELECT * FROM Sportsinfo GROUP BY StuID having count ( * )  > 1 ) 

medium pred: select sum ( GamesPlayed ) from SportsInfo where OnScholarship = 1
medium gold: SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID having count ( * ) >1

easy pred: select GType from Video_Games where GName = 1
easy gold: select sum ( GamesPlayed )  from sportsinfo

easy pred: select T1.Hours_Played from Plays_Games as T1 join Student as T2 on T1.StuID = T2.StuID where T2.LName = 1 and T2.Fname = 1
easy gold: SELECT sum ( gamesplayed )  FROM Sportsinfo WHERE onscholarship   =   'Y'

easy pred: select city_code from Student where Fname = 1 and LName = 1
easy gold: SELECT distinct sportname FROM Sportsinfo

eval_err_num:91
easy pred: select Type , count ( * ) from Institution group by Type
easy gold: SELECT GType from Video_games where GName = 'The Vanishing of Eric Calder'

eval_err_num:92
medium pred: select Type , count ( * ) , sum ( Enrollment ) from Institution group by Type
medium gold: SELECT Hours_Played FROM  student as T1 JOIN Plays_Games AS T2  WHERE Lname = 'Kim' and Fname = 'Tracy'

medium pred: select Institution , count ( * ) from Institution group by Institution_id
medium gold: SELECT TYPE , count ( * )  FROM institution GROUP BY TYPE

medium pred: select T1.protein_name from protein as T1 join Institution as T2 on T1.Institution_id = T2.Institution_id where T2.Institution = 1
medium gold: SELECT TYPE , count ( * )  , sum ( enrollment )  FROM institution GROUP BY TYPE

medium pred: select Institution from Institution
medium gold: SELECT T1.institution ,  count ( * )  FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id GROUP BY T1.institution_id

medium pred: select Institution , count ( * ) from Institution group by Institution_id
medium gold: SELECT T2.protein_name   FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id where T1.institution = "Lindenwood University–Belleville"

medium pred: select Institution , Location from Institution
medium gold: SELECT divergence_from_human_lineage FROM protein where protein_name = "Centromeric protein E, putative" or protein_name = "conserved hypothetical protein"

eval_err_num:93
easy pred: select count ( origin ) from train
easy gold: SELECT institution FROM institution

eval_err_num:94
medium pred: select time from train order by time desc limit 1
medium gold: SELECT T1.institution ,  count ( * )  FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id GROUP BY T1.institution_id

eval_err_num:95
medium pred: select count ( train_number ) from train
medium gold: SELECT institution, location from institution

easy pred: select time from train where destination = 1
easy gold: SELECT count ( distinct origin )  FROM train

medium pred: select count ( * ) from train where destination = 1
medium gold: SELECT time FROM train order by time desc limit 1

easy pred: select train_number from train where destination = 1
easy gold: SELECT count ( train_number )  FROM train

easy pred: select T3.name from station as T1 join route as T2 on T1.id = T2.station_id join train as T3 on T2.train_id = T3.id where T1.local_authority = 1
easy gold: SELECT TIME  FROM train WHERE destination   =   'Chennai'

easy pred: select T3.name , T3.time from station as T1 join route as T2 on T1.id = T2.station_id join train as T3 on T2.train_id = T3.id where T1.local_authority = 1
easy gold: SELECT count ( * )  FROM train WHERE destination   =   'Chennai'

easy pred: select T3.name , T3.time , T3.train_number , T2.train_id from station as T1 join route as T2 on T1.id = T2.station_id join train as T3 on T2.train_id = T3.id where T1.local_authority = 1
easy gold: SELECT train_number FROM train WHERE destination   =   'Chennai'

hard pred: select station_id , count ( * ) from route group by station_id
hard gold: SELECT distinct t3.name  FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id JOIN train AS t3 ON t2.train_id   =   t3.id WHERE t1.local_authority   =   "Chiltern"

hard pred: select network_name from station
hard gold: SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  "Chiltern"

hard pred: select services from station
hard gold: SELECT t3.name , t3.time,t3.train_number ,t2.train_id  FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  "Chiltern"

eval_err_num:96
medium pred: select count ( * ) from VOTES where state = 1 or state = 1
medium gold: SELECT t2.station_id, count ( * )  FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id

eval_err_num:97
easy pred: select contestant_number from VOTES
easy gold: SELECT network_name   FROM station

eval_err_num:98
easy pred: select count ( T1.vote_id ) from VOTES as T1 join CONTESTANTS as T2 on T1.contestant_number = T2.contestant_number where T2.contestant_number = 1
easy gold: SELECT services  FROM station

eval_err_num:99
medium pred: select count ( course_id ) from Courses
medium gold: SELECT count ( * )  FROM votes WHERE state   =   'NY' or  state   =   'CA'

eval_err_num:100
easy pred: select course_name from Courses group by course_name order by count ( * ) limit 1
easy gold: SELECT distinct contestant_number FROM votes

easy pred: select transcript_date from Transcripts where transcript_id in ( select transcript_id from Transcripts ) order by transcript_date limit 1
easy gold: SELECT  count ( distinct course_id )  from courses

eval_err_num:101
medium pred: select count ( * ) , T2.course_name from Student_Enrolment_Courses as T1 join Courses as T2 on T1.course_id = T2.course_id group by student_enrolment_T2.course_id order by count ( * ) desc limit 1
medium gold: SELECT * FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

hard pred: select course_id from Courses order by course_name limit 1
hard gold: SELECT count ( * )   FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

hard pred: select course_id from Courses where course_name = 1
hard gold: SELECT student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  DESC LIMIT 1

hard pred: select count ( * ) from Student_Enrolment_Courses where student_course_id = 1
hard gold: SELECT count ( * )  FROM Transcript_Contents GROUP BY student_course_id ORDER BY count ( * )  LIMIT 1

eval_err_num:102
extra pred: select Ship_ID from Ship where Name = 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name ORDER BY count ( * )  LIMIT 1

eval_err_num:103
easy pred: select Flag from Ship where Name = 1
easy gold: SELECT course_id from courses where course_name  =  "math"

eval_err_num:104
medium pred: select Built_Year from Ship where Name = 1
medium gold: SELECT  count ( * )  FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id   =   T2.course_id GROUP BY T1.course_name having T1.course_id  =  14

eval_err_num:105
easy pred: select Year from festival_detail group by Year order by count ( * ) desc limit 1
easy gold: SELECT ship_id FROM ship WHERE name  =  "HM Cutter Avenger"

eval_err_num:106
easy pred: select count ( * ) from festival_detail group by Year having Year = 1
easy gold: SELECT Flag FROM ship WHERE name  =  "HMS Manxman"

eval_err_num:107
easy pred: select Num_of_Audience from festival_detail where Year = 1
easy gold: SELECT Built_year FROM ship WHERE name  =  "HMS Gorgon"

eval_err_num:108
hard pred: select Name from people group by Name
hard gold: SELECT year FROM festival_detail group by year order by count ( * )  desc limit 1

eval_err_num:109
easy pred: select Party from people group by Name
easy gold: SELECT count ( * )  FROM festival_detail group by year having year  =  2008

eval_err_num:110
easy pred: select count ( * ) from debate_people where If_Affirmative_Win = 1
easy gold: SELECT num_of_audience FROM festival_detail where year  =  2008

eval_err_num:111
medium pred: select Age from member where Name = 1
medium gold: SELECT T2.Name  FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative   =   T2.People_ID GROUP BY T2.Name

eval_err_num:112
medium pred: select Time_of_purchase from member where Name = 1
medium gold: SELECT T2.Party FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative   =   T2.People_ID GROUP BY T2.Name

eval_err_num:113
easy pred: select Level_of_membership from member where Name = 1
easy gold: SELECT count ( * )  FROM debate_people WHERE If_Affirmative_Win  =  'T'

easy pred: select Num_of_shaff_in_charge from happy_hour where Month = 1
easy gold: SELECT age from member where name  =  'Ashby, Lazale'

easy pred: select count ( Shop_ID ) from happy_hour
easy gold: SELECT Time_of_purchase from member where name  =  'Ashby, Lazale'

easy pred: select Shop_ID from happy_hour group by Shop_ID order by count ( * ) asc limit 1
easy gold: SELECT Level_of_membership from member where name  =  'Breton, Robert'

eval_err_num:114
easy pred: select Name from program
easy gold: SELECT Num_of_shaff_in_charge FROM happy_hour where Month  =  "June"

eval_err_num:115
easy pred: select Name from program order by Launch desc limit 1
easy gold: SELECT count ( distinct shop_id )  FROM happy_hour

eval_err_num:116
hard pred: select Owner from program order by Launch desc limit 1
hard gold: SELECT shop_id FROM happy_hour group by shop_id order by count ( * )  asc limit 1

easy pred: select Program_ID from program
easy gold: SELECT name FROM program

medium pred: select T2.Name from broadcast as T1 join program as T2 on T1.Program_ID = T2.Program_ID group by T1.Program_ID order by count ( * ) desc limit 1
medium gold: SELECT name FROM program ORDER BY launch DESC LIMIT 1

eval_err_num:117
easy pred: select like ( capacity ) from classroom where building = 1
easy gold: SELECT Program_id from  program

eval_err_num:118
extra pred: select like ( capacity ) from classroom
extra gold: SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id GROUP BY t2.program_id ORDER BY count ( * )  DESC LIMIT 1

easy pred: select count ( course_id ) from course
easy gold: SELECT max ( capacity )  FROM classroom Where building  =  "Lamberton"

easy pred: select count ( * ) from ( select T1.title from course as T1 join prereq as T2 on T1.course_id = T2.prereq_id group by T2.course_id having count ( * ) > 1 )
easy gold: SELECT max ( capacity )  FROM classroom

easy pred: select T1.title from course as T1 join prereq as T2 on T1.course_id = T2.prereq_id group by T2.course_id having count ( * ) > 1
easy gold: SELECT sum ( room_number )  FROM classroom

easy pred: select T1.dept_name , T1.dept_name from course as T1 join prereq as T2 on T1.course_id = T2.prereq_id group by T2.course_id having count ( * ) > 1
easy gold: SELECT avg ( capacity )  FROM classroom

medium pred: select T1.credits , T1.dept_name from course as T1 join prereq as T2 on T1.course_id = T2.prereq_id group by T2.course_id having count ( * ) > 1
medium gold: SELECT * FROM classroom order by capacity limit 1

easy pred: select ID from teaches where semester = 1 and year = 1
easy gold: select count ( course_id )  from course

easy pred: select ID from teaches where semester = 1 and year = 1 except select ID from teaches where semester = 1 and year = 1
easy gold: select count ( * )  from  ( SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1 ) 

eval_err_num:119
medium pred: select like ( salary ) from instructor
medium gold: SELECT id FROM teaches WHERE semester   =   'Fall' AND YEAR   =   2009

extra pred: select T3.salary from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID where T1.dept_name = 1
extra gold: SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010

easy pred: select title from course where dept_name = 1 except select title from course where dept_name = 1
easy gold: select max ( salary )  from  instructor

hard pred: select credits from course where title = 1
hard gold: SELECT T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id   =   T2.id JOIN student AS T3 ON T1.s_id   =   T3.id WHERE T3.dept_name   =   'Math'

easy pred: select course_id from course where title = 1
easy gold: select salary from instructor where name  =  'McKinnon'

hard pred: select count ( T1.ID ) , T3.dept_name from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID group by T3.dept_name
hard gold: SELECT title FROM course WHERE dept_name   =   'Statistics' EXCEPT SELECT title FROM course WHERE dept_name   =   'Psychology'

easy pred: select count ( T1.ID ) , T3.dept_name from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID group by T3.dept_name
easy gold: SELECT credits FROM course WHERE title   =   'Care and Feeding of Cats'

easy pred: select count ( * ) from student
easy gold: SELECT course_id FROM course WHERE title   =   'Care and Feeding of Cats'

hard pred: select name from instructor
hard gold: SELECT count ( DISTINCT T2.id ) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name   =   T2.dept_name JOIN instructor AS T3 ON T1.dept_name   =   T3.dept_name GROUP BY T3.dept_name

hard pred: select T3.name from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID where T1.dept_name = 1
hard gold: SELECT count ( DISTINCT T2.id )  ,  count ( DISTINCT T3.id )  ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name   =   T2.dept_name JOIN instructor AS T3 ON T1.dept_name   =   T3.dept_name GROUP BY T3.dept_name

easy pred: select T3.name , T3.salary from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID where T1.dept_name = 1
easy gold: SELECT count ( * )  from student

medium pred: select T3.name , T3.salary from student as T1 join advisor as T2 on T1.ID = T2.s_ID join instructor as T3 on T2.i_ID = T3.ID where T1.dept_name = 1
medium gold: SELECT T2.name FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name   =   T2.dept_name where T1.dept_name = 'Astronomy'

easy pred: select T2.i_ID from student as T1 join advisor as T2 on T1.ID = T2.s_ID where T1.dept_name = 1
easy gold: SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id   =   T2.id

hard pred: select count ( T2.i_ID ) from student as T1 join advisor as T2 on T1.ID = T2.s_ID where T1.dept_name = 1
hard gold: SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'

medium pred: select name from instructor where dept_name = 1
medium gold: SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id   =   T2.id WHERE T2.dept_name   =   'History'

medium pred: select count ( ID ) from instructor
medium gold: SELECT count ( i_id )  FROM advisor AS T1 JOIN student AS T2 ON T1.s_id   =   T2.id WHERE T2.dept_name   =   'History'

eval_err_num:120
easy pred: select count ( * ) from Products where product_name = 1
easy gold: SELECT name FROM instructor WHERE dept_name = 'Statistics'

eval_err_num:121
easy pred: select product_Characteristics.characteristic_id from Products as T1 join Product_Characteristics as T2 on T1.product_id = T2.product_id where T1.product_name = 1
easy gold: SELECT count ( ID )  FROM instructor

eval_err_num:122
easy pred: select typical_selling_price from Products where product_name = 1
easy gold: SELECT salary FROM instructor where id = 78699

eval_err_num:123
easy pred: select product_Characteristics.characteristic_id from Product_Characteristics group by product_Characteristics.characteristic_id order by count ( product_Characteristics.* ) desc limit 1
easy gold: SELECT dept_name FROM instructor where name = 'McKinnon'

medium pred: select count ( * ) from Characteristics where characteristic_name = 1
medium gold: SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   "sesame"

medium pred: select T1.product_name from Products as T1 join Product_Characteristics as T2 on T1.product_id = T2.product_id join Characteristics as T3 on T2.characteristic_id = T3.characteristic_id where T3.characteristic_name = 1
medium gold: SELECT characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   "sesame"

hard pred: select product_category_code from Products
hard gold: SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   "hot"

hard pred: select unit_of_measure from Ref_Product_Categories where product_category_code = 1
hard gold: SELECT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   "hot"

hard pred: select T2.unit_of_measure from Products as T1 join Ref_Product_Categories as T2 on T1.product_category_code = T2.product_category_code where T1.product_name = 1
hard gold: SELECT t1.typical_selling_price FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   "lotus"

eval_err_num:124
easy pred: select product_name from Products where product_description max 1
easy gold: select distinct product_category_code from Products

eval_err_num:125
easy pred: select typical_buying_price from Products where product_description max 1
easy gold: select unit_of_measure from Ref_Product_Categories where product_category_code  =  'Seeds'

eval_err_num:126
medium pred: select avg ( typical_buying_price ) from Products where product_description max 1
medium gold: SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code WHERE t1.product_name   =   "chervil"

eval_err_num:127
hard pred: select city from Addresses group by city order by count ( * ) desc limit 1
hard gold: SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'

eval_err_num:128
hard pred: select count ( * ) from Addresses group by city order by count ( * ) desc limit 1
hard gold: SELECT T2.typical_buying_price FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'

eval_err_num:129
hard pred: select T2.first_name , T2.last_name from Addresses as T1 join Customers as T2 on T1.address_id = T2.customer_address_id group by T1.city order by count ( * ) desc limit 1
hard gold: SELECT avg ( T2.typical_buying_price )  FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'

extra pred: select state_province_county from Addresses group by state_province_county order by count ( * ) desc limit 1
extra gold: SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1

extra pred: select count ( * ) from Addresses group by state_province_county order by count ( * ) desc limit 1
extra gold: SELECT count ( * )  FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1

extra pred: select city from Addresses where state_province_county = 1 group by city order by count ( * ) desc limit 1
extra gold: select T1.first_name, T1.last_name from customers as T1 join addresses as T2 on T2.address_id  =   T1.customer_address_id where T2.city  =   ( SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1 ) 

extra pred: select T1.country , T1.state_province_county from Addresses as T1 join Staff as T2 on T1.address_id = T2.staff_address_id where T2.first_name = 1 and T2.last_name = 1
extra gold: SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count ( * )  DESC LIMIT 1

extra pred: select T1.lesson_id from Lessons as T1 join Staff as T2 on T1.staff_id = T2.staff_id where T2.first_name = 1
extra gold: SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Janessa" AND T2.last_name  =  "Sawayn"

medium pred: select address_id from Addresses where city = 1
medium gold: SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  "Janessa"

easy pred: select * from Customers where first_name = 1 and last_name = 1
easy gold: SELECT * from Lessons where lesson_id  =  4

eval_err_num:130
medium pred: select Duration from actor order by age desc limit 1
medium gold: SELECT T2.address_id FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id WHERE T2.city  =  "Lockmanfurt"

eval_err_num:131
medium pred: select Character from actor where Name = 1
medium gold: SELECT * FROM Customers where first_name  =  "Sigrid" and last_name  =  "Schmeler"

eval_err_num:132
medium pred: select Country from member group by Country order by count ( * ) desc limit 1
medium gold: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1

eval_err_num:133
easy pred: select Name from member where Country = 1
easy gold: SELECT Character FROM actor where Name  =  'Tom Oliver'

eval_err_num:134
easy pred: select Country from member except select Country from member where Country = 1
easy gold: SELECT Name FROM actor

hard pred: select count ( Name ) from member where Country = 1 or Country = 1
hard gold: SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * )  DESC LIMIT 1

easy pred: select Name from member where Country = 1 or Country = 1
easy gold: SELECT name FROM member WHERE Country = "United States"

hard pred: select Name from member where Country = 1 or Country = 1 order by Name
hard gold: SELECT DISTINCT Country FROM member EXCEPT SELECT Country FROM member WHERE Country = "United States"

eval_err_num:135
medium pred: select Annual_entry_exit from station where Station_ID = 1
medium gold: SELECT count ( Name )  FROM member WHERE Country   =   "United States" OR Country   =   "Canada"

eval_err_num:136
medium pred: select Total_Passengers from station where Station_ID = 1 or Station_ID = 1
medium gold: SELECT Name FROM member WHERE Country   =   "United States" OR Country   =   "Canada"

eval_err_num:137
hard pred: select T1.Name from station as T1 join train_station as T2 on T1.Station_ID = T2.Station_ID join train as T3 on T2.Train_ID = T3.Train_ID where T3.Name = 1 != select T4.Name from station as T4 join train_station as T5 on T4.Station_ID = T5.Station_ID join train as T6 on T5.Train_ID = T6.Train_ID where T6.Name = 1
hard gold: SELECT Name FROM member WHERE Country   =   "United States" OR Country   =   "Canada" order by name

easy pred: select Total_Passengers from station order by Total_Passengers desc limit 1
easy gold: SELECT Annual_entry_exit FROM station where station_id  =  "1"

medium pred: select Name , Main_Services from station order by Total_Passengers desc limit 1
medium gold: SELECT Total_Passengers FROM station where station_id  =  "1" or station_id  =  "2"

extra pred: select Name , Main_Services from station order by Total_Passengers asc limit 1
extra gold: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id WHERE T3.Name   =   "Ananthapuri Express" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id WHERE T3.Name   =   "Guruvayur Express"

eval_err_num:138
medium pred: select count ( * )
medium gold: SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3

eval_err_num:139
medium pred: select T2.customer_first_name , T2.customer_last_name , T1.customer_id from Accounts as T1 join Customers as T2 group by T1.customer_id order by count ( * ) desc limit 1
medium gold: SELECT name, main_services FROM station ORDER BY total_passengers DESC LIMIT 3

eval_err_num:140
medium pred: select T2.customer_first_name , T2.customer_last_name , T1.customer_id from Accounts as T1 join Customers as T2 group by T1.customer_id order by count ( * ) asc limit 1
medium gold: SELECT name, main_services FROM station ORDER BY total_passengers asc LIMIT 3

easy pred: select customer_id , customer_first_name from Customers except select T2.customer_id , T1.customer_first_name from Customers as T1 join Customers_Cards as T2 where T2.card_type_code = 1
easy gold: SELECT count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id

eval_err_num:141
extra pred: select T1.customer_id , T1.customer_first_name , T1.customer_last_name from Customers as T1 join Customers_Cards as T2 where T2.card_type_code intersect 1
extra gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1

extra pred: select customer_id , card_number from Customers_Cards
extra gold: SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  ASC LIMIT 1

extra pred: select count ( * ) from Customers where customer_id not in ( select customer_id from Accounts )
extra gold: SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE card_type_code   =   "Credit"

extra pred: select customer_first_name from Customers where customer_id not in ( select customer_id from Accounts )
extra gold: SELECT customer_id ,  customer_first_name ,customer_last_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name,T2.customer_last_name  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE card_type_code   =   "Debit"

medium pred: select customer_address from Customers where customer_first_name = 1
medium gold: SELECT customer_id ,  card_number FROM Customers_cards

eval_err_num:142
extra pred: select count ( * ) from Student where city_code = 1
extra gold: SELECT count ( * )  FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Accounts ) 

eval_err_num:143
hard pred: select count ( * ) from Voting_record where Election_Cycle = 1
hard gold: SELECT customer_first_name FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Accounts ) 

eval_err_num:144
easy pred: select T2.Fname , T2.LName from Voting_record as T1 join Student as T2 on T1.Class_Senator_Vote = T2.StuID where T1.Election_Cycle = 1
easy gold: SELECT customer_address FROM Customers WHERE customer_first_name  =  "Armani"

medium pred: select count ( * ) from Student where Sex = 1
medium gold: SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE T1.city_code   =   "NYC"

medium pred: select Fname , LName from Student where Sex = 1
medium gold: SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE  T2.Election_Cycle   =   "Spring"

medium pred: select sum ( T1.President_Vote ) from Voting_record as T1 join Student as T2 on T1.Class_Senator_Vote = T2.StuID where T2.Sex = 1
medium gold: SELECT distinct T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE  T2.Election_Cycle   =   "Spring"

medium pred: select Major , count ( * ) from Student group by Major
medium gold: SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   "F"

medium pred: select ( Major ) from Student
medium gold: SELECT distinct T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   "F"

medium pred: select Major , LName from Student
medium gold: SELECT sum ( T2.President_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   "F"

medium pred: select Major , Fname from Student
medium gold: SELECT sum ( T2.Secretary_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   "F"

medium pred: select Major from Student group by Major order by count ( * ) desc limit 1
medium gold: SELECT sum ( T2.Vice_President_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   "F"

eval_err_num:145
medium pred: select product_id , product_name from Products where product_price < 1
medium gold: SELECT Major, count ( * )  FROM STUDENT GROUP BY major

eval_err_num:146
easy pred: select product_id , product_name from Products where product_price > 1
easy gold: SELECT distinct ( Major )  FROM STUDENT

eval_err_num:147
medium pred: select count ( product_id ) from Products where product_price < 1 or product_price > 1
medium gold: SELECT Major, LName FROM STUDENT

medium pred: select count ( * ) from Products
medium gold: SELECT product_id ,  product_name FROM products WHERE product_price  <  600

medium pred: select product_name from Products
medium gold: SELECT product_id ,  product_name FROM products WHERE product_price  >  900

medium pred: select product_price from Products where product_name = 1
medium gold: SELECT count ( * )  FROM products WHERE product_price  <  600 OR product_price  >  900

easy pred: select product_id from Order_Items group by product_id order by count ( * ) desc limit 1
easy gold: SELECT count ( * )  FROM products

easy pred: select product_id from Order_Items group by product_id order by count ( * ) limit 1
easy gold: SELECT product_name FROM products

easy pred: select count ( * ) from Order_Items group by product_id having product_id = 1
easy gold: SELECT product_PRICE FROM products WHERE product_name  =  "red jeans"

easy pred: select count ( * ) from Order_Items group by product_id having product_id = 1
easy gold: SELECT product_price FROM products WHERE product_name  =  "black jeans"

hard pred: select product_id from Product_Suppliers order by total_amount_purchased desc limit 1
hard gold: SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * )  DESC LIMIT 1

hard pred: select product_id from Product_Suppliers order by total_amount_purchased asc limit 1
hard gold: SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * )  LIMIT 1

medium pred: select job_title_code from Staff_Department_Assignments
medium gold: SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3

medium pred: select T1.staff_id from Staff as T1 join Staff_Department_Assignments as T2 on T1.staff_id = T2.staff_id where T2.job_title_code = 1
medium gold: SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased ASC LIMIT 3

easy pred: select date_assigned_to from Staff_Department_Assignments
easy gold: SELECT job_title_code from staff_department_assignments

medium pred: select staff_id , date_assigned_from from Staff_Department_Assignments
medium gold: SELECT T1.staff_id  FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Department Manager"

medium pred: select staff_id , date_assigned_from from Staff_Department_Assignments order by date_assigned_from desc limit 1
medium gold: SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Department Manager"

eval_err_num:148
easy pred: select Campus from Campuses where County = 1 and Year > 1
easy gold: SELECT date_assigned_to  from Staff_Department_Assignments

eval_err_num:149
medium pred: select Campus from Campuses where County = 1 and Year < 1
medium gold: SELECT staff_id, date_assigned_from  from Staff_Department_Assignments

eval_err_num:150
medium pred: select Year from Campuses where County = 1 and Year < 1
medium gold: SELECT staff_id, date_assigned_from  from Staff_Department_Assignments order by date_assigned_from desc limit 1

medium pred: select count ( * ) from Campuses
medium gold: SELECT campus FROM campuses WHERE county   =   "Los Angeles" AND YEAR  >  1950

medium pred: select Campus from Campuses
medium gold: SELECT campus FROM campuses WHERE county   =   "Los Angeles" AND YEAR  <  1950

medium pred: select Location from Campuses where Campus = 1
medium gold: SELECT year FROM campuses WHERE county   =   "Los Angeles" AND YEAR  <  1950

easy pred: select Id from Campuses where Year = 1
easy gold: SELECT count ( * )  FROM campuses

easy pred: select T2.TotalEnrollment_AY from Campuses as T1 join enrollments as T2 on T1.Id = T2.Campus where T1.Campus = 1
easy gold: SELECT campus FROM campuses

easy pred: select T1.County from Campuses as T1 join enrollments as T2 on T1.Id = T2.Campus where T2.FTE_AY = 1
easy gold: SELECT location FROM campuses where campus  =  "California State University-Bakersfield"

easy pred: select T1.Campus from Campuses as T1 join enrollments as T2 on T1.Id = T2.Campus where T2.Year = 1 and T2.TotalEnrollment_AY > 1
easy gold: SELECT county FROM campuses where campus  =  "California State University-Chico"

easy pred: select Year from degrees
easy gold: SELECT id from campuses where year  =  1956

medium pred: select sum ( Degrees ) , Year from degrees group by Year
medium gold: SELECT t2.TotalEnrollment_AY FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus where t1.campus  =  "California State University-Channel Islands"

medium pred: select Year from degrees group by Year order by sum ( Degrees ) desc limit 1
medium gold: SELECT t1.county FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus where t2.FTE_AY  =  178

eval_err_num:151
easy pred: select T1.first_name , T1.last_name from actor as T1 join film_actor as T2 on T1.actor_id = T2.actor_id group by film_T1.actor_id having count ( * ) > 1
easy gold: SELECT DISTINCT YEAR FROM degrees

eval_err_num:152
medium pred: select count ( * ) from film where film_id = 1
medium gold: SELECT sum ( degrees ) , YEAR FROM degrees GROUP BY YEAR

eval_err_num:153
hard pred: select T1.first_name , T1.last_name from customer as T1 join rental as T2 on T1.customer_id = T2.customer_id join inventory as T3 on T2.inventory_id = T3.inventory_id join film as T4 on T3.film_id = T4.film_id where T4.film_id = 1
hard gold: SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum ( degrees )  DESC LIMIT 1

medium pred: select count ( * ) from customer
medium gold: SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count ( * )  > 30

easy pred: select first_name from customer
easy gold: select count ( * )  from film_actor where actor_id = '9'

easy pred: select city_id from city where city = 1
easy gold: SELECT COUNT ( * )  FROM customer

easy pred: select last_update from address where district = 1
easy gold: SELECT first_name FROM customer

eval_err_num:154
easy pred: select T1.first_name , T1.last_name from actor as T1 join film_actor as T2 on T1.actor_id = T2.actor_id group by film_T1.actor_id order by count ( * ) desc limit 1
easy gold: SELECT distinct city_id  from address where district = "Alberta"

easy pred: select T6.actor_id from customer as T1 join rental as T2 on T1.customer_id = T2.customer_id join inventory as T3 on T2.inventory_id = T3.inventory_id join film as T4 on T3.film_id = T4.film_id join film_actor as T5 on T4.film_id = T5.film_id join actor as T6 on T5.actor_id = T6.actor_id where T1.first_name = 1 and T1.last_name = 1
easy gold: SELECT distinct last_update from address where district = "QLD"

easy pred: select T1.last_update from inventory as T1 join rental as T2 on T1.inventory_id = T2.inventory_id join customer as T3 on T2.customer_id = T3.customer_id where T3.first_name = 1 and T3.last_name = 1
easy gold: SELECT address from address where district = "QLD"

extra pred: select count ( store_id ) from store
extra gold: SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id   =   T2.actor_id GROUP BY T2.actor_id ORDER BY count ( * )  DESC LIMIT 1

medium pred: select T2.store_id from inventory as T1 join store as T2 on T1.store_id = T2.store_id group by T1.store_id order by count ( * ) limit 1
medium gold: SELECT actor_id from actor where first_name  =  'GINA' and last_name  =  'DEGENERES'

medium pred: select store_id from inventory group by store_id order by count ( * ) desc limit 1
medium gold: SELECT last_update from actor where first_name  =  'GINA' and last_name  =  'DEGENERES'

easy pred: select title from film
easy gold: SELECT count ( distinct store_id )  FROM inventory

hard pred: select T2.inventory_id , T1.film_id from inventory as T1 join rental as T2 on T1.inventory_id = T2.inventory_id group by T2.inventory_id order by count ( * ) desc limit 1
hard gold: SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * )  asc LIMIT 1

hard pred: select special_features from film where title = 1
hard gold: SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * )  desc LIMIT 1

hard pred: select count ( * ) from customer
hard gold: SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id JOIN rental AS T3 ON T2.inventory_id   =   T3.inventory_id GROUP BY T2.inventory_id

extra pred: select count ( * ) from payment ( select * from payment group by payment_id having count ( * ) > = 1 )
extra gold: SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count ( * )  DESC LIMIT 1

easy pred: select T1.first_name , T1.last_name from customer as T1 join payment as T2 on T1.customer_id = T2.customer_id order by T2.amount limit 1
easy gold: SELECT special_features FROM film  WHERE title  =  "ACADEMY DINOSAUR"

eval_err_num:155
easy pred: select avg ( Lifespan ) from representative
easy gold: SELECT count ( * )  from customer

eval_err_num:156
easy pred: select Party from representative group by Party having count ( * ) > = 1
easy gold: select count ( * )  from  ( SELECT * FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ) 

eval_err_num:157
extra pred: select Party from representative group by Party having count ( * ) > = 1
extra gold: SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount )  ASC LIMIT 1

easy pred: select State from representative group by State having count ( * ) > = 1
easy gold: SELECT avg ( lifespan )  FROM representative

easy pred: select Name from representative where State in ( select State from representative group by State having count ( * ) > = 1 )
easy gold: SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )    > =    2

easy pred: select Party from representative group by State having count ( * ) > = 1
easy gold: SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )    > =    3

eval_err_num:158
easy pred: select City_ID from city where Population > 1
easy gold: SELECT State FROM representative GROUP BY State HAVING COUNT ( * )    > =    2

eval_err_num:159
hard pred: select City_ID from city where Population < 1
hard gold: select name from representative where state in  ( SELECT state FROM representative GROUP BY State HAVING COUNT ( * )    > =    2 ) 

eval_err_num:160
easy pred: select count ( * ) from book_club where Category = 1 and Year > 1
easy gold: SELECT city_id FROM city WHERE population > 1000

eval_err_num:161
medium pred: select Name from stadium where Stadium_ID not in ( select Stadium_ID from concert where Year = 1 )
medium gold: select count ( * ) from book_club where Category = 'Gay SF/F' and year>'1989'

eval_err_num:162
hard pred: select T3.Name from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where T1.Open_Year < 1 != select T6.Name from museum as T4 join visit as T5 on T4.Museum_ID = T5.Museum_ID join visitor as T6 on T5.visitor_ID = T6.ID where T4.Open_Year < 1
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.year   =   2014

eval_err_num:163
easy pred: select Name from museum where Open_Year < 1 != select Name from museum where Open_Year < 1
easy gold: select Capacity from stadium where name  =  'Balmoor'

eval_err_num:164
medium pred: select Level_of_membership from visitor where Name = 1
medium gold: select T2.Theme from stadium as T1 join concert as T2 on T1.Stadium_ID  =  T2.Stadium_ID where T1.Name  =  'Balmoor'

extra pred: select count ( * ) from visit
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011

extra pred: select count ( Name ) from visitor where Level_of_membership > 1
extra gold: SELECT t3.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 AND t1.name  =   ( SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID   =   t2.Museum_ID WHERE t3.open_year  >  2011 ) 

easy pred: select Name from visitor where Level_of_membership > 1
easy gold: SELECT level_of_membership FROM visitor WHERE name  =  "Fernando Gago"

easy pred: select Name from visitor where Level_of_membership > 1 order by Level_of_membership desc
easy gold: SELECT age FROM visitor WHERE name  =  "Fernando Gago"

easy pred: select sum ( T1.Total_spent ) from visit as T1 join museum as T2 on T1.Museum_ID = T2.Museum_ID where T2.Open_Year not in ( select Museum_ID from museum where Open_Year > 1 )
easy gold: SELECT count ( * )  from visitor

easy pred: select T3.Name , T3.Level_of_membership from museum as T1 join visit as T2 on T1.Museum_ID = T2.Museum_ID join visitor as T3 on T2.visitor_ID = T3.ID where T1.Open_Year not in ( select Museum_ID from museum where Open_Year > 1 )
easy gold: SELECT count ( * )  FROM visitor WHERE Level_of_membership  >  4

eval_err_num:165
extra pred: select T2.student_id , T1.personal_name from Students as T1 join Student_Course_Enrolment as T2 on T1.student_id = T2.student_id where T2.course_id = 1
extra gold: SELECT count ( * )  FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

eval_err_num:166
extra pred: select date_of_registration from Students where student_id = 1
extra gold: SELECT name, level_of_membership FROM visitor WHERE id NOT IN  ( SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID   =   t2.Museum_ID WHERE t1.open_year  >  2010 ) 

medium pred: select count ( * ) from Subjects where subject_name = 1
medium gold: SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id where T1.course_id = '2'

easy pred: select count ( * ) from Subjects where subject_name = 1
easy gold: select date_of_registration from students where student_id = '1'

medium pred: select count ( * ) from Subjects where subject_name = 1
medium gold: select T1.login_name, T1.password from students AS T1 JOIN Student_Course_Enrolment AS T2 ON T2.student_id = T1.student_id WHERE registration_id = 2

medium pred: select count ( student_id ) from Students where family_name = 1
medium gold: SELECT COUNT ( * )  FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id WHERE T2.subject_name  =  "Computer Science"

medium pred: select personal_name from Students where family_name = 1
medium gold: SELECT COUNT ( * )  FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id WHERE T2.subject_name  =  "Arts"

easy pred: select T2.student_id , T1.middle_name from Students as T1 join Student_Course_Enrolment as T2 on T1.student_id = T2.student_id group by T2.student_id having count ( * ) < = 1
easy gold: select count ( student_id )  from Students where family_name  =  "Zieme"

easy pred: select date_of_enrolment , date_of_completion from Student_Course_Enrolment group by student_id having count ( * ) < = 1
easy gold: select personal_name from Students where family_name  =  "Zieme"

medium pred: select count ( login_name ) from Students
medium gold: SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )   < =   2

eval_err_num:167
medium pred: select login_name != from Course_Authors_and_Tutors select login_name from Students
medium gold: SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )   < =   2

easy pred: select T1.date_of_enrolment from Student_Course_Enrolment as T1 join Courses as T2 on T1.course_id = T2.course_id where T2.course_name = 1
easy gold: SELECT count ( distinct login_name )  FROM Students

hard pred: select T1.date_of_enrolment from Student_Course_Enrolment as T1 join Courses as T2 on T1.course_id = T2.course_id where T2.course_name = 1
hard gold: SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students

medium pred: select count ( * ) from Student_Tests_Taken where test_result = 1
medium gold: SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   "Spanish"

medium pred: select count ( * ) from Student_Tests_Taken where test_result = 1
medium gold: SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   "database"

medium pred: select test_result , count ( * ) from Student_Tests_Taken group by test_result order by count ( * ) desc
medium gold: SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   "advanced database"

medium pred: select registration_id from Student_Tests_Taken where test_result = 1
medium gold: SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   "operating system"

easy pred: select course_name from Courses
easy gold: SELECT count ( * )  FROM Student_Tests_Taken where test_result = 'Fail'

easy pred: select author_id from Courses where course_name = 1
easy gold: SELECT count ( * )  FROM Student_Tests_Taken where test_result = 'Pass'

extra pred: select personal_name , middle_name , family_name from Course_Authors_and_Tutors where author_id = 1
extra gold: SELECT test_result ,  COUNT ( * )  FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT ( * )  DESC

eval_err_num:168
easy pred: select login_name from Course_Authors_and_Tutors where personal_name max 1 and middle_name max 1 and middle_name max 1 and family_name max 1
easy gold: SELECT registration_id FROM Student_Tests_Taken where test_result = 'Pass'

eval_err_num:169
easy pred: select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 1
easy gold: SELECT course_name from Courses

eval_err_num:170
easy pred: select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 1 != select T3.StuID from Has_Pet as T3 join Pets as T4 on T3.PetID = T4.PetID where T4.PetType = 1
easy gold: SELECT author_id from Courses where course_name  =  "advanced database"

eval_err_num:171
medium pred: select Fname , Age from Student where StuID in ( select T1.StuID from Has_Pet as T1 join Pets as T2 on T1.PetID = T2.PetID where T2.PetType = 1 != select T3.StuID , T3.StuID from Has_Pet as T3 join Pets as T4 on T3.PetID = T4.PetID where T4.PetType = 1 )
medium gold: SELECT personal_name, middle_name, family_name  from Course_Authors_and_Tutors where author_id  =  6

eval_err_num:172
hard pred: select zip_code from weather group by zip_code having avg ( mean_humidity ) < 1 != select zip_code from weather group by zip_code having avg ( mean_humidity ) < 1
hard gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:173
extra pred: select T1.end_station_name from trip as T1 join weather as T2 group by T2.zip_code having avg ( T2.mean_humidity ) < 1 order by count ( T2.mean_humidity ) asc limit 1
extra gold: SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' intersect SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:174
hard pred: select ( mean_humidity ) from weather where zip_code = 1
hard gold: SELECT T1.Fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

hard pred: select avg ( lat ) from station where city = 1
hard gold: SELECT zip_code FROM weather GROUP BY zip_code HAVING avg ( mean_humidity )   <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count ( * )    > =    200

hard pred: select avg ( long ) from station where city = 1
hard gold: SELECT end_station_name FROM trip GROUP BY zip_code HAVING count ( * )    > =    100 order by count ( * )  asc limit 1

easy pred: select installation_date from station where city = 1
easy gold: SELECT  ( mean_humidity )  from weather where zip_code  =  94107

easy pred: select count ( * ) from status
easy gold: SELECT avg ( lat )   FROM station WHERE city  =  "San Jose"

easy pred: select city from station where name = 1
easy gold: SELECT avg ( long )  FROM station WHERE city  =  "San Jose"

easy pred: select count ( * ) from station
easy gold: SELECT installation_date FROM station WHERE city  =  "San Jose"

easy pred: select count ( * ) from trip where duration > ( select avg ( duration ) from trip where zip_code = 1 )
easy gold: SELECT count ( * )  from status

hard pred: select lat from station where name = 1
hard gold: SELECT count ( * )  FROM trip WHERE duration   > =     ( SELECT avg ( duration )  FROM trip WHERE zip_code   =   94103 ) 

medium pred: select count ( * ) from status ( select * from status group by station_id having avg ( bikes_available ) > 1 )
medium gold: SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name  =  'San Jose Diridon Caltrain Station'

eval_err_num:175
medium pred: select count ( * ) from station ( select T2.name from status as T1 join station as T2 on T1.station_id = T2.id group by T1.station_id having avg ( T1.bikes_available ) > 1 except select station.name where city = 1 )
medium gold: SELECT distinct T1.long FROM station AS T1 JOIN trip AS T2 where T1.name  =  'Santa Clara at Almaden'

medium pred: select T2.name from status as T1 join station as T2 on T1.station_id = T2.id group by T1.station_id having avg ( T1.bikes_available ) > 1 except select name from station where city = 1
medium gold: SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name  =  'San Jose Civic Center'

eval_err_num:176
easy pred: select count ( * ) from Movie as T1 join Rating as T2 on T1.mID = T2.mID join Reviewer as T3 on T2.rID = T3.rID where T1.director = T3.name
easy gold: select count ( * )  from  ( SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10  ) 

eval_err_num:177
easy pred: select T3.name from Movie as T1 join Rating as T2 on T1.mID = T2.mID join Reviewer as T3 on T2.rID = T3.rID where T1.director = T3.name
easy gold: select count ( * )  from  ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10 EXCEPT SELECT name FROM station WHERE city  =  "San Jose" ) 

eval_err_num:178
extra pred: select T1.stars from Rating as T1 join Movie as T2 on T1.mID = T2.mID join Reviewer as T3 on T1.rID = T3.rID where T2.director = T3.name
extra gold: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10 EXCEPT SELECT name FROM station WHERE city  =  "San Jose"

hard pred: select T1.title from Movie as T1 join Rating as T2 on T1.mID = T2.mID join Reviewer as T3 on T2.rID = T3.rID where T3.name = 1
hard gold: SELECT count ( * )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name

hard pred: select title from Movie where year > 1
hard gold: SELECT DISTINCT T3.name  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name

hard pred: select T1.stars from Rating as T1 join Movie as T2 on T1.mID = T2.mID where T2.title = 1
hard gold: SELECT DISTINCT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name

hard pred: select count ( director ) from Movie
hard gold: SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T3.name   =   'Brittany Harris'

hard pred: select count ( * ) from Movie ( select * from Movie group by director having count ( * ) = 1 )
hard gold: SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.year  >  2000

medium pred: select director from Movie group by director having count ( * ) = 1
medium gold: SELECT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID WHERE T2.title  =  'Avatar'

easy pred: select name from Reviewer group by name
easy gold: SELECT COUNT ( DISTINCT director )  FROM Movie

easy pred: select T2.name , avg ( T1.stars ) from Rating as T1 join Reviewer as T2 on T1.rID = T2.rID group by T2.name
easy gold: SELECT COUNT ( * )  FROM  ( SELECT director FROM Movie GROUP BY director HAVING count ( * )   =  1 ) 

easy pred: select T2.name from Rating as T1 join Reviewer as T2 on T1.rID = T2.rID group by T2.name order by avg ( T1.stars ) asc
easy gold: SELECT director FROM Movie GROUP BY director HAVING count ( * )   =  1

eval_err_num:179
medium pred: select T1.policy_type_code from Available_Policies as T1 join Customers_Policies as T2 on T1.Policy_ID = T2.Policy_ID join Customers as T3 on T2.Customer_ID = T3.Customer_ID group by T3.Customer_name order by count ( * ) desc limit 1
medium gold: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name

eval_err_num:180
medium pred: select Customer_name from Customers group by Customer_name order by count ( * ) desc limit 1
medium gold: SELECT T2.name ,  avg ( T1.stars )  FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name

eval_err_num:181
hard pred: select Customer_Phone from Available_Policies where policy_type_code = 1
hard gold: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name ORDER BY avg ( T1.stars )  ASC

extra pred: select Customer_name from Customers except select Customer_name from Customers
extra gold: SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =    ( SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1 ) 

extra pred: select T3.Policy_ID from Customers as T1 join Customers_Policies as T2 on T1.Customer_ID = T2.Customer_ID join First_Notification_of_Loss as T3 on T2.Customer_ID = T3.Customer_ID where T1.Customer_name = 1
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:182
hard pred: select count ( * ) from Elimination
hard gold: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id   =   t2.customer_id

eval_err_num:183
medium pred: select T1.Time from Elimination as T1 join wrestler as T2 on T1.Wrestler_ID = T2.Wrestler_ID order by T2.Days_held desc limit 1
medium gold: SELECT t2.policy_id FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id   =   t2.customer_id where t1.customer_name  =  "America Jaskolski"

easy pred: select Name from wrestler
easy gold: SELECT COUNT ( * )  FROM Elimination

hard pred: select Team from Elimination
hard gold: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1

eval_err_num:184
easy pred: select T2.catalog_entry_name from Catalog_Contents_Additional_Attributes as T1 join Catalog_Contents as T2 on T1.catalog_entry_id = T2.catalog_entry_id where T1.catalog_level_number = 1
easy gold: SELECT Name  FROM wrestler

eval_err_num:185
easy pred: select attribute_id from Catalog_Contents_Additional_Attributes where catalog_level_number = 1
easy gold: SELECT Team FROM Elimination

eval_err_num:186
medium pred: select attribute_1 from Catalog_Contents_Additional_Attributes where catalog_level_number = 1
medium gold: SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID ORDER BY T2.Days_held DESC

medium pred: select catalog_publisher from Catalogs group by catalog_publisher order by catalog_publisher desc
medium gold: SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  "8"

medium pred: select catalog_publisher , count ( * ) from Catalogs group by catalog_publisher
medium gold: SELECT t2.attribute_id FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  "8"

medium pred: select catalog_publisher from Catalogs group by catalog_publisher order by count ( * ) desc limit 1
medium gold: SELECT t2.attribute_value FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  "8"

eval_err_num:187
medium pred: select count ( Nationality ) from pilot
medium gold: SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY catalog_publisher DESC

eval_err_num:188
medium pred: select Nationality , Pilot_name from pilot
medium gold: SELECT catalog_publisher, count ( * )  FROM catalogs GROUP BY catalog_publisher

eval_err_num:189
hard pred: select Nationality from pilot group by Nationality order by count ( * ) desc limit 1
hard gold: SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count ( * )  DESC LIMIT 1

easy pred: select Pilot_name from pilot
easy gold: SELECT count ( distinct Nationality )  FROM pilot

medium pred: select Pilot_ID from pilot
medium gold: SELECT Nationality,Pilot_name FROM pilot

eval_err_num:190
easy pred: select T3.Name from course as T1 join course_arrange as T2 on T1.Course_ID = T2.Course_ID join teacher as T3 on T2.Teacher_ID = T3.Teacher_ID where T1.Course = 1
easy gold: SELECT Pilot_name   from pilot

eval_err_num:191
easy pred: select T1.Grade from course_arrange as T1 join course as T2 on T1.Course_ID = T2.Course_ID where T2.Course = 1
easy gold: SELECT Pilot_ID  from pilot

eval_err_num:192
hard pred: select Title from Cartoon where Written_by = 1 or Written_by = 1
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID   =   T3.Teacher_ID WHERE T2.Course   =   "Math"

eval_err_num:193
medium pred: select Title , Original_air_date from Cartoon where Written_by = 1 or Written_by = 1
medium gold: SELECT T2.Staring_Date  FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID   =   T2.Course_ID where T2.Course  =  "Math"

eval_err_num:194
medium pred: select LastName , FirstName from list
medium gold: SELECT Title FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

eval_err_num:195
extra pred: select T2.FirstName , T2.LastName from teachers as T1 join list as T2 where T1.LastName = 1
extra gold: SELECT Title, original_air_date FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

eval_err_num:196
extra pred: select T2.FirstName , T2.LastName , T2.Grade from teachers as T1 join list as T2 where T1.LastName = 1
extra gold: SELECT Title, written_by FROM Cartoon WHERE Directed_by  =  "Ben Jones" OR Directed_by  =  "Brandon Vietti"

medium pred: select FirstName , LastName from teachers group by FirstName order by count ( * ) desc limit 1
medium gold: SELECT LastName,FirstName from list

medium pred: select T2.Classroom from teachers as T1 join list as T2 group by T1.FirstName order by count ( * ) desc limit 1
medium gold: SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.lastname   =   "MOYER"

eval_err_num:197
extra pred: select Line_1 from Addresses where Line_1 = 1
extra gold: SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:198
extra pred: select State_County from Addresses where Line_1 = 1
extra gold: SELECT T1.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1

medium pred: select count ( * ) from Bookings
medium gold: SELECT * FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   "FJA Filming"

medium pred: select count ( Status_Code ) from Bookings
medium gold: SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   "FJA Filming"

eval_err_num:199
medium pred: select T1.Status_Code from Bookings as T1 join Bookings_Services as T2 on T1.Booking_ID = T2.Order_ID join Invoice_Items as T3 on T2.Order_ID = T3.Order_ID join Order_Items as T4 on T3.Order_Item_ID = T4.Order_Item_ID join Customer_Orders as T5 on T4.Order_ID = T5.Order_ID join Customers as T6 on T5.Customer_ID = T6.Customer_ID group by T1.Status_Code order by count ( T6.* ) desc limit 1
medium gold: SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   "FJA Filming"

eval_err_num:200
easy pred: select Author from submission
easy gold: SELECT count ( * )  FROM BOOKINGS

eval_err_num:201
easy pred: select Author from submission where College = 1 or College = 1
easy gold: SELECT count ( distinct status_code )  FROM BOOKINGS

eval_err_num:202
easy pred: select count ( account_id ) from Financial_Transactions where transaction_amount > 1
easy gold: SELECT Author FROM submission

easy pred: select T2.customer_first_name , T2.customer_last_name from Accounts as T1 join Customers as T2 on T1.customer_id = T2.customer_id where T1.account_name = 1
easy gold: SELECT count  ( distinct account_id )  FROM Financial_transactions where transaction_amount > 600

medium pred: select count ( * ) from Order_Items group by product_id
medium gold: SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   "900"

medium pred: select product_quantity from Order_Items where order_item_id = 1
medium gold: SELECT login_name FROM customers WHERE Customer_first_name  =  "Dee" AND Customer_middle_initial  =  "A" AND Customer_last_name  =  "Larkin"

easy pred: select T1.production_type_code from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id where T2.order_item_id = 1
easy gold: SELECT COUNT ( customer_id )  FROM customers

easy pred: select product_name , count ( * ) from Products group by product_name
easy gold: SELECT product_id from Order_Items where order_item_id = 1

easy pred: select unit_price from Products where production_type_code = 1
easy gold: SELECT product_quantity from Order_Items where order_item_id = 1

medium pred: select date_order_placed from Orders where customer_id = 1
medium gold: SELECT production_type_code from Order_Items as T1 join Products as T2 on T1.product_id = T2.product_id where T1.order_item_id = 1

hard pred: select count ( * ) from Orders group by customer_id order by count ( * ) desc limit 1
hard gold: SELECT T2.product_name ,  count ( * )  FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id   =   T2.product_id JOIN Orders AS T3 ON T3.order_id   =   T1.order_id GROUP BY T2.product_name

easy pred: select count ( * ) from Orders group by customer_id order by count ( * ) desc limit 1
easy gold: select unit_price from Products where production_type_code  =  "Books"

easy pred: select customer_id from Orders where customer_id in ( select customer_id from Orders group by customer_id order by count ( * ) desc limit 1 )
easy gold: select date_order_placed from Orders where customer_id  =  12

eval_err_num:203
extra pred: select Driver_ID , If_full_time from school_bus
extra gold: SELECT count ( * )  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:204
extra pred: select Driver_ID , Years_Working , If_full_time from school_bus
extra gold: SELECT count ( * )  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 2

eval_err_num:205
extra pred: select T1.Name from driver as T1 join school_bus as T2 on T1.Driver_ID = T2.Driver_ID order by T2.Years_Working desc limit 1
extra gold: select date_order_placed from Orders where customer_id in  ( SELECT  T1.customer_id  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1 )  order by date_order_placed desc limit 1

medium pred: select count ( * ) from driver
medium gold: SELECT Driver_ID, If_full_time FROM school_bus

medium pred: select Name from driver
medium gold: SELECT Driver_ID, Years_Working, If_full_time FROM school_bus

hard pred: select Age from driver where Name = 1
hard gold: SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1

easy pred: select Name from driver
easy gold: select count ( * )  from driver

easy pred: select Name , Driver_ID from driver
easy gold: select name from driver

easy pred: select T1.Name , T2.Years_Working from driver as T1 join school_bus as T2 on T1.Driver_ID = T2.Driver_ID where T1.Driver_ID = T2.Driver_ID
easy gold: select age from driver where name  =  "Matthew Ritter"

eval_err_num:206
easy pred: select name from aircraft where distance > 1
easy gold: SELECT name FROM driver

eval_err_num:207
medium pred: select T1.name from aircraft as T1 join certificate as T2 on T1.aid = T2.aid where T1.distance > 1 group by T2.aid order by count ( * ) > 1
medium gold: SELECT name, driver_id FROM driver

eval_err_num:208
medium pred: select T2.eid from aircraft as T1 join certificate as T2 on T1.aid = T2.aid order by T1.distance desc limit 1
medium gold: SELECT t1.name, t2.years_working FROM driver as t1 join school_bus as t2 where t1.driver_id  =  t2.driver_id

medium pred: select name from employee where salary > ( select avg ( salary ) from employee )
medium gold: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid WHERE T2.distance  >  5000

extra pred: select avg ( salary ) from employee
extra gold: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count ( * )    > =    5

hard pred: select name from employee where salary < ( select avg ( salary ) from employee )
hard gold: SELECT t1.eid FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid ORDER BY t2.distance desc limit 1

eval_err_num:209
hard pred: select count ( * ) from flight where destination = 1 and arrival_date max 1
hard gold: SELECT name FROM Employee WHERE salary  >   ( SELECT avg ( salary )  FROM Employee ) 

easy pred: select count ( * ) from flight where destination = 1
easy gold: SELECT avg ( salary )  FROM Employee

medium pred: select avg ( salary ) from employee
medium gold: SELECT count ( * )  FROM Flight where destination  =  "Washington D.C." and arrival_date Like "%04/12/2005%"

easy pred: select name from employee order by salary asc limit 1
easy gold: SELECT count ( * )  FROM Flight where destination  =  "Dallas"

eval_err_num:210
easy pred: select School , Location from university where Enrollment > 1
easy gold: SELECT avg ( salary )  FROM Employee

eval_err_num:211
medium pred: select Primary_conference from university where School in ( select School from university where Enrollment > 1 )
medium gold: SELECT name FROM Employee ORDER BY salary ASC LIMIT 3

medium pred: select School from university where School_ID not in ( select School_ID from basketball_match )
medium gold: SELECT School, Location FROM university WHERE enrollment > 15000

hard pred: select Founded from university where School = 1
hard gold: SELECT Primary_conference FROM university WHERE School in  ( SELECT School FROM university WHERE enrollment > 15000 ) 

hard pred: select * from university order by Enrollment desc limit 1
hard gold: SELECT school FROM university WHERE school_id NOT IN  ( SELECT school_id FROM basketball_match ) 

easy pred: select * from university order by Enrollment desc limit 1
easy gold: SELECT founded FROM university WHERE school  =  "University of Rhode Island"

easy pred: select Primary_conference from university where School = 1
easy gold: SELECT affiliation FROM university WHERE school  =  "University of Rhode Island"

medium pred: select sum ( Enrollment ) from university
medium gold: SELECT * FROM university ORDER BY enrollment DESC LIMIT 3

medium pred: select sum ( Enrollment ) from university where Founded > 1
medium gold: SELECT * FROM university ORDER BY enrollment DESC LIMIT 1

easy pred: select Affiliation , sum ( Enrollment ) from university where Founded > 1 group by Affiliation
easy gold: SELECT Primary_conference FROM university where school  =  "Rutgers University"

easy pred: select * from university order by Founded desc limit 1
easy gold: SELECT sum ( Enrollment )   FROM university

eval_err_num:212
medium pred: select avg ( Damage_millions_USD ) from storm
medium gold: SELECT * FROM university order by founded desc LIMIT 1

easy pred: select Name , Max_speed from storm group by Storm_ID order by count ( * ) desc limit 1
easy gold: SELECT avg ( damage_millions_USD )  FROM storm

easy pred: select Name from storm order by Max_speed limit 1
easy gold: SELECT max ( damage_millions_USD )  FROM storm

easy pred: select avg ( Max_speed ) from storm
easy gold: SELECT min ( damage_millions_USD )  FROM storm

easy pred: select avg ( Damage_millions_USD ) from storm
easy gold: SELECT min ( damage_millions_USD )  FROM storm WHERE max_speed  >  1000

extra pred: select avg ( Max_speed ) from storm
extra gold: SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:213
hard pred: select like ( Max_speed ) from storm
hard gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id Order by Max_speed limit 1

easy pred: select sum ( Number_Deaths ) from storm
easy gold: SELECT avg ( Max_speed )  FROM storm

easy pred: select Name from storm group by Storm_ID having count ( * ) > = 1
easy gold: SELECT AVG ( Max_speed )  FROM storm

easy pred: select T1.Name from storm as T1 join affected_region as T2 on T1.Storm_ID = T2.Storm_ID group by T1.Storm_ID having sum ( T2.Number_city_affected ) > = 1
easy gold: SELECT MAX ( Max_speed )  FROM storm

eval_err_num:214
easy pred: select T1.Name from storm as T1 join affected_region as T2 on T1.Storm_ID = T2.Storm_ID group by T1.Storm_ID having sum ( T2.Number_city_affected ) > = 1 != select T3.Name from storm as T3 join affected_region as T4 on T3.Storm_ID = T4.Storm_ID group by T3.Storm_ID having sum ( T4.Number_city_affected ) > = 1
easy gold: SELECT SUM ( Number_Deaths )  FROM storm

medium pred: select Name from storm
medium gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id HAVING count ( * )    > =    2

medium pred: select Name , count ( * ) from storm group by Storm_ID limit 1
medium gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected )   > =   10

extra pred: select Name , count ( * ) from storm group by Storm_ID
extra gold: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count ( * )   > =   2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected )   > =   10

eval_err_num:215
easy pred: select Payment_Method_Code from Payments group by Payment_Method_Code order by count ( * ) desc limit 1
easy gold: SELECT name FROM storm

hard pred: select count ( Payment_Method_Code ) from Payments
hard gold: SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  DESC LIMIT 1

easy pred: select Claim_ID , Amount_Claimed from Claims
easy gold: SELECT count ( distinct Payment_Method_Code )  from payments

hard pred: select Claim_ID from Claims where Amount_Claimed > ( select avg ( Amount_Claimed ) from Claims )
hard gold: SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  desc LIMIT 1

hard pred: select Claim_ID from Claims order by Amount_Claimed desc limit 1
hard gold: SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:216
medium pred: select Name from technician
medium gold: SELECT claim_id, amount_claimed FROM Claims

eval_err_num:217
hard pred: select T1.Name , T3.Team from technician as T1 join repair_assignment as T2 on T1.technician_id = T2.technician_id join machine as T3 on T2.Machine_ID = T3.Machine_ID
hard gold: SELECT claim_id FROM Claims WHERE Amount_Claimed  >   (  SELECT avg ( Amount_Claimed )  FROM Claims  ) 

easy pred: select Starting_Year from technician order by Age desc limit 1
easy gold: SELECT Name FROM technician

medium pred: select Name from technician order by Age desc limit 1
medium gold: SELECT T3.Name ,  T2.Team FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID

eval_err_num:218
medium pred: select count ( * ) , engineer_id from Maintenance_Engineers group by engineer_id
medium gold: SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1

eval_err_num:219
medium pred: select engineer_id , first_name , count ( * ) from Maintenance_Engineers group by engineer_id order by count ( * ) limit 1
medium gold: SELECT Name  FROM technician ORDER BY Age DESC LIMIT 1

medium pred: select asset_acquired_date from Assets
medium gold: SELECT count ( * ) ,T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id   =   T2.engineer_id GROUP BY T1.engineer_id

extra pred: select asset_acquired_date from Assets order by asset_acquired_date asc limit 1
extra gold: SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name ,count ( * ) FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id   =   T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * )  limit 1

easy pred: select count ( first_name ) from Maintenance_Engineers
easy gold: SELECT asset_acquired_date FROM Assets

medium pred: select first_name , last_name from Maintenance_Engineers
medium gold: SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1

eval_err_num:220
medium pred: select T2.Name , count ( * ) from membership_register_branch as T1 join branch as T2 on T1.Branch_ID = T2.Branch_ID where T1.Register_Year > 1 group by T2.Branch_ID
medium gold: SELECT count ( T3.first_name )  FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id   =   T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id   =   T3.engineer_id

eval_err_num:221
medium pred: select T2.Name , T2.Open_year from membership_register_branch as T1 join branch as T2 on T1.Branch_ID = T2.Branch_ID where T1.Register_Year > 1 group by T2.Branch_ID
medium gold: SELECT T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id   =   T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id   =   T3.engineer_id

hard pred: select count ( City ) from branch where membership_amount > 1
hard gold: SELECT T2.name ,  count ( * )  FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id

hard pred: select Branch_ID from branch where Open_year = 1
hard gold: SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id

easy pred: select Open_year from branch where Name = 1
easy gold: select count ( * )  from  ( SELECT T2.name  FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id ) 

easy pred: select sum ( T2.Total_pounds ) from branch as T1 join purchase as T2 on T1.Branch_ID = T2.Branch_ID where T1.City = 1 and T2.Year = 1
easy gold: SELECT count ( distinct city )  frOM branch WHERE  membership_amount  >  100

easy pred: select count ( * ) from branch where City = 1
easy gold: SELECT Branch_ID FROM branch WHERE open_year   =   2000

eval_err_num:222
medium pred: select Country from match where Location = 1
medium gold: SELECT sum ( total_pounds )  FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T2.city   =   'London' AND T1.year   =   2018

eval_err_num:223
easy pred: select Age from pilot where Name = 1
easy gold: SELECT count ( * )  FROM  branch WHERE city   =   'London'

easy pred: select Airport_Name from airport order by International_Passengers desc limit 1
easy gold: SELECT country FROM MATCH where Location  =  'Swan River , Perth'

easy pred: select International_Passengers from airport order by International_Passengers desc limit 1
easy gold: SELECT age FROM pilot where name  =  'Mr. Cristian Halvorson II'

easy pred: select * from airport order by International_Passengers desc limit 1
easy gold: SELECT country FROM match where Location  =  "Mina Zayid , Abu Dhabi"

medium pred: select sum ( Domestic_Passengers ) from airport
medium gold: SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1

medium pred: select sum ( International_Passengers ) from airport
medium gold: SELECT International_Passengers FROM airport ORDER BY International_Passengers DESC LIMIT 1

medium pred: select Airport_Name from airport order by Domestic_Passengers desc limit 1
medium gold: SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1

eval_err_num:224
easy pred: select like ( Transit_Passengers ) from airport
easy gold: SELECT sum ( Domestic_Passengers )  FROM airport

easy pred: select min ( Transit_Passengers ) from airport
easy gold: SELECT sum ( International_Passengers )  FROM airport

medium pred: select avg ( Domestic_Passengers ) from airport
medium gold: SELECT airport_name FROM airport order by Domestic_Passengers desc limit 1

medium pred: select Airport_Name from airport order by International_Passengers desc limit 1
medium gold: SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE "%London%"

eval_err_num:225
easy pred: select Location from performance
easy gold: SELECT max ( Transit_Passengers )  FROM airport

eval_err_num:226
easy pred: select avg ( Attendance ) from performance
easy gold: SELECT min ( Transit_Passengers )  FROM airport

eval_err_num:227
easy pred: select like ( Attendance ) from performance
easy gold: SELECT  avg ( Domestic_Passengers )  FROM airport

eval_err_num:228
medium pred: select min ( Attendance ) from performance
medium gold: SELECT Airport_Name  FROM airport order by International_Passengers desc  limit 1

eval_err_num:229
easy pred: select Hometown from people
easy gold: SELECT Location FROM performance

eval_err_num:230
easy pred: select Hometown from people where Age > 1 != select Hometown from people where Age < 1
easy gold: SELECT AVG ( Attendance )  FROM performance

eval_err_num:231
easy pred: select count ( * ) from people where Hometown = 1
easy gold: SELECT MAX ( Attendance )  FROM performance

easy pred: select count ( * ) from people
easy gold: SELECT Hometown FROM people

hard pred: select count ( * ) from people where Age < 1
hard gold: SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20

easy pred: select Name from people where People_ID = 1
easy gold: SELECT count ( * )  FROM people WHERE Hometown  =  "Santo Domingo"

easy pred: select T2.Age from gymnast as T1 join people as T2 on T1.Gymnast_ID = T2.People_ID order by T1.Total_Points desc
easy gold: select count ( * )  from people

easy pred: select T2.Name from gymnast as T1 join people as T2 on T1.Gymnast_ID = T2.People_ID order by T1.Total_Points desc
easy gold: select count ( * )  from people where Age < 21

easy pred: select Height from people where Name = 1
easy gold: select Name from people where People_ID  =  2

eval_err_num:232
medium pred: select like ( Height ) from people
medium gold: SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID ORDER BY T1.Total_Points DESC

medium pred: select Name from people order by Height desc limit 1
medium gold: SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID ORDER BY T1.Total_Points DESC

easy pred: select Age from people order by Height desc limit 1
easy gold: SELECT Height FROM  people where name = 'Paul Hamm'

eval_err_num:233
easy pred: select Name from ship where Ship_ID not in ( select Ship_ID from mission )
easy gold: select max ( Height )  from people

eval_err_num:234
medium pred: select Ship_ID from mission where Fate max 1
medium gold: SELECT name FROM people ORDER BY Height DESC LIMIT 1

eval_err_num:235
medium pred: select Name from ship where Ship_ID in ( select Ship_ID from mission where Fate max 1 )
medium gold: SELECT age FROM people ORDER BY Height DESC LIMIT 1

eval_err_num:236
hard pred: select count ( * ) from airport
hard gold: SELECT Name FROM ship WHERE Ship_ID NOT IN  ( SELECT Ship_ID FROM mission ) 

eval_err_num:237
medium pred: select count ( * ) from operate_company
medium gold: SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%'

eval_err_num:238
hard pred: select id , count ( * ) from airport group by id
hard gold: Select Name from ship  where Ship_ID in  (  SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%' ) 

easy pred: select * from operate_company group by id having count ( * ) > 1
easy gold: SELECT count ( * )  FROM airport

easy pred: select * from operate_company group by id order by count ( * ) limit 1
easy gold: SELECT count ( * )  FROM operate_company

hard pred: select Principal_activities from operate_company group by Principal_activities order by count ( * ) limit 1
hard gold: SELECT T3.id ,  count ( * )  FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id JOIN airport AS T3 ON T2.airport_id   =   T3.id GROUP BY T3.id

easy pred: select * from operate_company where Principal_activities = 1 group by name order by count ( * ) limit 1
easy gold: SELECT count ( * )  from airport where country  =  "United States"

eval_err_num:239
medium pred: select balance from SAVINGS where custid = 1
medium gold: SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY T1.id HAVING count ( * )   >  1

eval_err_num:240
extra pred: select T3.balance + T1.balance from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid join CHECKING as T3 on T2.custid = T3.custid
extra gold: SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY T1.id order by count ( * )  limit 3

eval_err_num:241
extra pred: select T3.balance + T1.balance from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid join CHECKING as T3 on T2.custid = T3.custid order by T3.balance + T1.balance
extra gold: SELECT Principal_activities FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY Principal_activities order by count ( * )  limit 1

easy pred: select T1.balance from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid where T2.name = 1
easy gold: SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid

medium pred: select name from ACCOUNTS where custid = 1
medium gold: SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T1.balance + T2.balance

easy pred: select count ( custid ) from ACCOUNTS
easy gold: SELECT balance from savings where custid  =  1

medium pred: select count ( * ) from CHECKING
medium gold: SELECT T2.balance from accounts as T1 join savings as T2 on T1.custid  =  T2.custid where T1.name  =  "Wang"

easy pred: select min ( balance ) from SAVINGS
easy gold: SELECT name from accounts where custid  =  3

extra pred: select custid from SAVINGS order by balance limit 1
extra gold: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN  ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance >  ( SELECT avg ( balance )  FROM savings )  ) 

easy pred: select T2.name from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid order by T1.balance desc limit 1
easy gold: select count ( distinct custid )  from accounts

easy pred: select T2.custid from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid order by T1.balance desc limit 1
easy gold: select count ( * )  from checking

easy pred: select custid from SAVINGS order by balance asc limit 1
easy gold: SELECT min ( balance )  FROM savings

hard pred: select count ( * ) from SAVINGS where balance > = 1
hard gold: SELECT T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance LIMIT 1

hard pred: select T2.name , T3.balance + T1.balance from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid join CHECKING as T3 on T2.custid = T3.custid
hard gold: SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 1

hard pred: select avg ( balance ) from SAVINGS
hard gold: SELECT T1.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 1

medium pred: select T2.name from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid where T1.balance > ( select avg ( balance ) from SAVINGS )
medium gold: SELECT custid FROM savings order by balance asc limit 1

medium pred: select name from ACCOUNTS
medium gold: SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid

easy pred: select T3.balance , T1.balance from SAVINGS as T1 join ACCOUNTS as T2 on T1.custid = T2.custid join CHECKING as T3 on T2.custid = T3.custid order by T3.balance + T1.balance desc
easy gold: SELECT avg ( balance )  FROM savings

eval_err_num:242
easy pred: select Document_Name from Documents where Document_Name max 1
easy gold: SELECT name from  ACCOUNTS

eval_err_num:243
hard pred: select Document_Name from Documents where Document_Name max 1
hard gold: SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance + T3.balance DESC

medium pred: select Document_ID from Paragraphs
medium gold: SELECT * from Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID
medium gold: SELECT document_name from Documents WHERE Document_Description LIKE "%w%"

medium pred: select Document_ID , count ( * ) from Documents group by Document_ID order by count ( * )
medium gold: SELECT document_name , template_id FROM Documents WHERE Document_Description LIKE "%w%"

easy pred: select Template_ID from Templates
easy gold: SELECT document_id FROM Paragraphs

medium pred: select Template_ID from Templates except select Template_ID from Templates
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id

medium pred: select Template_ID , Date_Effective_To from Templates except select Template_ID from Templates
medium gold: SELECT document_id ,  count ( * )  FROM Paragraphs GROUP BY document_id ORDER BY document_id

easy pred: select T1.Document_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID order by count ( * ) limit 1
easy gold: SELECT template_id FROM Templates

hard pred: select T1.Document_ID from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID group by T1.Document_ID order by count ( * ) desc limit 1
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

hard pred: select count ( * ) from Paragraphs as T1 join Documents as T2 on T1.Document_ID = T2.Document_ID where T1.Document_ID = 1
hard gold: SELECT Date_effective_to FROM Templates WHERE template_id IN  (  SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

hard pred: select Paragraph_Text from Paragraphs where Document_ID = 1
hard gold: SELECT count ( * )  FROM Templates WHERE template_id in  ( SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents ) 

eval_err_num:244
hard pred: select count ( ArtistId ) from Artist
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:245
hard pred: select Name from Artist
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count ( * )  desc LIMIT 1

eval_err_num:246
easy pred: select count ( * ) from Artist where Name = 1
easy gold: select count ( paragraph_id )  from Paragraphs where Document_ID  =  2394

eval_err_num:247
easy pred: select count ( * ) from Artist where Name = 1
easy gold: select Paragraph_Text from Paragraphs where Document_ID  =  2394

easy pred: select count ( * ) from Customer where Country = 1
easy gold: select count ( distinct artistid )  from artist

easy pred: select Address from Customer where Country = 1
easy gold: select Name from artist

medium pred: select Address , FirstName , LastName from Customer where Country = 1
medium gold: SELECT COUNT ( * )  FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  "AC/DC"

eval_err_num:248
medium pred: select FirstName , LastName from Customer where CustomerId in ( select T1.CustomerId != select T2.CustomerId from Customer as T1 join Invoice as T2 on T1.CustomerId = T2.CustomerId )
medium gold: SELECT count ( * )  FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   "Germany"

medium pred: select FirstName , CustomerId from Customer where Country = 1
medium gold: SELECT  T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   "Germany"

eval_err_num:249
extra pred: select count ( * ) from Web_client_accelerator
extra gold: SELECT FirstName, LastName from Customer where customerid in  ( select customerid from Customer intersect select customerid from Invoice ) 

eval_err_num:250
medium pred: select Connection from Web_client_accelerator where name = 1
medium gold: SELECT DISTINCT T1.FirstName, T1.customerid FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   "Brazil"

easy pred: select * from Web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser )
easy gold: SELECT connection FROM web_client_accelerator WHERE name  =  "CACHEbox"

easy pred: select count ( * ) from Web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser )
easy gold: SELECT operating_system FROM web_client_accelerator

easy pred: select name from browser
easy gold: SELECT count ( * )  FROM web_client_accelerator

hard pred: select T3.name from Web_client_accelerator as T1 join accelerator_compatible_browser as T2 on T1.id = T2.accelerator_id join browser as T3 on T2.browser_id = T3.id where T1.name = 1 and T2.compatible_since_year > 1
hard gold: SELECT * FROM web_client_accelerator WHERE id NOT IN  (  SELECT accelerator_id FROM accelerator_compatible_browser  ) 

extra pred: select id from browser where name = 1
extra gold: SELECT count ( * )  FROM web_client_accelerator WHERE id NOT IN  (  SELECT accelerator_id FROM accelerator_compatible_browser  ) 

eval_err_num:251
easy pred: select like ( market_share ) from browser
easy gold: select name from browser

hard pred: select min ( market_share ) from browser
hard gold: SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year > 1998

hard pred: select avg ( market_share ) from browser
hard gold: SELECT T1.id FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T1.name  =  "Opera"

eval_err_num:252
easy pred: select * from Regular_Order_Products group by regular_order_Products.product_id order by count ( * ) desc limit 1
easy gold: SELECT max ( market_share )  FROM browser

eval_err_num:253
easy pred: select sum ( product_price ) from Products where product_name = 1
easy gold: SELECT min ( market_share )  FROM browser

eval_err_num:254
easy pred: select sum ( product_price ) from Products where product_name = 1
easy gold: SELECT avg ( market_share )  FROM browser

extra pred: select count ( customer_name ) from Customers where payment_method = 1
extra gold: SELECT * FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id GROUP BY t2.product_id ORDER BY count ( * )  DESC LIMIT 1

medium pred: select customer_name from Customers where payment_method = 1
medium gold: SELECT sum ( product_price )  FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id Where t1.product_name  =  'dvds'

medium pred: select customer_name from Customers order by date_became_customer limit 1
medium gold: SELECT sum ( product_price )  FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id Where t1.product_name  =  'electronics'

eval_err_num:255
easy pred: select name from architect where gender = 1 order by name
easy gold: SELECT count ( DISTINCT customer_name )  FROM Customers WHERE payment_method  =  'Visa'

eval_err_num:256
easy pred: select name from architect where gender = 1 order by name
easy gold: SELECT customer_name FROM Customers WHERE payment_method  =  'Visa'

eval_err_num:257
medium pred: select name from architect where gender = 1
medium gold: SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5

eval_err_num:258
medium pred: select T3.Name from Scientists as T1 join AssignedTo as T2 on T1.SSN = T2.Scientist join Projects as T3 on T2.Project = T3.Code where T1.Name max 1
medium gold: SELECT name FROM architect WHERE gender  =  'male' ORDER BY name

eval_err_num:259
medium pred: select Name from Scientists where Name max 1
medium gold: SELECT name FROM architect WHERE gender  =  'male' ORDER BY name

eval_err_num:260
extra pred: select Name from journalist
extra gold: SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN WHERE T3.name LIKE '%Smith%'

eval_err_num:261
medium pred: select T3.Name , T1.Name from event as T1 join news_report as T2 on T1.Event_ID = T2.Event_ID join journalist as T3 on T2.journalist_ID = T3.journalist_ID
medium gold: SELECT name from scientists WHERE name LIKE '%Smith%'

easy pred: select Name from journalist where Nationality = 1
easy gold: SELECT name from journalist

medium pred: select Name from journalist where Nationality = 1 or Nationality = 1
medium gold: SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID

hard pred: select count ( * ) from journalist where Nationality = 1 or Nationality = 1
hard gold: SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID ORDER BY T2.Event_Attendance ASC

medium pred: select Name from journalist where Nationality = 1 or Nationality = 1
medium gold: SELECT T3.Name ,  T1.Work_Type FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID

medium pred: select count ( * ) from journalist where Nationality = 1 and Years_working > 1
medium gold: SELECT name,years_working from journalist

easy pred: select Name , count ( * ) from journalist group by Name
easy gold: SELECT Name FROM journalist WHERE Nationality   =   "England"

medium pred: select Name , Age , Nationality , Nationality from journalist group by Name
medium gold: SELECT Name FROM journalist WHERE Nationality   =   "England" OR Nationality   =   "Wales"

eval_err_num:262
medium pred: select T3.Name from journalist as T1 join news_report as T2 on T1.journalist_ID = T2.journalist_ID join event as T3 on T2.Event_ID = T3.Event_ID where T1.Age = ( select like ( Age ) from journalist )
medium gold: SELECT count ( * )  FROM journalist WHERE Nationality   =   "England" OR Nationality   =   "Wales"

eval_err_num:263
hard pred: select Shop_Name from shop
hard gold: SELECT T3.Name ,  COUNT ( * )  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID GROUP BY T3.Name

eval_err_num:264
hard pred: select T1.Shop_Name from shop as T1 join stock as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID
hard gold: SELECT T3.Name , t3.age, t3.Nationality, COUNT ( * )  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID GROUP BY T3.Name

eval_err_num:265
extra pred: select T1.Shop_Name from shop as T1 join stock as T2 on T1.Shop_ID = T2.Shop_ID group by T2.Shop_ID having count ( * ) > 1
extra gold: SELECT T3.Name , t2.name  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID where t3.age  =   ( select max ( age )  from journalist ) 

eval_err_num:266
easy pred: select T3.Fname from Dorm as T1 join Lives_in as T2 on T1.dormid = T2.dormid join Student as T3 on T2.stuid = T3.StuID where T1.dorm_name = 1
easy gold: select shop_name from shop

eval_err_num:267
medium pred: select LName from Student where Fname = 1
medium gold: SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID

eval_err_num:268
medium pred: select city_code from Student where Fname = 1 and LName = 1
medium gold: SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT ( * )   >  1

hard pred: select count ( * ) from Student where Sex = 1 and Major = 1
hard gold: SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid WHERE T3.dorm_name   =   'Smith Hall'

easy pred: select count ( * ) from Student where Sex = 1
easy gold: SELECT lname from student where fname  =  "Tracy"

medium pred: select count ( * ) from Student where Sex = 1 and Age < 1
medium gold: SELECT city_code from student where fname  =  "Tracy" and lname  =  "Kim"

easy pred: select Age from Student where Sex = 1 and Age < 1
easy gold: SELECT student_capacity from dorm where dorm_name  =  "Smith Hall"

medium pred: select Fname from Student where Age between 1 and 1
medium gold: SELECT count ( * )  FROM student WHERE sex   =   'F' AND Major = 600

easy pred: select Fname from Student where city_code = 1 and Age between 1 and 1
easy gold: SELECT count ( * )  FROM student WHERE sex   =   'F'

easy pred: select count ( * ) , dorm_name from Dorm group by dorm_name
easy gold: SELECT fname FROM student WHERE age BETWEEN 20 AND 25

medium pred: select avg ( T3.Age ) , T1.dorm_name from Dorm as T1 join Lives_in as T2 on T1.dormid = T2.dormid join Student as T3 on T2.stuid = T3.StuID group by T1.dorm_name
medium gold: SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25

hard pred: select count ( * ) , gender from Dorm group by gender
hard gold: SELECT count ( * )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name

hard pred: select dorm_name from Dorm
hard gold: SELECT avg ( T1.age )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name

medium pred: select T3.amenity_name from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T1.dorm_name = 1
medium gold: SELECT count ( * ) , gender  FROM dorm GROUP BY gender

easy pred: select T3.amenity_name from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T1.dorm_name = 1 order by T3.amenity_name
easy gold: SELECT  dorm_name FROM dorm

medium pred: select T2.amenid from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T1.dorm_name = 1 order by T3.amenity_name
medium gold: SELECT dorm_name FROM dorm order by student_capacity desc limit 1

hard pred: select dorm_name from Dorm
hard gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall'

extra pred: select T1.dorm_name from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T3.amenity_name = 1
extra gold: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall' ORDER BY T3.amenity_name

extra pred: select T1.dorm_name from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T3.amenity_name = 1 except select T4.dorm_name from Dorm as T4 join Has_amenity as T5 on T4.dormid = T5.dormid join Dorm_amenity as T6 on T5.amenid = T6.amenid where T6.amenity_name = 1
extra gold: SELECT T2.amenid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall' ORDER BY T3.amenity_name

easy pred: select T1.dorm_name , T1.gender from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T3.amenity_name = 1 except select T4.dorm_name , T4.gender from Dorm as T4 join Has_amenity as T5 on T4.dormid = T5.dormid join Dorm_amenity as T6 on T5.amenid = T6.amenid where T6.amenity_name = 1
easy gold: SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid  =  901

easy pred: select T1.dorm_name , T3.amenity_name from Dorm as T1 join Has_amenity as T2 on T1.dormid = T2.dormid join Dorm_amenity as T3 on T2.amenid = T3.amenid where T1.dorm_name = 1
easy gold: SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid  =  904

eval_err_num:269
easy pred: select T2.Birth_Date from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings limit 1
easy gold: SELECT dorm_name FROM dorm

eval_err_num:270
hard pred: select T2.Name from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings limit 1
hard gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge'

eval_err_num:271
extra pred: select T2.Nationality from poker_player as T1 join people as T2 on T1.People_ID = T2.People_ID order by T1.Earnings limit 1
extra gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'Study Room'

eval_err_num:272
hard pred: select Allergy from Has_Allergy
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:273
hard pred: select Allergy from Has_Allergy
hard gold: SELECT name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:274
hard pred: select Allergy from Has_Allergy
hard gold: SELECT Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

easy pred: select StuID , Allergy from Has_Allergy
easy gold: SELECT Allergy FROM Allergy_Type

easy pred: select count ( * ) from Has_Allergy where Allergy = 1 or Allergy = 1
easy gold: SELECT Allergy FROM Allergy_Type

medium pred: select Advisor from Student group by Advisor order by count ( StuID ) desc limit 1
medium gold: SELECT stuid, allergy from has_allergy

hard pred: select Advisor from Student group by Advisor order by count ( StuID ) asc limit 1
hard gold: SELECT count ( * )  FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.allergy   =   "Milk" OR T1.allergy   =   "Eggs"

hard pred: select T1.Fname from Student as T1 join Has_Allergy as T2 on T1.StuID = T2.StuID where T2.Allergy = 1
hard gold: SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  DESC LIMIT 1

hard pred: select T1.city_code , T1.Fname from Student as T1 join Has_Allergy as T2 on T1.StuID = T2.StuID where T2.Allergy = 1
hard gold: SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  asc LIMIT 1

eval_err_num:275
medium pred: select teacher_id from Detention where detention_id = 1
medium gold: SELECT DISTINCT T1.fname  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid   =   T2.stuid WHERE T2.Allergy   =   "Milk"

eval_err_num:276
medium pred: select datetime_detention_end from Detention where detention_id = 1
medium gold: SELECT DISTINCT T1.city_code, T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid   =   T2.stuid WHERE T2.Allergy   =   "Milk"

easy pred: select count ( * ) from Students where student_id in ( select student_id from Behavior_Incident )
easy gold: select teacher_id from detention where detention_id  =  1

easy pred: select count ( * ) from Students where student_id not in ( select student_id from Behavior_Incident )
easy gold: select datetime_detention_end from detention where detention_id  =  1

easy pred: select first_name , middle_name , last_name from Students where student_id not in ( select student_id from Behavior_Incident )
easy gold: SELECT T1.middle_name FROM Teachers AS T1 WHERE T1.teacher_id  =  1

eval_err_num:277
hard pred: select customer_name , customer_phone from Customers
hard gold: SELECT count ( * )  FROM STUDENTS WHERE student_id IN  (  SELECT student_id FROM Behavior_Incident  ) 

eval_err_num:278
extra pred: select T2.customer_name , T2.customer_phone from Mailshot_Customers as T1 join Customers as T2 on T1.customer_id = T2.customer_id where T1.outcome_code = 1
extra gold: SELECT count ( * )  FROM STUDENTS WHERE student_id NOT IN  (  SELECT student_id FROM Behavior_Incident  ) 

eval_err_num:279
extra pred: select T2.customer_phone , T2.customer_email from Mailshot_Customers as T1 join Customers as T2 on T1.customer_id = T2.customer_id where T1.outcome_code = 1
extra gold: SELECT first_name, middle_name, last_name FROM STUDENTS WHERE student_id NOT IN  (  SELECT student_id FROM Behavior_Incident  ) 

eval_err_num:280
medium pred: select name from airports where city = 1
medium gold: SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id

eval_err_num:281
medium pred: select count ( * ) from airports where country = 1
medium gold: SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id where T2.outcome_code  =  "No Response"

eval_err_num:282
medium pred: select count ( * ) from airports where country = 1
medium gold: SELECT T1.customer_phone, T1.customer_email FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id where T2.outcome_code  =  "No Response"

easy pred: select * from routes
easy gold: SELECT name from airports where city  =  'Madang'

easy pred: select * from airlines where name = 1
easy gold: SELECT count ( * )  from airports where country  =  'Papua New Guinea'

medium pred: select count ( * ) from airlines where name = 1
medium gold: SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid WHERE T2.country   =   'Italy'

eval_err_num:283
easy pred: select * from airlines where name intersect 1
easy gold: SELECT elevation from airports where name = 'Mount Hagen Kagamuga Airport'

easy pred: select count ( * ) from airlines
easy gold: select * from routes

medium pred: select count ( * ) from airlines group by name order by count ( * ) asc limit 1
medium gold: SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name   =   'American Airlines'

medium pred: select count ( * ) from airlines group by name order by count ( * ) desc limit 1
medium gold: SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name   =   'American Airlines'

medium pred: select name from airlines group by name order by count ( * ) desc limit 1
medium gold: SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name  ! =   'American Airlines'

medium pred: select country from airlines where name = 1
medium gold: SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name  ! =   'American Airlines'

easy pred: select name from airports where city = 1
easy gold: SELECT COUNT ( * )  FROM airlines

extra pred: select name from airports where elevation = 1
extra gold: SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count ( * )  ASC LIMIT 1

extra pred: select iata from airports where name = 1
extra gold: SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1

easy pred: select name from airports where country = 1 group by name order by count ( * ) desc limit 1
easy gold: SELECT name FROM airports WHERE city  =  "Goroka"

easy pred: select apid from airports where country = 1 group by name order by count ( * ) desc limit 1
easy gold: SELECT name FROM airports WHERE elevation  =  5282

easy pred: select airline from routes where src_apid = ( select name from airports where country = 1 group by name order by count ( * ) desc limit 1 )
easy gold: SELECT iata FROM airports WHERE name  =  "Madang Airport"

extra pred: select count ( * ) from airports where country = 1
extra gold: SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1

extra pred: select count ( * ) from airports where country = 1
extra gold: SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:284
hard pred: select count ( * ) from ( select T1.rid from routes as T1 join airports as T2 on T1.src_apid = T2.apid where T2.country = 1 != select T3.rid from routes as T3 join airports as T4 on T3.src_apid = T4.apid where T4.country = 1 )
hard gold: select distinct airline from routes where src_apid  =   ( SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1 ) 

medium pred: select rid from routes where dst_apid = 1
medium gold: SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE country   =   'Canada'

medium pred: select count ( T2.dst_apid ) from airlines as T1 join routes as T2 on T1.alid = T2.alid where T1.name = 1
medium gold: SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE country   =   'United States'

easy pred: select dst_apid from routes where rid = 1
easy gold: select count ( * )  from  ( SELECT rid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.country   =   'United States' intersect SELECT rid FROM airports AS T3 JOIN routes AS T4 ON T3.apid   =   T4.src_apid WHERE T3.country   =   'Canada' ) 

easy pred: select count ( * ) from airports
easy gold: select rid from routes where dst_apid  =  '2990'

medium pred: select country from airports where city = 1
medium gold: SELECT count ( DISTINCT dst_apid )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'

easy pred: select T2.name , T2.city from routes as T1 join airports as T2 on T1.src_apid = T2.apid group by T1.dst_apid order by count ( * ) desc limit 1
easy gold: select dst_apid from routes where rid  =  39

easy pred: select count ( apid ) from airports
easy gold: SELECT count ( * )  FROM airports

easy pred: select count ( city ) from airports
easy gold: SELECT country FROM airports where city  =  'Goroka'

extra pred: select city from airports group by city having count ( * ) > 1 order by count ( * )
extra gold: SELECT T1.name ,  T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid GROUP BY T2.dst_apid ORDER BY count ( * )  DESC LIMIT 1

eval_err_num:285
easy pred: select count ( treatment_type_code ) from Treatments
easy gold: SELECT COUNT ( apid )  FROM airports

eval_err_num:286
easy pred: select charge_id from Charges order by charge_amount desc limit 1
easy gold: SELECT COUNT ( DISTINCT city )  FROM airports

eval_err_num:287
medium pred: select charge_id from Charges order by charge_amount desc limit 1
medium gold: SELECT city FROM airports GROUP BY city HAVING count ( * )   >  2 ORDER BY count ( * ) 

easy pred: select count ( * ) from Breeds
easy gold: select count ( * )  from  ( SELECT distinct treatment_type_code from treatments ) 

medium pred: select T2.breed_name , count ( * ) from Dogs as T1 join Breeds as T2 on T1.breed_code = T2.breed_code group by T1.breed_code order by count ( * ) desc limit 1
medium gold: SELECT * FROM Treatments ORDER BY cost_of_treatment DESC LIMIT 1

medium pred: select size_code from Dogs where breed_code = 1
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

easy pred: select email_address from Professionals where state = 1
easy gold: SELECT count ( * )  from Breeds

extra pred: select email_address from Professionals where state = 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1

medium pred: select T4.first_name from Professionals as T1 join Treatments as T2 on T1.professional_id = T2.professional_id join Dogs as T3 on T2.dog_id = T3.dog_id join Owners as T4 on T3.owner_id = T4.owner_id where T1.role_code = 1
medium gold: SELECT T2.size_code FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name = "Bulldog"

eval_err_num:288
easy pred: select T4.team_id from team as T1 join batting_postseason as T2 on T1.team_id = T2.team_id join player as T3 on T2.player_id = T3.player_id join all_star as T4 on T3.player_id = T4.player_id order by T1.rank desc limit 1
easy gold: SELECT email_address FROM Professionals WHERE state   =   'Hawaii'

eval_err_num:289
easy pred: select like ( T1.rank ) from team as T1 join postseason as T2 where T2.league_id_winner = 1
easy gold: SELECT email_address FROM Professionals WHERE state   =   'Wisconsin'

eval_err_num:290
easy pred: select year from postseason where league_id_winner = 1 != select year from postseason where league_id_winner = 1
easy gold: SELECT first_name FROM Professionals WHERE role_code   =   'Employee'

medium pred: select count ( * ) from team as T1 join home_game as T2 on T1.team_id = T2.team_id join team_franchise as T3 where T3.franchise_name = 1 and T1.year > = 1
medium gold: SELECT team_id FROM team ORDER BY rank ASC LIMIT 1

medium pred: select team_id from all_star group by team_id order by count ( * ) desc limit 1
medium gold: SELECT max ( T1.wins )  FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings'

medium pred: select attendance from team where team_id = 1
medium gold: SELECT sum ( T1.games )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000

extra pred: select T4.team_id from team as T1 join batting_postseason as T2 on T1.team_id = T2.team_id join player as T3 on T2.player_id = T3.player_id join all_star as T4 on T3.player_id = T4.player_id where T1.attendance = ( select T8.team_id from team as T5 join batting_postseason as T6 on T5.team_id = T6.team_id join player as T7 on T6.player_id = T7.player_id join all_star as T8 on T7.player_id = T8.player_id where T5.team_id = 1 )
extra gold: SELECT t2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br GROUP BY T1.team_ID ORDER BY sum ( T2.w )  DESC LIMIT 1

easy pred: select birth_country from player
easy gold: SELECT attendance FROM home_game where team_id  =  'CH1'

extra pred: select birth_state from player where player_id = 1
extra gold: SELECT T2.team_id FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id WHERE T1.year   =   2014 GROUP BY T1.team_id ORDER BY avg ( T1.attendance )  DESC LIMIT 1

easy pred: select birth_city from player where player_id = 1
easy gold: SELECT team_id FROM home_game where attendance  =  3000

extra pred: select birth_city from player where player_id = 1
extra gold: SELECT  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id  GROUP BY T1.team_id ORDER BY avg ( T1.attendance )  DESC LIMIT 1

easy pred: select player_id from player
easy gold: SELECT birth_country FROM player

eval_err_num:291
easy pred: select T2.player_id , T1.inducted from hall_of_fame as T1 join player as T2 on T1.player_id = T2.player_id where T1.inducted intersect 1
easy gold: SELECT birth_state FROM player where player_id  =  "aardsda01"

easy pred: select T1.year from manager_award as T1 join player as T2 on T1.player_id = T2.player_id join all_star as T3 on T2.player_id = T3.player_id join hall_of_fame as T4 on T2.player_id = T4.player_id group by T3.year order by count ( * ) limit 1
easy gold: SELECT birth_city FROM player where player_id  =  "aardsda01"

easy pred: select avg ( T1.salary ) from salary as T1 join team_franchise as T2 where T2.franchise_name = 1
easy gold: SELECT  player_id FROM hall_of_fame

medium pred: select T2.league_id from team_franchise as T1 join all_star as T2 where T1.franchise_name = 1
medium gold: SELECT  player_id,inducted FROM hall_of_fame

hard pred: select T3.rank , T2.league_id from team_franchise as T1 join all_star as T2 join manager as T3 where T1.franchise_name = 1
hard gold: SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * )  ASC LIMIT 1

eval_err_num:292
medium pred: select artist_name from artist where country = 1
medium gold: SELECT avg ( T1.salary )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings'

eval_err_num:293
easy pred: select T2.artist_name from artist as T1 join song as T2 on T1.artist_name = T2.artist_name where T1.country = 1 except select artist_name from song where rating > 1
easy gold: select league_id from team where name  =  'Boston Red Stockings'

eval_err_num:294
medium pred: select artist_name , gender from artist where country = 1 except select artist_name , gender from artist where country = 1
medium gold: select year,rank from team where name  =  'Boston Red Stockings'

easy pred: select count ( * ) from files
easy gold: SELECT artist_name FROM artist WHERE country   =   "Bangladesh"

hard pred: select artist_name from files where duration = 1
hard gold: SELECT DISTINCT artist_name FROM artist WHERE country   =   "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7

extra pred: select f_id from files where duration = 1
extra gold: select artist_name, gender from artist where artist_name in  ( SELECT DISTINCT artist_name FROM artist WHERE country   =   "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7 ) 

easy pred: select count ( song_name ) from song where resolution < 1
easy gold: SELECT count ( * )  FROM files

easy pred: select T1.file_size from files as T1 join song as T2 on T1.f_id = T2.f_id where T2.resolution < 1
easy gold: SELECT artist_name FROM files where duration  =  "5:23"

easy pred: select T1.formats from files as T1 join song as T2 on T1.f_id = T2.f_id where T2.resolution < 1
easy gold: SELECT f_id FROM files where duration  =  "5:23"

medium pred: select count ( country ) from artist
medium gold: SELECT count ( T2.song_name )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800

medium pred: select artist_name from song group by artist_name order by count ( * ) limit 1
medium gold: SELECT T1.file_size FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800

medium pred: select country from artist where artist_name = 1
medium gold: SELECT T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800

easy pred: select T2.song_name from files as T1 join song as T2 on T1.f_id = T2.f_id where T1.formats = 1
easy gold: SELECT count ( country )  from artist

eval_err_num:295
hard pred: select T2.song_name from files as T1 join song as T2 on T1.f_id = T2.f_id where T1.formats = 1 != select song_name from song where resolution < 1
hard gold: SELECT artist_name from song group by artist_name order by count ( * )  limit 1

eval_err_num:296
easy pred: select song_name , resolution from song where song_name in ( select T2.song_name from files as T1 join song as T2 on T1.f_id = T2.f_id where T1.formats = 1 != select song_name from song where resolution < 1 )
easy gold: SELECT country from artist where artist_name  =  'Enrique'

eval_err_num:297
medium pred: select Name from city
medium gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3"

eval_err_num:298
extra pred: select Name from city
extra gold: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000

eval_err_num:299
extra pred: select Population from county_public_safety where Name = 1
extra gold: Select song_name, resolution from song where song_name in  ( SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000 ) 

eval_err_num:300
easy pred: select like ( Horsepower ) from cars_data
easy gold: SELECT Name FROM city

eval_err_num:301
easy pred: select count ( * ) from cars_data
easy gold: SELECT Name FROM city

eval_err_num:302
easy pred: select count ( Cylinders ) from cars_data
easy gold: SELECT Population FROM county_public_safety WHERE Name  =  "Abbotsford"

medium pred: select count ( * ) from car_makers where FullName = 1
medium gold: SELECT Horsepower FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1

easy pred: select Id from cars_data order by Accelerate limit 1
easy gold: SELECT count ( * )  FROM CARS_DATA

easy pred: select Cylinders from cars_data order by Accelerate limit 1
easy gold: SELECT sum ( cylinders )  FROM CARS_DATA

easy pred: select T3.Maker , count ( * ) from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country group by T1.Continent
easy gold: SELECT count ( * )  FROM CAR_names where model  =  "volvo"

extra pred: select count ( * ) from car_makers where Country = 1
extra gold: SELECT T1.id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

extra pred: select count ( * ) from car_makers where Country = 1
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1

hard pred: select T2.Continent , count ( * ) from continents as T1 join countries as T2 on T1.ContId = T2.Continent group by T1.Continent
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

medium pred: select T3.FullName , T3.Country , count ( * ) from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country where T1.Continent = 1
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "usa"

medium pred: select T3.FullName , T3.Country from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country where T1.Continent = 1
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "germany"

medium pred: select T3.FullName , T3.Country from continents as T1 join countries as T2 on T1.ContId = T2.Continent join car_makers as T3 on T2.CountryId = T3.Country where T1.Continent = 1
medium gold: seLECT count ( * )  FROM car_makers as T1 join countries as T2 on T2.CountryId   =   T1.Country where T2.countryname  =  "france"

hard pred: select avg ( Accelerate ) from cars_data
hard gold: SELECT T1.Continent ,  count ( * )  FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country GROUP BY T1.Continent

hard pred: select avg ( T1.Horsepower ) from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model where T3.Model = 1
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "asia"

eval_err_num:303
hard pred: select avg ( T1.Horsepower ) from cars_data as T1 join car_names as T2 on T1.Id = T2.MakeId join model_list as T3 on T2.Model = T3.Model where T3.Model = 1 and T1.Cylinders = ( select like ( T4.Horsepower ) from cars_data as T4 join car_names as T5 on T4.Id = T5.MakeId join model_list as T6 on T5.Model = T6.Model where T6.Model = 1 )
hard gold: SELECT T3.fullname,  T2.countryName FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId   =   T2.continent JOIN car_makers AS T3 ON T2.CountryId   =   T3.Country where T1.continent  =  "europe"

eval_err_num:304
easy pred: select student_id from Student_Course_Registrations
easy gold: SELECT AVG ( Accelerate )  FROM cars_data

easy pred: select course_id from Courses where course_name = 1
easy gold: SELECT student_id FROM student_course_registrations

eval_err_num:305
easy pred: select T1.u_id from useracct as T1 join review as T2 on T1.u_id = T2.u_id where T2.rating = 1
easy gold: SELECT course_id FROM Courses WHERE course_name  =  "statistics"

eval_err_num:306
easy pred: select T1.name from useracct as T1 join review as T2 on T1.u_id = T2.u_id group by T2.u_id order by count ( * ) desc limit 1
easy gold: SELECT course_description FROM courses WHERE course_name  =  "French"

eval_err_num:307
extra pred: select T1.name from useracct as T1 join review as T2 on T1.u_id = T2.u_id where T2.rank = 1
extra gold: SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id  =  T2.course_Id GROUP BY T1.course_id ORDER BY count ( * )  DESC LIMIT 1

medium pred: select u_id from useracct where name = 1
medium gold: SELECT T1.u_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id WHERE T2.rating  =  10

extra pred: select T2.rating from useracct as T1 join review as T2 on T1.u_id = T2.u_id where T1.name = 1
extra gold: SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id ORDER BY count ( * )  DESC LIMIT 1

medium pred: select T2.rank from useracct as T1 join review as T2 on T1.u_id = T2.u_id where T1.name = 1
medium gold: SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T2.rank = 1

eval_err_num:308
easy pred: select document_code from Documents where document_type_code = 1
easy gold: SELECT u_id FROM useracct where name = "Helen"

eval_err_num:309
medium pred: select document_name from Documents order by access_count desc limit 1
medium gold: SELECT T2.rating FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'

eval_err_num:310
medium pred: select document_name , access_count from Documents order by access_count desc limit 1
medium gold: SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'

easy pred: select user_name , password from Users group by role_code order by count ( * ) desc limit 1
easy gold: SELECT document_code FROM documents WHERE document_type_code = 'Book'

medium pred: select count ( * ) from Users group by role_code order by count ( * ) desc limit 1
medium gold: SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1

medium pred: select user_name from Users group by role_code order by count ( * ) desc limit 1
medium gold: SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1

hard pred: select document_name , access_count from Documents
hard gold: SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1

hard pred: select document_structure_code from Documents
hard gold: SELECT count ( * )  FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1

hard pred: select document_name , document_structure_code from Documents where document_structure_code = ( select min ( document_structure_code ) from Documents )
hard gold: SELECT user_name FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1

hard pred: select avg ( access_count ) from Documents where document_structure_code = ( select min ( document_structure_code ) from Documents ) group by document_name
hard gold: SELECT user_name  FROM users where user_name not in  (  SELECT user_name  FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1 ) 

medium pred: select document_name from Documents
medium gold: SELECT document_name, access_count FROM documents

eval_err_num:311
easy pred: select document_name from Documents where document_name max 1
easy gold: SELECT document_structure_code  FROM documents

eval_err_num:312
easy pred: select avg ( Gross_in_dollar ) from film
easy gold: SELECT document_name FROM documents

eval_err_num:313
medium pred: select Title from film where Director = 1
medium gold: SELECT document_name FROM documents WHERE document_name LIKE "%CV%"

easy pred: select Title from film where Film_ID not in ( select Film_ID from film_market_estimation )
easy gold: SELECT avg ( gross_in_dollar )  FROM film

eval_err_num:314
hard pred: select T1.booking_made_date from Party_Services as T1 join Services as T2 on T1.service_id = T2.service_id where T2.service_id = 1
hard gold: SELECT Title FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) 

eval_err_num:315
medium pred: select count ( * ) from Orders
medium gold: SELECT booking_made_date FROM services AS t1 JOIN party_services AS t2 ON t1.service_id   =   t2.service_id where t1.service_id   =  "1"

eval_err_num:316
medium pred: select count ( * ) from Customers
medium gold: SELECT service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id   =   t2.service_id where t2.booking_id   =  "2"

eval_err_num:317
easy pred: select customer_name from Customers group by customer_id order by count ( * ) desc limit 1
easy gold: SELECT service_descriptio FROM services where service_type_code  =  "Welfare"

easy pred: select shipment_date from Shipments
easy gold: SELECT count ( * )  FROM orders

easy pred: select shipment_date from Shipments order by shipment_date desc limit 1
easy gold: SELECT count ( * )  FROM Customers

eval_err_num:318
extra pred: select shipment_id from Shipments where shipment_date = ( select like ( shipment_date ) from Shipments )
extra gold: SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1

easy pred: select customer_id from Customers where customer_name = 1
easy gold: SELECT shipment_date FROM shipments

medium pred: select T1.date_order_placed from Orders as T1 join Customers as T2 on T1.customer_id = T2.customer_id where T2.customer_name = 1
medium gold: SELECT shipment_date FROM shipments order by shipment_date desc limit 1

hard pred: select customer_details from Customers where customer_id = 1
hard gold: SELECT shipment_id FROM shipments WHERE shipment_date  =   ( SELECT max ( shipment_date )  FROM shipments ) 

easy pred: select invoice_number from Shipments
easy gold: SELECT customer_id FROM customers where customer_name  =  "Savannah"

medium pred: select invoice_number , order_id from Shipments
medium gold: SELECT  T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE t1.customer_name  =  "Alberto"

easy pred: select date_order_placed from Orders where order_id = 1
easy gold: SELECT  customer_details FROM customers  WHERE customer_id  =  "2"

easy pred: select count ( * ) from Customers
easy gold: SELECT invoice_number  from Shipments

medium pred: select customer_name from Customers
medium gold: SELECT invoice_number,  order_id from Shipments

easy pred: select customer_details from Customers
easy gold: SELECT date_order_placed from Orders where order_id = 9

eval_err_num:319
easy pred: select basePrice from Rooms
easy gold: select count ( * )  from customers

eval_err_num:320
easy pred: select basePrice from Rooms order by basePrice desc limit 1
easy gold: select customer_name from customers

eval_err_num:321
easy pred: select RoomId , roomName from Rooms order by basePrice desc limit 1
easy gold: select customer_details from customers

easy pred: select Room from Reservations
easy gold: SELECT basePrice FROM Rooms

medium pred: select avg ( beds ) from Rooms where RoomId in ( select Room from Reservations )
medium gold: SELECT basePrice FROM Rooms ORDER BY basePrice DESC LIMIT 3

medium pred: select avg ( beds ) from Rooms where RoomId not in ( select Room from Reservations )
medium gold: SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3

eval_err_num:322
easy pred: select T1.guest_first_name from Guests as T1 join Apartment_Bookings as T2 on T1.guest_id = T2.guest_id where T2.booking_status_code = 1
easy gold: SELECT DISTINCT room FROM reservations

eval_err_num:323
hard pred: select T1.guest_last_name from Guests as T1 join Apartment_Bookings as T2 on T1.guest_id = T2.guest_id where T2.booking_status_code = 1
hard gold: SELECT avg ( beds )  FROM rooms WHERE roomid IN  ( SELECT DISTINCT room FROM reservations ) 

eval_err_num:324
extra pred: select T1.guest_last_name from Guests as T1 join Apartment_Bookings as T2 on T1.guest_id = T2.guest_id where T2.booking_status_code = 1
extra gold: SELECT avg ( beds )  FROM rooms WHERE roomid NOT IN  ( SELECT DISTINCT room FROM reservations ) 

medium pred: select sum ( T2.room_count ) from Apartment_Buildings as T1 join Apartments as T2 on T1.building_id = T2.building_id where T1.building_short_name = 1
medium gold: SELECT T2.guest_first_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T1.booking_status_code   =   "Confirmed"

medium pred: select bathroom_count from Apartments where apt_id = 1
medium gold: SELECT T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T1.booking_status_code   =   "Confirmed"

medium pred: select building_short_name from Apartment_Buildings where building_id = 1
medium gold: SELECT sum ( T2.room_count )  FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id   =   T2.building_id WHERE T1.building_short_name   =   "Columbus Square"

easy pred: select building_manager from Apartment_Buildings where building_full_name = 1
easy gold: SELECT bathroom_count from  Apartments  where  apt_id = 2

easy pred: select sum ( bathroom_count ) from Apartments where building_id = 1
easy gold: SELECT building_short_name FROM Apartment_Buildings WHERE building_id  =  133

easy pred: select sum ( room_count ) from Apartments where building_id = 1
easy gold: SELECT building_manager FROM Apartment_Buildings WHERE building_full_name  =  "Mercedes House"

eval_err_num:325
easy pred: select Company_ID , Name , Headquarters from company
easy gold: SELECT sum ( bathroom_count )  FROM Apartments WHERE building_id  =  808

eval_err_num:326
easy pred: select Headquarters from company group by Headquarters having count ( * ) > = 1
easy gold: SELECT sum ( room_count )  FROM Apartments WHERE building_id  =  808

medium pred: select Name from company where Industry = 1 or Industry = 1
medium gold: SELECT Company_ID,Name,Headquarters FROM company

easy pred: select sum ( Sales_in_Billion ) from company where Industry = 1 or Industry = 1
easy gold: SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * )   > =   2

medium pred: select Name from company order by Sales_in_Billion desc limit 1
medium gold: SELECT Name FROM company WHERE Industry   =   "Banking" OR Industry   =   "Retailing"

medium pred: select Headquarters from company where Name = 1
medium gold: SELECT sum ( sales_in_billion )  FROM company WHERE Industry   =   "Banking" OR Industry   =   "Retailing"

medium pred: select Industry from company where Name = 1
medium gold: SELECT sum ( Market_Value_in_Billion )  FROM company WHERE Industry   =   "Banking" OR Industry   =   "Retailing"

eval_err_num:327
medium pred: select name , friend from PersonFriend
medium gold: SELECT name FROM company ORDER BY Sales_in_Billion DESC LIMIT 1

eval_err_num:328
easy pred: select T1.friend , T2.age from PersonFriend as T1 join Person as T2 on T1.friend = T2.name
easy gold: SELECT headquarters FROM company where name  =  "Royal Dutch Shell"

eval_err_num:329
easy pred: select T2.name from PersonFriend as T1 join Person as T2 on T1.friend = T2.name where T1.friend in ( select name from Person where age > 1 ) != select T4.name from PersonFriend as T3 join Person as T4 on T3.friend = T4.name where T3.friend in ( select name from Person where age < 1 )
easy gold: SELECT Industry FROM company where name  =  "Royal Dutch Shell"

medium pred: select avg ( age ) from Person
medium gold: SELECT name, friend from personFriend

medium pred: select count ( * ) from Person where gender = 1
medium gold: SELECT T2.friend, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend

eval_err_num:330
extra pred: select count ( * ) from Person where age > ( select like ( age ) from Person where job = 1 )
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age > 40 )  INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age < 30 ) 

easy pred: select age from Person where name = 1
easy gold: select avg ( age )  from person

easy pred: select name from Person where job = 1
easy gold: select count ( * )  from person where gender  =  "female"

hard pred: select name from Person where city = 1
hard gold: SELECT count ( * )  FROM Person WHERE age  >   ( SELECT max ( age )  FROM person WHERE job   =   'engineer' ) 

eval_err_num:331
easy pred: select T1.name from PersonFriend as T1 join Person as T2 on T1.friend = T2.name where T2.name = 1 and T1.name intersect 1
easy gold: SELECT age from person where name  =  "Zach"

easy pred: select city from Person where name = 1
easy gold: SELECT name from person where job  =  "doctor"

extra pred: select T2.name from PersonFriend as T1 join Person as T2 on T1.friend = T2.name where T1.name = 1
extra gold: SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T1.age  <   ( SELECT avg ( age )  FROM person ) 

extra pred: select city from Person where name = 1
extra gold: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name   =   T2.name JOIN PersonFriend AS T3 ON T1.friend   =   T3.name JOIN PersonFriend AS T4 ON T3.friend   =   T4.name WHERE T2.name   =   'Alice' AND T4.name ! =  'Alice'

easy pred: select gender from Person where name = 1
easy gold: select city from person where name  =  "Zach"

easy pred: select job from Person where name = 1
easy gold: select name from person where city  =  "austin"

easy pred: select age from Person where name = 1
easy gold: select friend from PersonFriend where name  =  "Zach"

extra pred: select city from Person where name = 1
extra gold: select name, job from person where name in  ( select friend from PersonFriend where name  =  "Zach" ) 

easy pred: select count ( * ) from Person where gender = 1 and gender = 1
easy gold: SELECT city from person where name  =  "Alice"

easy pred: select count ( * ) from Person where gender = 1
easy gold: SELECT gender from person where name  =  "Alice"

easy pred: select count ( * ) from Person where age < 1
easy gold: SELECT job from person where name  =  "Bob"

eval_err_num:332
medium pred: select count ( * )
medium gold: select count ( * )  from person where gender  =  'female' and age < 40

eval_err_num:333
easy pred: select product_id from Product
easy gold: select count ( * )  from person where gender  =  'male'

eval_err_num:334
medium pred: select count ( * ) , product_id from Product group by product_id
medium gold: select count ( * )  from person where age < 40 and gender  =  'male'

easy pred: select staff_first_name , staff_last_name from Staff
easy gold: SELECT count ( * )  FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id

easy pred: select T1.staff_first_name , T1.staff_last_name from Staff as T1 join Problems as T2 on T1.staff_id = T2.reported_by_staff_id join Product as T3 on T2.product_id = T3.product_id where T3.product_name = 1
easy gold: SELECT t2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id

medium pred: select product_name from Product
medium gold: SELECT count ( * )  ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_id

eval_err_num:335
medium pred: select count ( * ) from shop
medium gold: SELECT staff_first_name ,  staff_last_name FROM staff

eval_err_num:336
hard pred: select Name from employee
hard gold: SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  "rem"

eval_err_num:337
easy pred: select count ( * ) , Shop_ID from hiring group by Shop_ID
easy gold: SELECT product_name from product

easy pred: select Number_products from shop group by Shop_ID order by count ( * ) desc limit 1
easy gold: SELECT * FROM shop

medium pred: select min ( Number_products ) from shop where Shop_ID = ( select Shop_ID from shop group by Shop_ID order by count ( * ) desc limit 1 )
medium gold: SELECT count ( * )  FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id   =   t2.shop_id GROUP BY t2.name

easy pred: select Age from employee where Name = 1
easy gold: SELECT COUNT ( * )  FROM shop

easy pred: select Age from employee where Name = 1
easy gold: SELECT MAX ( Number_products )  FROM shop

easy pred: select T2.Name from evaluation as T1 join employee as T2 on T1.Employee_ID = T2.Employee_ID order by T1.Bonus desc limit 1
easy gold: SELECT MIN ( Number_products )  FROM shop

easy pred: select City from employee
easy gold: SELECT Age from employee where Name = 'George Chuter'

easy pred: select City from employee where Age > 1
easy gold: SELECT Age from employee where Name = 'Lee Mears'

hard pred: select Age from employee where City = 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:338
easy pred: select name from playlists
easy gold: SELECT city FROM employee

eval_err_num:339
medium pred: select count ( * ) from playlists where name = 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1

eval_err_num:340
easy pred: select T1.name from tracks as T1 join playlist_tracks as T2 on T1.id = T2.track_id join playlists as T3 on T2.playlist_id = T3.id where T3.name = 1
easy gold: SELECT Age FROM employee WHERE city  =  'Bath'

easy pred: select T2.title from tracks as T1 join albums as T2 on T1.album_id = T2.id where T1.name = 1
easy gold: SELECT  name  from  playlists

hard pred: select T2.title from tracks as T1 join albums as T2 on T1.album_id = T2.id where T1.name = 1
hard gold: SELECT count ( * )  FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  "Movies"

hard pred: select T2.title from tracks as T1 join albums as T2 on T1.album_id = T2.id where T1.name = 1
hard gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  "Movies"

medium pred: select ( T2.address ) from employees as T1 join customers as T2 on T1.id = T2.support_rep_id where T1.country = 1
medium gold: SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  "Balls to the Wall"

medium pred: select invoice_date from invoices where customer_id = 1
medium gold: SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  "Fast As a Shark"

eval_err_num:341
medium pred: select ( ( ) from invoices where billing_country = ) 1
medium gold: SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  "For Those About To Rock  ( We Salute You ) "

easy pred: select * from genres where name = 1
easy gold: select billing_address from invoices where billing_country  =  "Germany"

easy pred: select T1.name from tracks as T1 join media_types as T2 on T1.media_type_id = T2.id join genres as T3 on T1.genre_id = T3.id where T3.name = 1 or T2.name = 1
easy gold: select invoice_date from invoices where customer_id  =  2

easy pred: select T1.name from tracks as T1 join media_types as T2 on T1.media_type_id = T2.id join genres as T3 on T1.genre_id = T3.id where T3.name = 1 or T2.name = 1
easy gold: select distinct ( billing_city )  from invoices where billing_country  =  "Norway"

easy pred: select count ( T1.media_type_id ) from tracks as T1 join genres as T2 on T1.genre_id = T2.id where T2.name = 1
easy gold: select last_name from customers where state  =  "SP"

medium pred: select count ( * ) from albums
medium gold: SELECT * FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Rock"

extra pred: select count ( * ) from albums ( select count ( * ) from albums group by id having count ( * ) < 1 )
extra gold: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  "Rock" OR T3.name  =  "MPEG audio file"

extra pred: select count ( * ) from albums ( select * from albums group by id having count ( * ) > 1 )
extra gold: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  "Rock" OR T3.name  =  "MPEG audio file"

easy pred: select phone from employees where first_name = 1 and last_name = 1
easy gold: SELECT count ( * )  from albums

easy pred: select phone from employees where first_name = 1 and last_name = 1
easy gold: SELECT count ( * )  from  ( select count ( * )  FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id HAVING count ( T1.id )   <  10 ) 

easy pred: select fax from employees where first_name = 1 and last_name = 1
easy gold: select count ( * )  from  ( SELECT * FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id HAVING count ( T1.id )    > =    10 ) 

medium pred: select billing_country from invoices group by billing_country order by count ( * ) desc limit 1
medium gold: SELECT phone FROM employees WHERE first_name  =  "Nancy" AND last_name  =  "Andrews"

medium pred: select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) desc limit 1
medium gold: SELECT phone FROM employees WHERE first_name  =  "Nancy" AND last_name  =  "Edwards"

medium pred: select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) limit 1
medium gold: SELECT fax FROM employees WHERE first_name  =  "Nancy" AND last_name  =  "Edwards"

medium pred: select billing_country , billing_postal_code from invoices group by billing_country order by count ( * ) limit 1
medium gold: SELECT title FROM employees WHERE first_name  =  "Nancy" AND last_name  =  "Edwards"

hard pred: select count ( * ) from albums
hard gold: SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count ( * )  DESC LIMIT 5

hard pred: select count ( * ) from artists where id in ( select artist_id from albums )
hard gold: SELECT billing_country,COUNT ( * )  FROM invoices GROUP BY billing_country ORDER BY count ( * )  DESC LIMIT 5

eval_err_num:342
hard pred: select count ( * ) from artists where name max 1
hard gold: SELECT billing_country , COUNT ( * )  FROM invoices GROUP BY billing_country ORDER BY count ( * )  LIMIT 5

eval_err_num:343
hard pred: select T2.title from artists as T1 join albums as T2 on T1.id = T2.artist_id where T1.name max 1
hard gold: SELECT billing_country,billing_postal_code FROM invoices GROUP BY billing_country ORDER BY count ( * )  LIMIT 5

easy pred: select count ( * ) from employees where title = 1
easy gold: SELECT count ( * )  from albums

hard pred: select count ( * ) from employees where title = 1 and city = 1
hard gold: SELECT count ( * )  from artists where id in  ( select artist_id from albums ) 

hard pred: select count ( * ) from employees where title = 1 and city = 1
hard gold: SELECT count ( * )  FROM artists AS T1 JOIN albums AS T2 ON T1.id   =   T2.artist_id WHERE T1.name LIKE '%Led%'

hard pred: select city from employees where title = 1
hard gold: SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id   =   T2.artist_id WHERE T1.name LIKE '%Led%'

easy pred: select address from employees
easy gold: SELECT count ( * )  FROM employees WHERE title   =   'IT Staff'

medium pred: select city from employees
medium gold: SELECT count ( * )  FROM employees WHERE title   =   'IT Staff' and city = 'Calgary'

medium pred: select email from employees
medium gold: SELECT count ( * )  FROM employees WHERE title   =   'IT Staff' and city = 'Edmonton'

eval_err_num:344
easy pred: select count ( * ) from Services
easy gold: SELECT address FROM employees

eval_err_num:345
easy pred: select service_id from Services where service_type_code = 1
easy gold: SELECT city FROM employees

eval_err_num:346
easy pred: select count ( * ) from Organizations
easy gold: SELECT email FROM employees

easy pred: select Customer_Event_ID from Customer_Events group by Customer_Event_ID having count ( * ) = 1
easy gold: SELECT count ( * )  from Services

easy pred: select Customer_Event_ID from Customer_Events group by Customer_Event_ID having count ( * ) = 1 and count ( * ) < = 1
easy gold: SELECT service_id from Services where service_type_code  =  "Check"

easy pred: select Customer_Event_ID , property_id from Customer_Events group by Customer_Event_ID having count ( * ) < = 1
easy gold: SELECT count ( * )  from Organizations

medium pred: select T2.thing_id , T2.Type_of_Thing_Code from Timed_Status_of_Things as T1 join Things as T2 on T1.thing_id = T2.thing_id where T1.Status_of_Thing_Code = 1
medium gold: SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID   =   T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * )  = 1

medium pred: select T2.thing_id , T2.Type_of_Thing_Code from Timed_Status_of_Things as T1 join Things as T2 on T1.thing_id = T2.thing_id where T1.Status_of_Thing_Code = 1
medium gold: SELECT T1.Customer_Event_ID  FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID   =   T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * )  BETWEEN 1 AND 3

eval_err_num:347
medium pred: select Country from airlines where Airline = 1
medium gold: SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close'

eval_err_num:348
extra pred: select DestAirport from flights where FlightNo = 1
extra gold: SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' and T1.Date_and_Date < '2017-06-19 02:59:21'

easy pred: select count ( * ) from airports where City = 1
easy gold: SELECT country FROM AIRLINES where Airline  =  'Delta Airlines'

eval_err_num:349
easy pred: select T2.City from airlines as T1 join airports as T2 where T1.Airline = 1 and T1.Airline intersect 1
easy gold: SELECT DestAirport FROM flights where FlightNo  =  44

hard pred: select T1.Airline from airlines as T1 join flights as T2 group by T2.Airline order by count ( * ) desc limit 1
hard gold: SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline WHERE T2.City   =   "Aberdeen" AND T3.Airline   =   "United Airlines"

hard pred: select Airline from flights group by Airline order by count ( * ) limit 1
hard gold: SELECT T2.city FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid   =   T1.Airline where T2.city ! =   'Aberdeen' and T3.airline  =  "United Airlines"

extra pred: select FlightNo from flights where SourceAirport = 1
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  desc LIMIT 1

extra pred: select T1.Airline from airlines as T1 join flights as T2 where T2.FlightNo = ( select FlightNo from flights where SourceAirport = 1 )
extra gold: SELECT T1.airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline GROUP BY T1.Airline ORDER BY count ( * )  asc LIMIT 1

eval_err_num:350
easy pred: select count ( * ) from Student
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport   =  "AHD"

eval_err_num:351
medium pred: select count ( * ) from Student ( select StuID from Student except select StuID from Student )
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid   =   T2.Airline WHERE T2.SourceAirport   =   " AHD"

easy pred: select count ( * ) from Faculty where Rank = 1
easy gold: SELECT count ( * )  from student

easy pred: select count ( * ) from Faculty where Rank = 1
easy gold: select count ( * )  from  ( SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in ) 

medium pred: select Fname , Lname from Faculty where FacID = 1
medium gold: SELECT  count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor  where  T1.Rank = "Professor"

medium pred: select Sex from Faculty where Rank = 1
medium gold: SELECT  count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor  where  T1.Rank = "Instructor"

medium pred: select avg ( FacID ) from Faculty
medium gold: SELECT FNAME, LNAME FROM Faculty WHERE FacID  =  1082

easy pred: select Rank from Faculty group by Rank order by count ( * ) desc limit 1
easy gold: SELECT Sex FROM Faculty WHERE Rank  =  "Professor"

easy pred: select count ( Rank ) from Faculty where Rank = 1
easy gold: SELECT phone FROM Faculty WHERE Lname  =  "Goodrich"

eval_err_num:352
easy pred: select date_of_transaction from Transactions where amount_of_transaction < 1
easy gold: SELECT AVG ( FacID )  FROM Faculty

eval_err_num:353
hard pred: select transaction_id from Transactions where transaction_type_code = 1
hard gold: SELECT Rank FROM faculty GROUP BY Rank order by count ( * ) desc limit 1

eval_err_num:354
easy pred: select transaction_id from Transactions where transaction_type_code = 1
easy gold: SELECT COUNT ( * )  FROM faculty where rank  =  "Professor"

eval_err_num:355
medium pred: select transaction_type_code , like ( share_count ) from Transactions group by transaction_type_code
medium gold: SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction < 3000

eval_err_num:356
easy pred: select share_count from Transactions where transaction_type_code = 1 and share_count intersect 1 order by share_count limit 1
easy gold: select transaction_id from Transactions where transaction_type_code = 'SALE'

easy pred: select share_count from Transactions where transaction_id = 1
easy gold: select transaction_id from Transactions where transaction_type_code = 'PUR'

medium pred: select share_count from Transactions where transaction_id = 1 order by share_count limit 1
medium gold: SELECT T2.investor_id FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction < 3000

medium pred: select count ( * ) from Transactions where share_count < 1
medium gold: SELECT transaction_type_code ,  max ( share_count )   FROM TRANSACTIONS GROUP BY transaction_type_code

hard pred: select T3.lot_details from Transactions as T1 join Transactions_Lots as T2 on T1.transaction_id = T2.transaction_id join Lots as T3 on T2.lot_id = T3.lot_id where T1.share_count < 1
hard gold: SELECT share_count  FROM TRANSACTIONS  where transaction_type_code  =  'PUR' and share_count ! =  "" order by share_count limit 1

easy pred: select T3.lot_details from Transactions as T1 join Transactions_Lots as T2 on T1.transaction_id = T2.transaction_id join Lots as T3 on T2.lot_id = T3.lot_id where T1.share_count > 1 and T1.transaction_type_code = 1
easy gold: SELECT count ( * )  FROM Transactions Where share_count  <  50

hard pred: select T3.lot_details from Transactions as T1 join Transactions_Lots as T2 on T1.transaction_id = T2.transaction_id join Lots as T3 on T2.lot_id = T3.lot_id where T1.share_count > 1 and T1.transaction_type_code = 1 order by T1.amount_of_transaction desc limit 1
hard gold: SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50

eval_err_num:357
hard pred: select College from match_season group by College having count ( * ) = 1
hard gold: SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   "PUR"

eval_err_num:358
extra pred: select Player from match_season where College = 1
extra gold: SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1

eval_err_num:359
extra pred: select Player , Position from match_season where College = 1
extra gold: SELECT T3.date_of_transaction FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1

eval_err_num:360
extra pred: select count ( * ) from match_season where College = 1
extra gold: SELECT T3.transaction_type_code FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1

easy pred: select count ( Country ) from match_season
easy gold: SELECT College FROM match_season GROUP BY College HAVING count ( * )    =   2

easy pred: select count ( Player ) from match_season
easy gold: SELECT Player FROM match_season where College = 'UCLA'

medium pred: select count ( College ) from match_season
medium gold: SELECT Player,Position FROM match_season where College = 'UCLA'

eval_err_num:361
easy pred: select Country from mountain where Height < 1
easy gold: SELECT count ( distinct country )  from match_season

eval_err_num:362
easy pred: select Country from mountain where Height > 1
easy gold: SELECT count ( distinct player )  from match_season

eval_err_num:363
easy pred: select Country from mountain where Height > 1 != select Country from mountain where Height > 1
easy gold: SELECT count ( distinct college )  from match_season

easy pred: select Name from climber
easy gold: SELECT Country FROM mountain WHERE Height  <  5200

easy pred: select T1.Time from climber as T1 join mountain as T2 on T1.Mountain_ID = T2.Mountain_ID where T2.Country = 1
easy gold: SELECT Country FROM mountain WHERE Height  >  5600

eval_err_num:364
easy pred: select Name from Photos where Photo_ID = 1
easy gold: SELECT Name FROM climber

eval_err_num:365
medium pred: select Description from Photos where Name = 1
medium gold: SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID   =   T2.Mountain_ID WHERE T2.Country   =   "Uganda"

easy pred: select Name , Tourist_Attraction_ID from Tourist_Attractions where How_to_Get_There = 1
easy gold: SELECT Name FROM PHOTOS where photo_id = 280

easy pred: select Name , Tourist_Attraction_ID from Tourist_Attractions where How_to_Get_There = 1 or How_to_Get_There = 1
easy gold: SELECT Description FROM PHOTOS where name = 'game2'

easy pred: select Name , Tourist_Attraction_ID , Opening_Hours from Tourist_Attractions where How_to_Get_There = 1 or How_to_Get_There = 1
easy gold: SELECT Tourist_Attraction_ID FROM PHOTOS where Name = 'game2'

eval_err_num:366
medium pred: select T3.Name from party as T1 join party_host as T2 on T1.Party_ID = T2.Party_ID join host as T3 on T2.Host_ID = T3.Host_ID where T1.Number_of_hosts > 1
medium gold: SELECT Name, Tourist_Attraction_ID FROM Tourist_Attractions WHERE How_to_Get_There   =   "walk"

eval_err_num:367
hard pred: select T3.Name from party as T1 join party_host as T2 on T1.Party_ID = T2.Party_ID join host as T3 on T2.Host_ID = T3.Host_ID order by T1.Number_of_hosts asc limit 1
hard gold: SELECT T2.Name, t2.Tourist_Attraction_ID FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID   =   T2.Location_ID WHERE T1.Address   =   "660 Shea Crescent" OR T2.How_to_Get_There   =   "walk"

eval_err_num:368
hard pred: select T1.Location from party as T1 join party_host as T2 on T1.Party_ID = T2.Party_ID join host as T3 on T2.Host_ID = T3.Host_ID order by T3.Age desc limit 1
hard gold: SELECT T2.Name, t2.Tourist_Attraction_ID, t2.Opening_Hours FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID   =   T2.Location_ID WHERE T1.Address   =   "660 Shea Crescent" OR T2.How_to_Get_There   =   "walk"

hard pred: select * from party where Party_Theme = 1
hard gold: SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID WHERE T3.Number_of_hosts  >  20

extra pred: select First_year , Last_year from party where Party_Theme = 1
extra gold: SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID order by T3.Number_of_hosts asc limit 1

extra pred: select First_year , Last_year from party where Party_Theme = 1 or Party_Theme = 1
extra gold: SELECT T3.location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID order by T2.age desc limit 1

easy pred: select T1.Location from party as T1 join party_host as T2 on T1.Party_ID = T2.Party_ID join host as T3 on T2.Host_ID = T3.Host_ID where T3.Age > 1
easy gold: SELECT * FROM party WHERE Party_Theme   =   "Spring"

medium pred: select Number_of_hosts from party where Party_Theme = 1
medium gold: SELECT First_year ,  Last_year FROM party WHERE Party_Theme   =   "Teqnology"

extra pred: select count ( * ) from party where Location = 1
extra gold: SELECT First_year ,  Last_year FROM party WHERE Party_Theme   =   "Spring" OR Party_Theme   =   "Teqnology"

hard pred: select Location from party
hard gold: SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID WHERE T2.Age  >  50

easy pred: select Location from party order by Number_of_hosts desc limit 1
easy gold: SELECT number_of_hosts from party where party_theme  =  "Spring"

easy pred: select Party_Theme from party
easy gold: SELECT count ( * )  from party where location  =  "Hemkade 48 Zaandam"

eval_err_num:369
easy pred: select avg ( loser_age ) from matches
easy gold: SELECT Location FROM party

eval_err_num:370
medium pred: select avg ( winner_age ) from matches
medium gold: SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1

eval_err_num:371
easy pred: select count ( winner_entry ) from matches where winner_hand = 1
easy gold: SELECT Party_Theme FROM party

easy pred: select winner_name from matches order by winner_age limit 1
easy gold: SELECT avg ( loser_age )   FROM matches

easy pred: select winner_rank_points from matches order by winner_age limit 1
easy gold: SELECT avg ( winner_age )   FROM matches

easy pred: select winner_age from matches order by year limit 1
easy gold: SELECT count ( * )  from matches where winner_hand  =  "L"

medium pred: select T1.player_id from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.loser_age limit 1
medium gold: SELECT DISTINCT winner_name  FROM matches ORDER BY winner_age LIMIT 3

medium pred: select T1.player_id from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.loser_age limit 1
medium gold: SELECT loser_rank_points FROM matches ORDER BY winner_age LIMIT 3

medium pred: select T1.first_name , T1.country_code from players as T1 join matches as T2 on T1.player_id = T2.winner_id order by T2.loser_age limit 1
medium gold: SELECT winner_age FROM matches ORDER BY winner_age LIMIT 3

medium pred: select loser_name from matches where loser_age = 1
medium gold: SELECT player_id FROM players ORDER BY birth_date desc LIMIT 1

medium pred: select count ( * ) from players where first_name = 1 and last_name = 1
medium gold: SELECT player_id FROM players ORDER BY birth_date LIMIT 1

medium pred: select T3.player_id from matches as T1 join players as T2 on T1.winner_id = T2.player_id join rankings as T3 on T2.player_id = T3.player_id where T1.loser_rank > 1
medium gold: SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1

easy pred: select T3.ranking_points , sum ( T2.winner_rank_points ) from players as T1 join matches as T2 on T1.player_id = T2.winner_id join rankings as T3 on T1.player_id = T3.player_id group by T1.player_id
easy gold: SELECT distinct loser_name from matches where loser_age  =  24.626967830300003

medium pred: select T1.first_name , T1.last_name from players as T1 join matches as T2 on T1.player_id = T2.winner_id where T2.winner_rank = 1
medium gold: SELECT count ( * )  from matches where loser_name  =  "Petra Kvitova" or winner_name  =  "Petra Kvitova"

                     easy                 medium               hard                 extra                all                  joint_all           
count                571                  427                  201                  144                  1343                 454                 

====================== EXACT MATCHING ACCURACY =====================
exact match          0.268                0.187                0.144                0.181                0.214                0.110               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.395                0.364                0.359                0.412                0.382                0.000               
select(no AGG)       0.419                0.377                0.373                0.412                0.398                0.000               
where                0.412                0.426                0.297                0.354                0.394                0.000               
where(no OP)         0.417                0.438                0.351                0.431                0.416                0.000               
group(no Having)     0.098                0.176                0.483                0.737                0.280                0.000               
group                0.098                0.157                0.379                0.632                0.240                0.000               
order                0.036                0.371                0.290                0.727                0.296                0.000               
and/or               1.000                0.907                0.943                0.901                0.951                0.000               
IUEN                 0.000                0.000                0.857                0.200                0.368                0.000               
keywords             0.531                0.611                0.466                0.528                0.547                0.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.294                0.262                0.254                0.278                0.276                0.000               
select(no AGG)       0.312                0.272                0.264                0.278                0.288                0.000               
where                0.324                0.287                0.191                0.271                0.285                0.000               
where(no OP)         0.328                0.295                0.226                0.329                0.301                0.000               
group(no Having)     0.385                0.155                0.226                0.237                0.219                0.000               
group                0.385                0.138                0.177                0.203                0.188                0.000               
order                0.667                0.271                0.141                0.239                0.230                0.000               
and/or               0.958                0.979                0.958                0.985                0.967                0.000               
IUEN                 0.000                0.000                0.273                0.056                0.175                0.000               
keywords             0.533                0.399                0.274                0.326                0.404                0.000               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.337                0.305                0.297                0.332                0.321                1.000               
select(no AGG)       0.357                0.316                0.309                0.332                0.334                1.000               
where                0.363                0.343                0.233                0.307                0.330                1.000               
where(no OP)         0.367                0.352                0.275                0.373                0.349                1.000               
group(no Having)     0.156                0.165                0.308                0.359                0.246                1.000               
group                0.156                0.147                0.242                0.308                0.211                1.000               
order                0.068                0.313                0.189                0.360                0.259                1.000               
and/or               0.979                0.942                0.950                0.941                0.959                1.000               
IUEN                 1.000                1.000                0.414                0.087                0.237                1.000               
keywords             0.532                0.483                0.345                0.403                0.465                1.000               


                     turn 1               turn 2               turn 3               turn 4               turn >4             
count                454                  432                  335                  88                   34                  

====================== TRUN EXACT MATCHING ACCURACY =====================
exact match          0.205                0.190                0.194                0.375                0.441               
