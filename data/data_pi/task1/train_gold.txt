SELECT payment_method FROM customers WHERE customer_id  = 1	customers_campaigns_ecommerce
SELECT customer_address FROM customers WHERE customer_name  = "Wendell"	customers_campaigns_ecommerce

SELECT T2.customer_name  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'Order'	customers_campaigns_ecommerce
SELECT T2.payment_method  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'Order'	customers_campaigns_ecommerce
SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'No Response'	customers_campaigns_ecommerce

SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code   =   'Cancelled'	customers_campaigns_ecommerce
SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Paid'	customers_campaigns_ecommerce
SELECT shipping_method_code  FROM customer_orders WHERE order_status_code  =  'Paid'	customers_campaigns_ecommerce

SELECT station_id from station where name  =  "London Waterloo"	train_station
SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id where T1.station_id  =  1	train_station
SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id where T1.station_id  =  1	train_station

SELECT Annual_interchanges FROM station ORDER BY Annual_interchanges DESC LIMIT 1	train_station
SELECT sum ( Total_Passengers )  FROM station	train_station
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )    =   1	train_station

SELECT name FROM station	train_station

SELECT number_of_platforms FROM station where Main_services  =  "South Western Main Line West of England Main Line"	train_station
SELECT Total_Passengers FROM station where name  =  "London Waterloo"	train_station
SELECT Annual_interchanges FROM station where name  =  "London Bridge"	train_station

select location, count ( * )  from station group by Location order by count ( * )  desc limit 1	train_station
SELECT sum ( Total_Passengers )  from station where Location  = 'London'	train_station
select sum ( Number_of_Platforms )  from station where Location  = 'London'	train_station
select Name from station where Location  =  'London'	train_station
select Main_Services from station where Location  =  'London'	train_station

select total_passengers from station where name  =  "London Waterloo"	train_station
select number_of_platforms from station where station_id  =  2	train_station
select main_services from station where station_id  =  3	train_station
SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms   > =    15	train_station

SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1	train_station
SELECT Total_Passengers FROM station where name  =  "London Waterloo"	train_station
SELECT Number_of_Platforms FROM station where name  =  "London Waterloo"	train_station
SELECT location FROM station where name  =  "London Waterloo"	train_station

SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms   > =    15	train_station
SELECT DISTINCT LOCATION FROM station WHERE total_passengers  >  25	train_station
SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms   =   19	train_station

SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )    =   1	train_station
SELECT name from station where location  =  "Glasgow"	train_station
SELECT Number_of_Platforms from station where name   =  "Glasgow Central"	train_station

SELECT count ( * )  FROM circuits WHERE country  =  "France"	formula_1
SELECT circuitId  FROM circuits WHERE country  =  "France"	formula_1
SELECT circuitId, location  FROM circuits WHERE country  =  "France"	formula_1

select forename,surname from drivers	formula_1
select count ( * )  from  ( SELECT  ( T1.driverid )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5 ) 	formula_1

SELECT T1.driverid ,  T1.forename ,  count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )    > =    2	formula_1
SELECT driverRef , nationality  FROM drivers where forename = 'Fernando'	formula_1
SELECT T2.position, count ( * )   FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid  where T1.forename = 'Fernando' and rank  =  1	formula_1

SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  DESC LIMIT 1	formula_1
SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  LIMIT 1	formula_1
SELECT T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  LIMIT 1	formula_1
SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  limit 1	formula_1
SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 and T1.surname = 'Hamilton' GROUP BY T1.driverid	formula_1

SELECT forename ,  surname FROM drivers	formula_1
SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds LIMIT 1	formula_1
SELECT nationality FROM drivers WHERE forename  =  "Lewis" and surname  =  "Hamilton"	formula_1

SELECT count ( * )  FROM drivers	formula_1
SELECT count ( distinct nationality )  FROM drivers	formula_1
SELECT nationality FROM drivers group by nationality order by count ( * )  desc limit 1	formula_1
SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.nationality  =  "British" ORDER BY fastestLapSpeed DESC LIMIT 1	formula_1

SELECT count ( DISTINCT year )  FROM races	formula_1
SELECT max ( T2.fastestlapspeed )  FROM races AS T1 JOIN results AS T2 ON T1.raceid  =  T2.raceid WHERE T1.year  =  2008 AND T1.name  =  "Monaco Grand Prix"	formula_1

SELECT T1.driverid  FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1	formula_1
SELECT T1.driverid, t1.dob FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1	formula_1

SELECT count ( * )  FROM races	formula_1
SELECT date FROM races  ORDER BY date  LIMIT 1	formula_1
SELECT date FROM races  ORDER BY date DESC LIMIT 1	formula_1
SELECT name,date FROM races  ORDER BY date DESC LIMIT 1	formula_1

SELECT name  FROM races	formula_1
SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1	formula_1
SELECT name ,  circuitid FROM races ORDER BY date DESC LIMIT 1	formula_1

SELECT COUNT ( * )  FROM  ( SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )   < =   30 ) 	formula_1
SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )   < =   30	formula_1
SELECT T1.driverid,count ( * )   FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid	formula_1
SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid having t2.rank < 3	formula_1

SELECT count ( * )  from drivers	formula_1
select count ( * )  from  ( SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5 ) 	formula_1
SELECT T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid order by count ( * )  desc limit 1	formula_1

SELECT max ( Milliseconds )  ,  min ( Milliseconds )  FROM TRACK	chinook_1
SELECT name FROM TRACK where Milliseconds  =   ( select max ( Milliseconds )  from track ) 	chinook_1
SELECT composer FROM TRACK where Milliseconds  =   ( select max ( Milliseconds )  from track ) 	chinook_1

SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId   =   T2.AlbumId JOIN Genre AS T3 ON T2.GenreID   =   T3.GenreID WHERE T3.Name   =   'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId   =   T2.AlbumId JOIN Genre AS T3 ON T2.GenreID   =   T3.GenreID WHERE T3.Name   =   'Rock'	chinook_1
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'	chinook_1
SELECT distinct  T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Metal'	chinook_1
SELECT count ( distinct  T1.Title  ) FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Metal'	chinook_1

SELECT GenreId FROM Genre WHERE Name = "Latin" OR Name = "Pop"	chinook_1
SELECT AVG ( Milliseconds )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name = "Latin" OR T1.Name = "Pop"	chinook_1
SELECT AVG ( UnitPrice )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   "Latin" OR T1.Name   =   "Pop"	chinook_1

select email from customer where customerid = '1'	chinook_1
select count ( * )  from employee where city = 'Calgary'	chinook_1
SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )   > =   10	chinook_1
select title from employee where employeeid =  2	chinook_1

SELECT COUNT ( * )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   "Rock"	chinook_1
SELECT COUNT ( * )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   "Jazz"	chinook_1
SELECT composer FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   "Rock" group by composer order by count ( * )  desc limit 1	chinook_1
SELECT composer FROM track where name like "%B%"	chinook_1

SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =   "AC/DC"	chinook_1

SELECT T1.FirstName, T1.lastname, T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId	chinook_1
SELECT T1.FirstName, T1.lastname, T2.billingaddress FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId	chinook_1
SELECT T1.FirstName, T1.lastname, T2.billingcountry FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId	chinook_1
SELECT T1.FirstName, T1.lastname, T2.billingcity FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId	chinook_1

SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =   "AC/DC"	chinook_1
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =  "Aerosmith"	chinook_1
SELECT Title FROM ALBUM where ArtistId = 4	chinook_1

SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistID where T1.AlbumId  =  1	chinook_1
SELECT Name FROM ARTIST where ArtistId  =  3	chinook_1
SELECT Name FROM ARTIST	chinook_1
SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT ( * )    > =    3 ORDER BY T2.Name	chinook_1

SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1	chinook_1
SELECT T1.Name,count ( * )  FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1	chinook_1

SELECT Name from  Track where TrackId = '2'	chinook_1
SELECT UnitPrice from  Track where name = 'Fast As a Shark'	chinook_1
SELECT Milliseconds from  Track  where TrackId = 1	chinook_1
SELECT count ( * )   from  Genre	chinook_1

SELECT count ( * )  FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId   =   T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )    > =    10	chinook_1
SELECT T1.FirstName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )   > =   10	chinook_1
SELECT Company from Customer where FirstName = "Diego"	chinook_1

select count ( * )  from Customer	chinook_1
select BirthDate from Employee where FirstName is 'Andrew' and LastName is 'Adams'	chinook_1

SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  DESC LIMIT 1	chinook_1
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  ASC LIMIT 1	chinook_1
SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  DESC LIMIT 1	chinook_1
SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  ASC LIMIT 1	chinook_1

SELECT count ( distinct composer )  from track	chinook_1
SELECT COUNT ( * )  FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId WHERE T1.Name   =   "MPEG audio file"	chinook_1
select max ( Milliseconds )  from track	chinook_1
select name from track order by milliseconds desc limit 1	chinook_1
select albumid from track where name  =  "Occupation / Precipice"	chinook_1

SELECT * FROM track WHERE UnitPrice>1	chinook_1
SELECT count ( * )  FROM track	chinook_1
SELECT avg ( UnitPrice )  FROM track	chinook_1

SELECT avg ( Milliseconds )  from Track	chinook_1
SELECT avg ( Bytes )  from Track	chinook_1
SELECT max ( unitprice )  from Track	chinook_1

SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1	chinook_1
SELECT count ( * )  FROM  (  SELECT T2.MediaTypeId FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ) 	chinook_1
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  DESC  LIMIT 1	chinook_1
SELECT count ( * )  FROM Track	chinook_1

SELECT distinct fault_log_entry_id FROM Fault_Log	assets_maintenance
SELECT fault_log_entry_id, count ( * )  FROM Fault_Log_Parts GROUP BY fault_log_entry_id	assets_maintenance
SELECT count ( * ) , *,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where t1.fault_log_entry_id  =  1 GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT skill_id, skill_code FROM skills where skill_id   =   1 or skill_id  =  2 or skill_id  =  3	assets_maintenance
SELECT count ( distinct part_fault_id )  from skills_required_to_fix	assets_maintenance
SELECT skill_description from skills where skill_id  =  3	assets_maintenance
SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id   =   T2.skill_id GROUP BY T1.skill_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT COUNT ( * )  FROM  ( SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_id HAVING count ( * )   >  2 ) 	assets_maintenance
SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_id HAVING count ( * )   >  2	assets_maintenance

SELECT  fault_status from Engineer_Visits where engineer_visit_id = 1	assets_maintenance
SELECT  fault_status from Engineer_Visits where engineer_id = 8	assets_maintenance
SELECT  other_visit_details from Engineer_Visits where engineer_id = 8	assets_maintenance

SELECT gender FROM staff GROUP BY gender ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
select count ( * )  from staff where gender  =  1	assets_maintenance
select count ( * )  from staff where gender ! =  1	assets_maintenance

SELECT asset_id, fault_log_entry_id, fault_description from Fault_Log	assets_maintenance
Select asset_id from Assets where asset_id not in  ( SELECT asset_id from Fault_Log ) 	assets_maintenance
Select asset_model from Assets where asset_id not in  ( SELECT asset_id from Fault_Log ) 	assets_maintenance

SELECT count ( fault_log_entry_id )  FROM Fault_Log	assets_maintenance
select count ( * )  from  (  SELECT fault_log_entry_id FROM Fault_Log where fault_log_entry_id in  (  select fault_log_entry_id from Fault_Log_Parts )     ) 	assets_maintenance
SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  asc LIMIT 1	assets_maintenance
SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  asc LIMIT 1	assets_maintenance
SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT first_name FROM Maintenance_Engineers	assets_maintenance
SELECT   T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id   =   T2.engineer_id JOIN Skills AS T3 ON T2.skill_id   =   T3.skill_id	assets_maintenance
SELECT  other_details from  Maintenance_Engineers	assets_maintenance
SELECT last_name from Maintenance_Engineers	assets_maintenance

SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T2.fault_status FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  "Etha"	assets_maintenance
SELECT T2.visit_start_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  "Etha"	assets_maintenance
SELECT T2.visit_end_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  "Etha"	assets_maintenance

SELECT chargeable_amount FROM Parts WHERE part_id  =  "1"	assets_maintenance
SELECT part_name FROM Parts WHERE part_id  =  "3"	assets_maintenance
SELECT part_name FROM Parts WHERE part_id  =  "2"	assets_maintenance
SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1	assets_maintenance

SELECT count ( * )  ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T2.engineer_visit_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) 	assets_maintenance
SELECT T2.contact_staff_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) 	assets_maintenance
SELECT T2.fault_status FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) 	assets_maintenance
SELECT T1.fault_description FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T1.other_fault_details FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT count ( * )  FROM assets	assets_maintenance
SELECT count ( * )  FROM Third_Party_Companies	assets_maintenance

SELECT  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id   =   T3.part_fault_id GROUP BY T1.part_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT   count ( * )  FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id   =   T3.part_fault_id   GROUP BY T1.part_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT T1.part_id FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name	assets_maintenance
SELECT chargeable_amount FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name	assets_maintenance

select count ( * )  from  ( SELECT * FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    > =  1 ) 	assets_maintenance
select count ( * )  from  ( SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    > =    1 ) 	assets_maintenance
SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )   <  2	assets_maintenance

SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance
select visit_start_datetime, visit_end_datetime from engineer_visits where engineer_id  =   ( SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1 ) 	assets_maintenance

SELECT maintenance_contract_id FROM Maintenance_Contracts	assets_maintenance
SELECT T1.maintenance_contract_id, T2.asset_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id	assets_maintenance
SELECT count ( * )  , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id	assets_maintenance

SELECT T2.contract_start_date FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1	assets_maintenance
SELECT T2.maintenance_contract_id FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1	assets_maintenance
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id WHERE t2.maintenance_contract_id  =  9	assets_maintenance

SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )   <  2	assets_maintenance
SELECT asset_make,asset_model from assets where asset_id  =  2	assets_maintenance
SELECT asset_acquired_date,asset_disposed_date from assets where asset_id  =  2	assets_maintenance
SELECT count ( * )  from assets where other_asset_details  =  "Bad condition"	assets_maintenance
SELECT maintenance_contract_id,supplier_company_id from assets where asset_id  =  2	assets_maintenance

SELECT count ( * )  FROM skills	assets_maintenance
SELECT skill_description FROM skills	assets_maintenance
SELECT fault_short_name FROM part_faults	assets_maintenance
SELECT skill_code FROM skills where skill_description  =  "Mechanical"	assets_maintenance

SELECT count ( * )  from staff	assets_maintenance
SELECT staff_name from staff group by staff_name order by count ( * )  desc limit 1	assets_maintenance
SELECT gender FROM staff GROUP BY gender ORDER BY count ( * )  DESC LIMIT 1	assets_maintenance

SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID	music_4
SELECT * FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T2.Weeks_on_Top  >  2	music_4
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T2.Weeks_on_Top  >  2	music_4

SELECT Category FROM music_festival	music_4
SELECT Category FROM music_festival GROUP BY Category HAVING COUNT ( * )  > 1	music_4

SELECT T2.song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.Artist   =   "Gorgoroth" order by T2.Issue_Date limit 1	music_4
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.Artist   =   "Gorgoroth"	music_4

SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age  < =   23	music_4
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age   > =   24	music_4
SELECT count ( weeks_on_top )  FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age   > =   24	music_4

SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1	music_4
SELECT distinct ( Volume_ID )  from volume where Weeks_On_Top  =   ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) 	music_4
SELECT distinct ( Song )  from volume where Weeks_On_Top  =   ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) 	music_4

SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id   =   t2.organization_id JOIN individuals AS t3 ON t2.individual_id   =   t3.individual_id WHERE t1.organization_name   =   "Labour Party" ORDER BY t2.date_contact_to DESC LIMIT 1	e_government
SELECT t2.date_contact_from, t2.date_contact_to FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id   =   t2.organization_id JOIN individuals AS t3 ON t2.individual_id   =   t3.individual_id WHERE t1.organization_name   =   "Labour Party" ORDER BY t2.date_contact_to DESC LIMIT 1	e_government

SELECT count ( * )  FROM parties	e_government
SELECT count ( * )  FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id   =   t2.party_id WHERE t2.form_id   =    ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * )  DESC LIMIT 1 ) 	e_government
SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id   =   t2.party_id WHERE t2.form_id   =    ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * )  DESC LIMIT 1 ) 	e_government

SELECT party_email FROM parties WHERE party_id  =  "1"	e_government
SELECT party_phone FROM parties WHERE party_id  =  "2"	e_government
SELECT service_id FROM Party_Services WHERE customer_id  =  "10"	e_government
SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id   =   t2.customer_id GROUP BY t1.party_email ORDER BY count ( * )  DESC LIMIT 1	e_government

SELECT * FROM Rooms WHERE bedtype   =   'King'	inn_1
SELECT distinct decor FROM Rooms WHERE bedtype   =   'King'	inn_1
SELECT roomName, decor FROM Rooms WHERE bedtype   =   'King'	inn_1
SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype   =   'King'	inn_1
SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype   =   'King' order by basePrice	inn_1

SELECT * FROM rooms WHERE roomid IN  ( SELECT DISTINCT room FROM reservations ) 	inn_1
SELECT * FROM rooms WHERE roomid NOT IN  ( SELECT DISTINCT room FROM reservations ) 	inn_1

SELECT T1.LastName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T2.roomId  =  "IBS"	inn_1
SELECT bedtype FROM rooms WHERE roomid  =  "HBB"	inn_1
SELECT T1.checkin, T1.checkout FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.roomid  =  "RND"	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count ( * )  DESC LIMIT 1	inn_1

SELECT avg ( Rate )  FROM Reservations	inn_1
SELECT CheckOut FROM Reservations	inn_1
SELECT CheckIn FROM Reservations	inn_1
SELECT count ( Adults )  FROM Reservations WHERE CheckIn   =   "2010-10-23" AND FirstName   =   "CONRAD" AND LastName   =   "SELBIG"	inn_1

SELECT count ( * )  FROM Reservations WHERE FirstName  =  "ROY" AND LastName   =   "SWEAZY"	inn_1
SELECT count ( DISTINCT room )  FROM Reservations	inn_1
SELECT count ( adults ) , count ( kids )  FROM Reservations	inn_1
SELECT checkin, checkout FROM Reservations WHERE code  =  10105	inn_1

SELECT count ( * )  FROM Rooms WHERE bedType  =  "King"	inn_1
SELECT avg ( basePrice )  FROM Rooms WHERE bedType  =  "King"	inn_1

SELECT FirstName from Reservations where  Code = 10105	inn_1
SELECT LastName from Reservations where Code = 10105	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count ( * )  > 60	inn_1

SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds  =   2 AND decor   =   'modern'	inn_1
SELECT roomName, roomid FROM Rooms WHERE basePrice  =   ( select max ( baseprice )  from rooms ) 	inn_1
SELECT baseprice, roomName, roomid FROM Rooms WHERE basePrice  =   ( select min ( baseprice )  from rooms ) 	inn_1
SELECT roomid, roomName, decor FROM Rooms WHERE beds  =   ( select max ( beds )  from rooms ) 	inn_1

SELECT  bedType FROM Rooms where roomid  =  "RND"	inn_1
SELECT  decor FROM Rooms where roomname  =  "Abscond or bolster"	inn_1
SELECT decor , avg ( basePrice )  ,  min ( basePrice )  FROM Rooms GROUP BY decor	inn_1

SELECT roomId FROM Rooms WHERE decor  =  'modern'	inn_1
SELECT count ( * )  FROM Rooms WHERE bedtype  =  'King'	inn_1
SELECT roomName  FROM Rooms WHERE bedtype  =  'King'  	inn_1

SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T2.beds  =  2	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1	inn_1
SELECT T2.roomName, T1.Checkin FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1 AND T1.checkin LIKE "%OCT%"	inn_1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.firstname  =  "ROY"	inn_1

SELECT COUNT ( * )  FROM Rooms	inn_1
SELECT roomName FROM Rooms	inn_1
SELECT basePrice FROM Rooms WHERE roomName  =  "Recluse and defiance"	inn_1

select distinct job_id from employees	hr_1
select HIRE_DATE from employees	hr_1
select distinct phone_number from employees	hr_1

SELECT hire_date FROM employees WHERE department_id   =    ( SELECT department_id FROM employees WHERE first_name   =   "Clara" ) 	hr_1
SELECT  avg ( SALARY )  FROM employees WHERE department_id   =    ( SELECT department_id FROM employees WHERE first_name   =   "Clara" ) 	hr_1

SELECT DEPARTMENT_ID FROM  departments where department_name   =   'Finance'	hr_1
SELECT count ( * )  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'	hr_1
SELECT T1.first_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'	hr_1
SELECT  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'	hr_1
SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'	hr_1

SELECT email FROM employees WHERE commission_pct   =   "null" AND salary BETWEEN 7000 AND 12000 AND department_id  =  50	hr_1
SELECT email FROM employees WHERE commission_pct  =  "null"	hr_1
SELECT email FROM employees WHERE commission_pct > 0	hr_1
SELECT count ( * )  FROM employees WHERE salary >12000	hr_1
SELECT FIRST_NAME,LAST_NAME  FROM employees WHERE salary >12000	hr_1

SELECT count ( * )  FROM employees WHERE first_name LIKE '%M%'	hr_1
SELECT first_name, last_name FROM employees WHERE first_name LIKE '%M%'	hr_1
SELECT count ( * )  FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT first_name, last_name FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'	hr_1

SELECT department_id FROM departments where manager_id  > =   0 and manager_id < =  100	hr_1
SELECT department_id FROM departments where manager_id  > =   100 and manager_id < =  200	hr_1
SELECT employee_id FROM employees WHERE department_id IN  ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) 	hr_1
SELECT * FROM employees WHERE department_id NOT IN  ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) 	hr_1

SELECT first_name ,  last_name FROM employees WHERE first_name LIKE '%m'	hr_1
SELECT first_name ,HIRE_DATE FROM employees WHERE first_name LIKE '%m'	hr_1
SELECT COMMISSION_PCT FROM employees WHERE first_name LIKE '%m'	hr_1
SELECT FIRST_NAME, LAST_NAME FROM employees order by COMMISSION_PCT desc limit 1	hr_1
SELECT HIRE_DATE FROM employees order by COMMISSION_PCT asc limit 1	hr_1

SELECT department_id ,  SUM ( salary )  FROM employees GROUP BY department_id HAVING count ( * )    > =    2	hr_1
SELECT FIRST_NAME , LAST_NAME FROM employees where department_id  =  90	hr_1
select department_ID from employees where FIRST_NAME  = 'Steven' and LAST_NAME  =  'King'	hr_1
select JOB_ID,SALARY from employees where FIRST_NAME  = 'Steven' and LAST_NAME  =  'King'	hr_1
select EMPLOYEE_ID,SALARY from employees order by salary desc limit 1	hr_1

select count ( * )  from employees where first_name LIKE '%z%'	hr_1
select first_name from employees where first_name LIKE '%z%'	hr_1
select first_name,last_name from employees where first_name LIKE '%z%'	hr_1
SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN locations AS T3 ON T2.location_id   =   T3.location_id WHERE T1.first_name LIKE '%z%'	hr_1

SELECT first_name ,  last_name FROM employees	hr_1
SELECT T1.first_name , T1.last_name , T2.department_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id	hr_1
SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id	hr_1

SELECT first_name ,  last_name FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id	hr_1

select min_salary from jobs where JOB_TITLE  = 'president'	hr_1
select Max_SALARY from jobs where JOB_TITLE  = 'President'	hr_1
select FIRST_NAME from employees where employee_id  =  100	hr_1

SELECT first_name ,  last_name FROM employees WHERE department_id   =   70 OR department_id   =   90	hr_1
SELECT PHONE_NUMBER from  employees where first_name  =  'Steven' and last_name  =  'King'	hr_1
SELECT EMPLOYEE_ID from  employees where first_name  =  'Steven' and last_name  =  'King'	hr_1

SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'	hr_1
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC	hr_1
SELECT first_name,last_name FROM employees WHERE hire_date > 1987	hr_1
SELECT salary FROM employees WHERE hire_date > 1987 order by salary	hr_1

SELECT first_name FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'	hr_1
SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id	hr_1

SELECT employee_id ,  salary FROM employees WHERE manager_id   =    ( SELECT employee_id FROM employees WHERE first_name   =   'Payam'  ) 	hr_1
SELECT * from employees order by salary desc limit 1	hr_1
SELECT * from employees order by salary limit 1	hr_1
SELECT employee_id, first_name, last_name from employees where phone_number  =  "515.123.4569"	hr_1
SELECT first_name, hire_date from employees order by hire_date limit 1	hr_1

SELECT employee_id ,  job_id FROM employees WHERE salary  <   (  SELECT min ( salary )  FROM employees WHERE job_id   =   'MK_MAN'  ) 	hr_1
SELECT salary FROM employees WHERE salary  <   (  SELECT min ( salary )  FROM employees WHERE job_id   =   'MK_MAN'  ) 	hr_1

SELECT  ( T1.customer_id )   FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    3	local_govt_and_lot
SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    3	local_govt_and_lot

SELECT count ( DISTINCT T2.Location_Code )  FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id   =   T2.thing_id WHERE T1.service_details   =   'Unsatisfied'	local_govt_and_lot
SELECT count ( DISTINCT thing_id )  FROM Things where Type_of_Thing_Code  =  "Electronics"	local_govt_and_lot
select service_details from things where thing_id  =  2	local_govt_and_lot
select service_type_code from things where thing_id  =  2	local_govt_and_lot
select location_code, date_and_time from Timed_Locations_of_Things where thing_id  =  10	local_govt_and_lot

SELECT T1.resident_id ,count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id	local_govt_and_lot
SELECT T1.resident_id ,  T1.other_details ,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC	local_govt_and_lot
SELECT count ( * )  FROM Residents	local_govt_and_lot

SELECT organization_id FROM Organizations  where organization_details   =   'Denesik and Sons Party'	local_govt_and_lot
SELECT service_type_code FROM services  where service_id   =   '10'	local_govt_and_lot
SELECT T2.organization_details FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id   =   T2.organization_id WHERE  t1.service_id  =   '11'	local_govt_and_lot
SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id   =   T2.organization_id WHERE T2.organization_details   =   'Denesik and Sons Party'	local_govt_and_lot

select count ( organization_id )  from Organizations	local_govt_and_lot
select organization_id from Organizations where organization_id  in  ( SELECT parent_organization_id FROM organizations ) 	local_govt_and_lot
SELECT count ( organization_id )  FROM organizations where organization_id not in  ( SELECT parent_organization_id FROM organizations ) 	local_govt_and_lot
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations	local_govt_and_lot
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations	local_govt_and_lot

SELECT sum ( grant_amount )  FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'	tracking_grants_for_research
SELECT grant_start_date FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'	tracking_grants_for_research
SELECT t1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'	tracking_grants_for_research

SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code   =   T2.outcome_code JOIN Projects AS T3 ON T2.project_id   =   T3.project_id WHERE T3.project_details   =   'sint'	tracking_grants_for_research
SELECT T2.project_id, T3.project_details FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code   =   T2.outcome_code JOIN Projects AS T3 ON T2.project_id   =   T3.project_id WHERE T2.outcome_code   =   'Patent'	tracking_grants_for_research

SELECT T1.role_description  FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT project_id from Project_staff where staff_id  =  '5137097.0'	tracking_grants_for_research
SELECT date_from, date_to from Project_staff where project_id  = '7'	tracking_grants_for_research
SELECT outcome_code from Project_Outcomes where project_id  = '7'	tracking_grants_for_research

SELECT sent_date FROM documents  WHERE document_id  =  2	tracking_grants_for_research
SELECT organisation_id FROM grants WHERE grant_id  = 3	tracking_grants_for_research
SELECT grant_end_date FROM grants WHERE grant_id  = 3	tracking_grants_for_research

SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular'	tracking_grants_for_research
SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular' INTERSECT SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Initial Application'	tracking_grants_for_research
SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Initial Application'	tracking_grants_for_research

SELECT document_description FROM Document_Types WHERE document_description LIKE 'Initial%'	tracking_grants_for_research
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'	tracking_grants_for_research
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'	tracking_grants_for_research

SELECT * FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research

SELECT project_details FROM Projects where  project_id = 1	tracking_grants_for_research
SELECT project_details FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_outcomes  ) 	tracking_grants_for_research
SELECT organisation_id  FROM Projects WHERE  project_id = 2	tracking_grants_for_research

SELECT DISTINCT outcome_code FROM  Project_Outcomes	tracking_grants_for_research
SELECT outcome_description FROM research_outcomes	tracking_grants_for_research
SELECT project_details FROM projects	tracking_grants_for_research
SELECT outcome_details FROM project_outcomes	tracking_grants_for_research
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code   =   T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'	tracking_grants_for_research

SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'	tracking_grants_for_research
SELECT T3.grant_amount  FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'	tracking_grants_for_research
SELECT T1.response_received_date FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id   =   T2.grant_id WHERE T2.grant_amount  >  100	tracking_grants_for_research

SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details	tracking_grants_for_research
SELECT organisation_id  FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details	tracking_grants_for_research
SELECT count ( organisation_id )   FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details	tracking_grants_for_research

SELECT project_details FROM Projects WHERE organisation_id IN  (  SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1  ) 	tracking_grants_for_research
SELECT project_id FROM Projects WHERE organisation_id IN  (  SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1  ) 	tracking_grants_for_research
SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT project_details FROM Projects order by project_id limit 1	tracking_grants_for_research

SELECT count ( distinct project_id )  FROM Project_Staff WHERE role_code   =   'leader'	tracking_grants_for_research
SELECT other_details FROM Project_Staff WHERE role_code   =   'leader' and date_from  <  '1989-04-24 23:51:54'	tracking_grants_for_research

SELECT count ( * )  FROM Project_Staff	tracking_grants_for_research
SELECT date_from FROM Project_Staff where staff_id = 779.0	tracking_grants_for_research
SELECT role_code FROM Project_Staff where staff_id = 674810.0	tracking_grants_for_research

SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'	tracking_grants_for_research
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T3.grant_amount  >  100	tracking_grants_for_research
SELECT count ( * )  FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'	tracking_grants_for_research
SELECT T3.grant_start_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'	tracking_grants_for_research
SELECT T3.grant_amount FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'	tracking_grants_for_research

SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT T1.role_code FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research
SELECT T2.other_details FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1	tracking_grants_for_research

SELECT Name FROM people	debate
SELECT Name FROM people ORDER BY Age DESC LIMIT 1	debate
SELECT avg ( Age )  FROM people	debate
SELECT Party FROM people GROUP BY Party ORDER BY COUNT ( * )  DESC LIMIT 1	debate

SELECT Name FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) 	debate
SELECT Party FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) 	debate
SELECT Age FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) 	debate

SELECT name  from  people	debate
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID	debate
SELECT T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID	debate
SELECT T2.Date FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID	debate

SELECT Name FROM  people WHERE Age   =   35 OR Age   =   36	debate
SELECT Age FROM  people WHERE name  =  "Luther C. Carter"	debate
SELECT Age FROM  people WHERE name  =  "William B. Maclay"	debate

SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3	riding_club
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1	riding_club
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3	riding_club
SELECT votes from player WHERE Player_name LIKE "Jim%"	riding_club
SELECT occupation from player WHERE Player_name LIKE "Jim%"	riding_club
SELECT player_name from player WHERE votes > 10000	riding_club

SELECT Player_name FROM Player	riding_club
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID WHERE T2.Coach_name   =   "Jameson Tomas"	riding_club

select Player_name from player	riding_club
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID	riding_club
SELECT T3.Sponsor_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID	riding_club
SELECT T3.Gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID	riding_club

SELECT player_name from player	riding_club
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID	riding_club
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC	riding_club
SELECT T3.Player_name, T3.gender, T2.coach_name, T2.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC	riding_club
SELECT player_name, votes from player	riding_club
SELECT player_name, votes from player order by votes desc	riding_club

SELECT DISTINCT Residence FROM player	riding_club
SELECT Residence, count ( * )  FROM player GROUP BY Residence	riding_club
SELECT Residence, count ( * )  FROM player EXCEPT SELECT Residence, count ( * )  FROM player WHERE count ( * )  < 2	riding_club
SELECT Player_name, Gender FROM player WHERE Residence  =  "Winnipeg"	riding_club

SELECT Coach_ID from player_coach where starting_year  =  2010	riding_club
SELECT coach_name from coach as t1 join player_coach as t2 on t1.coach_id  =  t2.coach_id where starting_year  =  2010	riding_club
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where t2.coach_name  =  "Jameson Tomas"	riding_club
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where t2.coach_name  =  "Smith Brown"	riding_club
SELECT T1.Coach_name FROM coach AS T1 JOIN player_coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID where T2.Starting_year  =  2011	riding_club
SELECT T3.player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where T2.coach_name  =  "Robert Chen"	riding_club

SELECT Country FROM manager WHERE Age  >  50	railway
SELECT Country FROM manager WHERE Age  <  46	railway
SELECT count ( * )  FROM manager WHERE Country  =  'Scotland'	railway
SELECT count ( * ) , Country FROM manager WHERE Country ! =  'Scotland' group by Country	railway
SELECT count ( * )  FROM manager WHERE Country  =  'United States' and Level  =  5	railway
SELECT Name FROM manager WHERE Country  =  'United States' and Level  =  5	railway

SELECT count ( * )  from railway	railway
SELECT Train_Num from train where Name  =  "Sewagram Exp"	railway
SELECT location from railway where Railway  =  "MR"	railway

SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN  ( SELECT Railway_ID FROM train ) 	railway
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN  ( SELECT Railway_ID FROM train )  AND LOCATION  =  "York"	railway
SELECT ObjectNumber FROM railway WHERE Railway_ID IN  ( SELECT Railway_ID FROM train ) 	railway
SELECT builder FROM railway WHERE ObjectNumber  =  "1975-7006"	railway

SELECT Name,age FROM manager ORDER BY Age DESC LIMIT 1	railway
SELECT Working_year_starts FROM manager where name  =  "Todd Hamilton"	railway

SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT ( * )    > =   2	railway
SELECT built FROM railway GROUP BY LOCATION HAVING COUNT ( * )    > =   2	railway
SELECT LOCATION FROM railway order by built desc limit 1	railway
SELECT builder FROM railway order by built asc limit 1	railway
SELECT built FROM railway order by built asc limit 1	railway

SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  asc limit 1	railway
SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  desc limit 1	railway
SELECT T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  desc limit 1	railway

SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  "voluptatem" AND T1.date_problem_reported > "1995"	tracking_software_problems

SELECT T2.date_problem_reported FROM problems AS T1 JOIN Problems AS T2  WHERE T2.problem_description  = "w"	tracking_software_problems
SELECT T1.other_staff_details FROM problems AS T2 JOIN Staff AS T1 WHERE T2.date_problem_reported  =  '1976-12-18 23:54:41' and T2.reported_by_staff_id  =  T1.staff_id	tracking_software_problems

SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id	tracking_software_problems
SELECT T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id	tracking_software_problems
SELECT T2.product_details FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id	tracking_software_problems

SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  "rem" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  "aut"	tracking_software_problems
SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  "rem"	tracking_software_problems
SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  "aut"	tracking_software_problems
SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id where T1.problem_id =  1	tracking_software_problems
SELECT T3.staff_id FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id where T1.problem_id =  1	tracking_software_problems

SELECT COUNT ( * )  FROM problem_log	tracking_software_problems
SELECT log_entry_date FROM problem_log ORDER BY log_entry_date asc LIMIT 1	tracking_software_problems
SELECT log_entry_date FROM problem_log ORDER BY log_entry_date DESC LIMIT 1	tracking_software_problems
SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1	tracking_software_problems

SELECT staff_id from staff where staff_first_name  =  "Christop"	tracking_software_problems
SELECT count ( * )  FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_id  =  "10"	tracking_software_problems
SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  "Christop"	tracking_software_problems

SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  "Dameon" AND T2.staff_last_name  =  "Frami"	tracking_software_problems
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  "Jolie" AND T2.staff_last_name  =  "Weber"	tracking_software_problems
SELECT problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id GROUP BY problem_id ORDER BY count ( * )  DESC LIMIT 1	tracking_software_problems

SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  "Christop" AND T2.staff_last_name  =  "Berge" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  "Ashley" AND T2.staff_last_name  =  "Medhurst"	tracking_software_problems
SELECT count ( * )  from Staff	tracking_software_problems

SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id   =   T2.people_id	body_builder
SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id   =   T2.people_id WHERE T2.Birth_Date LIKE "%January%"	body_builder
SELECT birth_place FROM people WHERE name  =  "Jack Campbell"	body_builder

SELECT T2.name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Total DESC LIMIT 1	body_builder
SELECT T2.name, t2.people_id FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Total DESC LIMIT 1	body_builder

SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID	body_builder
SELECT T1.Total FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID	body_builder
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Total  <  315	body_builder

SELECT weight from people where name  =  "Ty Conklin"	body_builder
SELECT height from people where name  =  "Jack Campbell"	body_builder

SELECT dock_count FROM station WHERE name  =  "San Jose Diridon Caltrain Station"	bike_1
SELECT bike_id FROM trip WHERE zip_code  =  94041	bike_1
SELECT sum ( dock_count )  FROM station WHERE city  =  "San Jose"	bike_1
SELECT T1.name ,  T1.long ,  avg ( T2.duration )  FROM station AS T1 JOIN trip AS T2 ON T1.id   =   T2.start_station_id GROUP BY T1.name	bike_1

SELECT DISTINCT count ( * )  FROM station	bike_1
SELECT DISTINCT name FROM station	bike_1
select city from station where name  =  "San Jose Civic Center"	bike_1

SELECT count ( * )  FROM trip	bike_1
SELECT start_station_name FROM trip	bike_1
SELECT start_date FROM trip where start_station_name  =  "Howard at 2nd"	bike_1

SELECT sum ( duration )  FROM trip WHERE bike_id   =   636	bike_1
SELECT max ( duration )  FROM trip WHERE bike_id   =   636	bike_1
SELECT max ( duration )  FROM trip WHERE bike_id   =   454	bike_1

SELECT id FROM station WHERE city  =  "San Francisco"	bike_1
SELECT id FROM station WHERE city  =  "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING bikes_available > 10	bike_1
select name from station order by lat desc limit 1	bike_1
select installation_date from station order by lat desc limit 1	bike_1
select id from station where installation_date<'8/6/2013' order by dock_count desc limit 1	bike_1

SELECT count ( * )  FROM trip WHERE start_date LIKE "8/%"	bike_1
SELECT count ( distinct start_station_name )  FROM trip WHERE start_date LIKE "8/%"	bike_1
SELECT count ( * )  FROM trip WHERE start_station_name  =   ( SELECT start_station_name FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT ( * )  DESC LIMIT 1 ) 	bike_1
SELECT distinct start_station_name ,  start_station_id FROM trip WHERE start_station_name  =  'San Francisco Caltrain 2  ( 330 Townsend ) '	bike_1

select name,lat from station	bike_1
SELECT T1.name ,  T1.lat ,  min ( T2.duration )  FROM station AS T1 JOIN trip AS T2 ON T1.id   =   T2.end_station_id GROUP BY T2.end_station_id	bike_1
select name, installation_date from station	bike_1

SELECT start_station_id  FROM trip	bike_1
SELECT count ( DISTINCT start_station_id )  FROM trip WHERE start_station_id IN  ( SELECT start_station_id FROM trip GROUP BY start_station_name HAVING COUNT ( * )   > =   200 ) 	bike_1
SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT ( * )   > =   200	bike_1

SELECT name, id FROM station where id  =  1 or id  =  2	bike_1
SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min ( bikes_available )   <  7	bike_1
SELECT installation_date FROM station WHERE id  =  4	bike_1

SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   "Howard" AND T3.city   =   "San Fransisco"	bike_1
SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   "South Van Ness" AND T3.city   =   "San Fransisco"	bike_1
SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   "Mountain View" AND T3.city   =   "Palo Alto"	bike_1

SELECT name , id FROM station	bike_1
select count ( * )  from  ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available )   >  14 UNION SELECT name FROM station WHERE installation_date LIKE "12/%" ) 	bike_1
SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available )   >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE "12/%"	bike_1

SELECT DISTINCT T2.city FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id	bike_1
SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id	bike_1
SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id WHERE T2.city  =   "San Francisco"	bike_1
SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id WHERE T2.city ! =   "San Francisco"	bike_1

select start_date, start_station_name from trip where id  =  900504	bike_1
select distinct zip_code, bike_id from trip where bike_id  =  454 or bike_id  =  574	bike_1
SELECT id FROM trip ORDER BY duration LIMIT 1	bike_1

SELECT id FROM station WHERE city   =   "San Francisco"	bike_1
SELECT id FROM station WHERE city   =   "San Francisco" INTERSECT SELECT station_id FROM status where bikes_available  >  0	bike_1
SELECT id FROM station WHERE city   =   "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg ( bikes_available )   >  10	bike_1

SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1	cre_Drama_Workshop_Groups
SELECT Order_Date FROM Customer_Orders where Order_ID = 1	cre_Drama_Workshop_Groups
SELECT Customer_ID FROM Customer_Orders where Order_ID = 1	cre_Drama_Workshop_Groups
SELECT Planned_Delivery_Date FROM Customer_Orders where Customer_ID = 516	cre_Drama_Workshop_Groups

SELECT count ( * )  FROM INVOICES	cre_Drama_Workshop_Groups
SELECT count ( * )  FROM INVOICES where payment_method_code  =  "MasterCard"	cre_Drama_Workshop_Groups
SELECT count ( * )  FROM INVOICES where payment_method_code  =  "Visa"	cre_Drama_Workshop_Groups

SELECT distinct payment_method_code FROM INVOICES	cre_Drama_Workshop_Groups
SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count ( * )  DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT count ( * )  FROM INVOICES where payment_method_code  =  "MasterCard"	cre_Drama_Workshop_Groups

SELECT marketing_region_name from marketing_regions	cre_Drama_Workshop_Groups
SELECT marketing_region_code from stores where store_name  =  "Rob Dinning"	cre_Drama_Workshop_Groups
SELECT T1.marketing_region_name from marketing_regions as T1 join stores as T2 on T1.marketing_region_code  =  T2.marketing_region_code where T2.store_name  =  "Rob Dinning"	cre_Drama_Workshop_Groups
SELECT * from stores where store_name  =  "Rob Dinning"	cre_Drama_Workshop_Groups
SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  "Rob Dinning"	cre_Drama_Workshop_Groups

SELECT min ( Order_Quantity )   FROM INVOICES	cre_Drama_Workshop_Groups
SELECT max ( Order_Quantity )  FROM INVOICES	cre_Drama_Workshop_Groups
SELECT avg ( Order_Quantity )  FROM INVOICES	cre_Drama_Workshop_Groups
SELECT order_id, product_id, order_quantity FROM INVOICES	cre_Drama_Workshop_Groups

SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   "stop"	cre_Drama_Workshop_Groups
SELECT T2.Workshop_Group_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   "stop"	cre_Drama_Workshop_Groups
SELECT T2.Address_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   "stop"	cre_Drama_Workshop_Groups

SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID   =   T2.Address_ID	cre_Drama_Workshop_Groups
SELECT distinct T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID   =   T2.Address_ID	cre_Drama_Workshop_Groups
SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID   =   T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID   =   T2.Address_ID	cre_Drama_Workshop_Groups

SELECT count ( * )  FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID JOIN Products AS T3 ON T2.Product_ID   =   T3.Product_ID WHERE T3.Product_price  >  1000	cre_Drama_Workshop_Groups
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000	cre_Drama_Workshop_Groups
SELECT T1.Planned_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000	cre_Drama_Workshop_Groups
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000	cre_Drama_Workshop_Groups

SELECT T1.Service_Type_Description  FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1	cre_Drama_Workshop_Groups
SELECT T1.Parent_Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1	cre_Drama_Workshop_Groups

SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1	cre_Drama_Workshop_Groups
select Product_ID from Order_Items where Order_Quantity  =  1	cre_Drama_Workshop_Groups
SELECT T1.Customer_ID FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1	cre_Drama_Workshop_Groups

SELECT count ( * )  from authors	icfp_1
SELECT country from Inst where name  =  "University of Oxford"	icfp_1
SELECT title from Papers where paperID  =  200	icfp_1

SELECT DISTINCT paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid  WHERE t1.lname   =   "Gibbons"	icfp_1
SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Northeastern University"	icfp_1
SELECT  authID  FROM Authors  where fname = "Ralf"	icfp_1
SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Google"	icfp_1

SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t1.fname   =   "Matthias" AND t1.lname   =   "Blume"	icfp_1
SELECT COUNT ( t1.authID )  FROM authorship as t1 join authors as t2 on t1.authID  =  t2.authID where t2.fname  =  "Matthias" AND t2.lname  =  "Blume"	icfp_1

SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  "Katsuhiro" AND t1.lname  =  "Ueno"	icfp_1
select authID from Authors where fname = 'Katsuhiro' and lname = 'Ueno'	icfp_1
select country from Inst where name = 'Tohoku University'	icfp_1
select count ( * )  from Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE Inst.name = 'Tohoku University'	icfp_1
select instID from Inst where name = 'Tohoku University'	icfp_1

SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count ( * )  DESC LIMIT 1	icfp_1
select country from Inst where name = 'University of Oxford'	icfp_1
select instID from Inst where name = 'University of Oxford'	icfp_1
select distinct T1.paperID from Papers AS T1 JOIN Authorship AS T2 JOIN Inst AS T3 where T3.name = 'University of Oxford'	icfp_1
select title from Papers where paperID = '200'	icfp_1

SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Indiana University"	icfp_1
select paperID from papers where title  =   ( SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Indiana University" ) 	icfp_1
select count ( * )  from authorship	icfp_1

SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.name ORDER BY count ( * )  DESC LIMIT 1	icfp_1
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.name ORDER BY count ( * )  Asc LIMIT 1	icfp_1
SELECT t3.title FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid where t1.name  =  "Google"	icfp_1

SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid JOIN inst AS t4 ON t2.instid   =   t4.instid WHERE t4.country   =   "USA"	icfp_1
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid JOIN inst AS t4 ON t2.instid   =   t4.instid WHERE t4.country   =   "USA" AND t2.authorder   =   2 AND t1.lname   =   "Turon"	icfp_1
select authid from authors where lname  =  "Turon"	icfp_1

SELECT distinct t1.title,t1.paperID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Indiana University"	icfp_1
SELECT distinct t2.authID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t1.title   =   ( SELECT distinct t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   "Indiana University" ) 	icfp_1
SELECT authID,count ( * )  from Authorship group  by authID	icfp_1

SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )   LIMIT 1	icfp_1
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1	icfp_1
SELECT count ( t3.paperID )  FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1	icfp_1

SELECT title FROM papers	icfp_1
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder  > 2	icfp_1
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder   =    ( SELECT max ( authorder )  FROM authorship ) 	icfp_1

SELECT lname FROM authors	icfp_1
SELECT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  "Binders Unbound"	icfp_1
SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  "Binders Unbound"	icfp_1

SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   "Aaron" AND t1.lname   =   "Turon"	icfp_1
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   "Ralf" AND t1.lname   =   "Hinze"	icfp_1
SELECT t3.title,t3.paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   "Ralf" AND t1.lname   =   "Hinze"	icfp_1
SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid  group by t1.authID order by count ( * )  desc limit 1	icfp_1
SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid  group by t1.authID  having count ( * )   = 1	icfp_1

SELECT fname, lname FROM authors where lname   =   "Ohori"	icfp_1
SELECT authID FROM authors where lname   =   "Ohori" and fname  =  'Atsushi'	icfp_1
SELECT paperID FROM Authorship where authID  =  57	icfp_1
SELECT title FROM Papers where paperID  =  204	icfp_1

select pilot_name from pilot where pilot_ID  =  1 or pilot_ID  =  2	pilot_record
SELECT T2.Pilot_id ,  COUNT ( * )  FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID   =   T2.pilot_ID where T2.pilot_ID  =  1 or T2.pilot_id  =  2 GROUP BY T2.Pilot_id	pilot_record
SELECT pilot_ID ,  join_year FROM  pilot  where pilot_ID  =  1 or pilot_id  =  2	pilot_record
SELECT pilot_ID ,  team FROM  pilot  where pilot_ID  =  1 or pilot_id  =  2	pilot_record

SELECT POSITION FROM pilot WHERE Join_Year <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year >  2005	pilot_record
select age from pilot where position  =  "Center Team"	pilot_record
select nationality from pilot where position  =  "Forward-Center Team"	pilot_record

SELECT campus FROM campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939	csu_1
SELECT campus FROM campuses WHERE YEAR  >  1939	csu_1
SELECT count ( * )  FROM campuses	csu_1

SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  "San Francisco State University"	csu_1
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  "San Francisco State University" AND t2.year  =  2001	csu_1

select Id from Campuses	csu_1
select CampusFee from csu_fees order by  CampusFee desc limit 1	csu_1
select Year from Campuses where Campus  =  'California State University-Bakersfield'	csu_1

SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t1.campus   =   "San Jose State University" AND t2.year   =   2000	csu_1
SELECT sum ( degrees )  FROM degrees WHERE Campus  =  5	csu_1
SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t2.Campus  =  5	csu_1
SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t2.Campus  =  19	csu_1
SELECT sum ( degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t1.campus   =   "San Jose State University" AND t2.year   =   2001	csu_1

SELECT Campus FROM Campuses WHERE Location  =  'San Francisco'	csu_1
SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t1.campus   =   "San Francisco State University" AND T2.year   =   1996	csu_1
SELECT T1.Campus FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t2.year   =  1996 AND T2.CampusFee  =  2258	csu_1
SELECT T1.County FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t2.year   =  1996 AND T2.CampusFee  =  2258	csu_1
SELECT county FROM campuses WHERE Campus  =  'San Francisco State University'	csu_1

SELECT Year FROM Campuses	csu_1
SELECT County FROM Campuses	csu_1
SELECT * FROM degrees	csu_1
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t2.year   =   2001 ORDER BY t3.degrees LIMIT 1	csu_1

SELECT campus from campuses where campus like "%California State University%" and county  =  "Kern"	csu_1
SELECT year from campuses where campus  =  "California State University-Chico"	csu_1
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus where T2.faculty  =   ( select min ( faculty )  from faculty ) 	csu_1
SELECT campus from campuses where year  =  2002	csu_1

SELECT count ( DISTINCT T1.county )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus	csu_1
SELECT count ( * )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county  =  "Orange"	csu_1
SELECT T1.campus ,  sum ( T2.degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county   =   "Orange" AND T2.year   > =    2000 GROUP BY T1.campus	csu_1

SELECT count ( campus )  FROM campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939	csu_1
SELECT county from campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939	csu_1
SELECT campus from campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939	csu_1

SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   "San Jose State University" AND t1.year  =  2000	csu_1
SELECT id FROM campuses WHERE campus   =   "San Jose State University"	csu_1
SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   "San Jose State University"	csu_1
SELECT t1.Year FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   "San Jose State University"	csu_1
SELECT County FROM campuses WHERE campus   =   "San Jose State University"	csu_1
SELECT Location FROM campuses WHERE campus   =   "San Jose State University"	csu_1

SELECT campus FROM campuses where id  =  '1'	csu_1
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   T2.campus WHERE T2.year   =   2003 ORDER BY T2.faculty  LIMIT 1	csu_1
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   T2.campus WHERE T2.year   =   2003 ORDER BY T2.faculty DESC LIMIT 1	csu_1

SELECT t2.campus, sum ( t1.graduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t1.year   =   2004 group by t2.Campus	csu_1
SELECT t2.campus, sum ( t1.undergraduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id  group by t2.Campus	csu_1
SELECT sum ( t1.graduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t1.year   =   2004 AND t2.campus   =   "San Francisco State University"	csu_1

SELECT T1.campus ,  sum ( T2.degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county   =   "Orange" AND T2.year   > =    2000 GROUP BY T1.campus	csu_1
SELECT Year from degrees  order by Degrees DESC LIMIT 1	csu_1
SELECT T1.campus  FROM Campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T2.Degrees =  ( select max ( Degrees )  from degrees ) 	csu_1

SELECT count ( distinct Scientist )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.hours  >  300	scientist_1
SELECT count ( distinct Scientist )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.hours  <  300	scientist_1
SELECT name FROM projects WHERE hours > 300	scientist_1
SELECT t2.Scientist FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.name  =  'Aerodynamics and Bridge Design'	scientist_1

SELECT count ( * )  FROM projects	scientist_1
SELECT name FROM projects	scientist_1
SELECT name from projects WHERE hours   =    ( SELECT min ( hours )  FROM projects ) 	scientist_1

SELECT Name FROM Scientists	scientist_1
SELECT T1.Name ,  T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code	scientist_1
SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T3.Name ,  T1.Name	scientist_1
SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T3.Name ,  T1.Name	scientist_1
SELECT avg ( Hours )  FROM Projects	scientist_1

SELECT name FROM projects ORDER BY hours LIMIT 1	scientist_1
SELECT name FROM projects WHERE hours  >   ( SELECT avg ( hours )  FROM projects ) 	scientist_1
SELECT count ( * )  FROM projects	scientist_1
SELECT name FROM projects ORDER BY hours DESC LIMIT 1	scientist_1

SELECT name FROM Projects order by hours desc limit 1	scientist_1
SELECT code from Projects WHERE Name  =  'A Magnetic Primer Designer'	scientist_1
SELECT Scientist from AssignedTo where Project ! =  'Bte2'	scientist_1

SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN WHERE T2.name   =   'A Puzzling Parallax'	scientist_1
SELECT T3.name,T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN	scientist_1

SELECT T3.Name ,  T3.Code ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.SSN	scientist_1
SELECT Name FROM Scientists ORDER BY SSN	scientist_1
SELECT T3.Code ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.SSN	scientist_1
SELECT T3.Code ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name	scientist_1
SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name	scientist_1
SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name ASC	scientist_1

SELECT t1.Name FROM Projects as t1 join AssignedTo as t2 on t1.Code  =  t2.Project	scientist_1
SELECT Name FROM Projects WHERE Code NOT IN  ( SELECT Project FROM AssignedTo ) 	scientist_1
SELECT Name FROM Projects WHERE Code NOT IN  ( SELECT Project FROM AssignedTo )  order by Hours limit 1	scientist_1

SELECT name FROM projects ORDER BY hours DESC LIMIT 1	scientist_1
SELECT name FROM projects	scientist_1
SELECT Hours FROM projects where Name  =  'A Magnetic Primer Designer'	scientist_1
SELECT Code FROM projects where Name  =  'A Magnetic Primer Designer'	scientist_1
SELECT name FROM projects ORDER BY hours LIMIT 1	scientist_1

SELECT name  FROM track WHERE year_opened  >  2000	race_track
SELECT seating FROM track WHERE year_opened  >  2000	race_track
SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating	race_track

SELECT CLASS FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1	race_track
SELECT Date FROM race WHERE Class  =   ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1 ) 	race_track
SELECT Race_ID FROM race WHERE Class  =   ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1 ) 	race_track

SELECT name FROM track WHERE track_id NOT IN  ( SELECT track_id FROM race ) 	race_track
SELECT Location, Year_Opened FROM track WHERE track_id NOT IN  ( SELECT track_id FROM race ) 	race_track

SELECT name FROM track WHERE year_opened  >  2000	race_track
SELECT name, seating FROM track WHERE year_opened  >  2000	race_track
SELECT name,location FROM track WHERE year_opened  >  2000	race_track

select track_id from track	race_track
select track_id,name from track	race_track
SELECT T2.track_id,T2.name,count ( * )  FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id GROUP BY T1.track_id	race_track
SELECT T2.track_id,T2.name,count ( * )  FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id GROUP BY T1.track_id having count ( * )  > 1	race_track

SELECT sum ( injured )  FROM perpetrator WHERE country  =  "China" OR country  =  "Japan"	perpetrator
SELECT Killed FROM perpetrator WHERE country  =  "South Korea"	perpetrator
SELECT location FROM perpetrator WHERE  Perpetrator_ID  =  "3"	perpetrator

SELECT sum ( T2.Killed )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  1.84	perpetrator
SELECT count ( T2.Perpetrator_ID )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  1.84	perpetrator
SELECT date FROM perpetrator order by date asc limit 1	perpetrator
SELECT Injured FROM perpetrator order by date desc limit 1	perpetrator
SELECT country FROM perpetrator group by country order by sum ( Killed ) +sum ( Injured )  desc limit 1	perpetrator

select count ( Country )  from perpetrator	perpetrator
SELECT Country FROM perpetrator WHERE Injured > 50	perpetrator
SELECT Country FROM perpetrator WHERE Injured  <  20	perpetrator

SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   "China"	perpetrator
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   "Japan"	perpetrator
SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   "China" OR T2.Country   =   "Japan"	perpetrator
SELECT T1.Weight FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   "South Korea"	perpetrator

SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1	perpetrator
SELECT T2.Location FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1	perpetrator
SELECT Country FROM perpetrator where location = 'Kaio'	perpetrator
SELECT sum ( Killed )  FROM perpetrator where country = 'Japan'	perpetrator
SELECT sum ( Injured )  FROM perpetrator where country = 'Japan'	perpetrator

SELECT killed FROM perpetrator WHERE Country = "South Korea"	perpetrator
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Weight DESC LIMIT 1	perpetrator
SELECT Location FROM perpetrator WHERE Country = "Japan"	perpetrator

select Member_in_charge_ID, count ( * )  from party_events group by Member_in_charge_ID order by count ( * )  desc limit 1	party_people
select Member_Name from member where Member_ID  =  4	party_people

SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   2	party_people
SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   2	party_people
SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   1	party_people
SELECT party_name FROM party WHERE Region_id  =  3	party_people

SELECT T2.party_name ,  count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  2 GROUP BY T1.party_id	party_people
SELECT T1.party_id, count ( T2.party_name )   FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  1	party_people
SELECT  T2.Took_office,T2.Region_ID  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  1	party_people

SELECT count ( * )  FROM Party	party_people
SELECT party_name FROM party	party_people
SELECT count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id	party_people
SELECT T2.party_name ,  count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id	party_people

SELECT Name FROM mountain	climbing
SELECT count ( Name )  FROM mountain WHERE Height  >  5000	climbing
SELECT name FROM mountain WHERE Height  >  5000	climbing
SELECT Name FROM mountain WHERE Height  >  5000 and Prominence  >  1000 order by height desc limit 1	climbing

SELECT height FROM mountain where name = 'Kibo  ( Uhuru Pk ) '	climbing
SELECT count ( * )  FROM mountain where country = 'Tanzania'	climbing
SELECT Range FROM mountain where country = 'Kenya' and name = 'Mount Kenya  ( Batian ) '	climbing
SELECT name FROM mountain where country = 'Tanzania' order by height desc limit 1	climbing
SELECT name FROM mountain  order by height  limit 1	climbing

SELECT Name FROM mountain WHERE Height  >  5000	climbing
SELECT Name FROM mountain WHERE Height  >  5000 AND prominence > 1000	climbing
SELECT range FROM mountain WHERE Height  >  5000 AND prominence > 1000	climbing

SELECT count ( * )  FROM mountain	climbing
SELECT count ( distinct country )  FROM mountain	climbing

select active_from_date from customer_contact_channels	customers_and_addresses
select active_to_date from customer_contact_channels	customers_and_addresses
select * from customer_contact_channels order by active_to_date limit 1	customers_and_addresses

select order_id from Order_items order by order_quantity limit 1	customers_and_addresses
select T1.payment_method from customers as T1 join customer_orders as T2 on T1.customer_id  =  T2.customer_id where T2.order_id  =  11	customers_and_addresses

SELECT country from Addresses where zip_postcode = 416	customers_and_addresses
SELECT city from Addresses where state_province_county = "SouthCarolina"	customers_and_addresses
SELECT address_content from Addresses where state_province_county = "Colorado"	customers_and_addresses
SELECT city from Addresses where state_province_county = "NewJersey"	customers_and_addresses
SELECT city from Addresses where country = "USA"	customers_and_addresses

SELECT Count ( distinct payment_method )  FROM customers	customers_and_addresses
SELECT Count ( * )  FROM customers	customers_and_addresses
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1	customers_and_addresses
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1	customers_and_addresses
SELECT sum ( t3.order_quantity )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1	customers_and_addresses

SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id	customers_and_addresses
SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id WHERE t1.order_status   =   "Delivered"	customers_and_addresses
SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id WHERE t1.order_status   =   "Cancelled"	customers_and_addresses

select order_id ,customer_id from Customer_Orders where order_status  =  'Cancelled'	customers_and_addresses
select order_id from Order_Items order by order_quantity limit 1	customers_and_addresses
select count ( customer_id )  from Customer_Orders where order_status  =  'Delivered'	customers_and_addresses

SELECT customer_name FROM customers	customers_and_addresses
SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   "Colorado"	customers_and_addresses
SELECT t1.customer_name, t3.address_content, t3.city, t3.zip_postcode FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   "Colorado"	customers_and_addresses

SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   "Delivered"	customers_and_addresses
SELECT distinct customer_id from Customer_Orders where order_status = 'Cancelled'	customers_and_addresses
SELECT distinct t1.customer_name  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_details  =  'NULL'	customers_and_addresses

SELECT country FROM addresses GROUP BY country HAVING count ( address_id )  > 4	customers_and_addresses
SELECT zip_postcode FROM addresses where city  =  'Lucasville'	customers_and_addresses
SELECT count ( address_id )  FROM addresses	customers_and_addresses

SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  DESC LIMIT 1	customers_and_addresses
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  LIMIT 1	customers_and_addresses
SELECT t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  LIMIT 1	customers_and_addresses

SELECT order_id,  from Order_Items group by order_id order by sum ( order_quantity )  desc limit 1	customers_and_addresses
SELECT count ( DISTINCT t3.product_id )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id WHERE t1.customer_name   =   "Rodrick Heaney"	customers_and_addresses
SELECT * FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id  group by T2.customer_id order by sum ( T3.order_quantity )  desc limit 1	customers_and_addresses

SELECT distinct payment_method FROM customers	customers_and_addresses
SELECT count ( * )  FROM customers where payment_method  =  "Credit Card"	customers_and_addresses
SELECT count ( * )  FROM customers where payment_method  =  "Cash"	customers_and_addresses
SELECT count ( * )  FROM customers where payment_method  =  "Cheque"	customers_and_addresses

SELECT payment_method FROM customers WHERE customer_name  =  "Dr. Julia Wuckert MD"	customers_and_addresses
SELECT COUNT ( customer_id )  FROM customers WHERE payment_method  =  "Credit Card"	customers_and_addresses
SELECT T1.active_from_date FROM Customer_Contact_Channels AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  "Rodrick Heaney"	customers_and_addresses

select * from products	customers_and_addresses
SELECT * FROM order_items AS t1 JOIN products AS t2 ON t1.product_id   =   t2.product_id GROUP BY t1.product_id ORDER BY sum ( order_quantity )  DESC	customers_and_addresses

SELECT address_content,city FROM addresses	customers_and_addresses
SELECT city FROM addresses WHERE city IN  (  SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id ) 	customers_and_addresses
SELECT city FROM addresses WHERE city not IN  (  SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id ) 	customers_and_addresses

SELECT  product_details, product_id  from  Products	customers_and_addresses
SELECT  T1.product_details,T2.order_quantity from  Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id	customers_and_addresses
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count ( * )  DESC LIMIT 1	customers_and_addresses

SELECT DISTINCT payment_method FROM customers	customers_and_addresses
SELECT DISTINCT address_type FROM customer_addresses	customers_and_addresses
SELECT COUNT ( customer_id )  FROM customers	customers_and_addresses

SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5	customers_and_addresses
SELECT channel_code,contact_number FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5	customers_and_addresses
SELECT channel_code,active_from_date,active_to_date FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5	customers_and_addresses

SELECT state_province_county  FROM addresses WHERE zip_postcode LIKE "4%"	customers_and_addresses
SELECT country FROM addresses WHERE zip_postcode LIKE "4%"	customers_and_addresses
SELECT zip_postcode FROM addresses WHERE zip_postcode LIKE "4%"	customers_and_addresses

SELECT catalog_name FROM catalogs	product_catalog
select catalog_publisher,count ( * )  from Catalogs group by catalog_publisher order by count ( * )  desc	product_catalog

SELECT catalog_name FROM catalogs	product_catalog
SELECT date_of_publication FROM catalogs	product_catalog
SELECT t1.catalog_id FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id   =   t2.catalog_id WHERE catalog_level_number  >  5	product_catalog

SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE "%Murray%"	product_catalog
SELECT catalog_name FROM catalogs WHERE catalog_publisher LIKE "%Murray%"	product_catalog
SELECT date_of_latest_revision FROM catalogs WHERE catalog_publisher LIKE "%Murray%"	product_catalog
SELECT catalog_publisher FROM catalogs WHERE catalog_publisher LIKE "%chocolate%"	product_catalog
select count ( * )  from catalogs where catalog_publisher in  ( SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE "%chocolate%" ) 	product_catalog
select catalog_name,date_of_publication from catalogs where catalog_publisher in  ( SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE "%chocolate%" ) 	product_catalog

SELECT avg ( price_in_euros )  ,  min ( price_in_euros )  FROM catalog_contents	product_catalog
SELECT avg ( price_in_euros )  ,  min ( price_in_euros )  FROM catalog_contents where catalog_entry_name  =  'Cola'	product_catalog
SELECT avg ( price_in_dollars )  ,  min ( price_in_dollars )  FROM catalog_contents where catalog_entry_name  =  'Cola'	product_catalog
SELECT avg ( price_in_dollars ) ,  min ( price_in_dollars )  FROM catalog_contents where catalog_entry_name  =  'Root beer'	product_catalog

SELECT date_of_latest_revision FROM Catalogs	product_catalog
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1	product_catalog
select catalog_name from Catalogs where date_of_latest_revision in  ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )  > 1 ) 	product_catalog
select catalog_name, date_of_latest_revision from Catalogs where date_of_latest_revision in  ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1 ) 	product_catalog
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1	product_catalog

SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count ( * )   >  3	product_catalog
SELECT attribute_name FROM Attribute_Definitions WHERE attribute_data_type  =  "Bool"	product_catalog
SELECT attribute_id FROM Attribute_Definitions WHERE attribute_data_type  =  "Bool"	product_catalog

SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1	product_catalog
SELECT catalog_entry_id,product_stock_number FROM catalog_contents WHERE catalog_entry_name  =  "Cola"	product_catalog

SELECT count ( * )  FROM catalog_contents	product_catalog
SELECT parent_entry_id FROM catalog_contents where catalog_entry_name  =  "Cola"	product_catalog
SELECT product_stock_number FROM catalog_contents where catalog_entry_name  =  "Cream Soda"	product_catalog

SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id   =   t2.catalog_entry_id WHERE t2.attribute_value   =    ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * )  DESC LIMIT 1 ) 	product_catalog
SELECT t1.product_stock_number FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id   =   t2.catalog_entry_id WHERE t2.attribute_value   =    ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * )  DESC LIMIT 1 ) 	product_catalog

SELECT height  FROM catalog_contents WHERE catalog_entry_name = "Cola"	product_catalog
SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 5	product_catalog
SELECT catalog_entry_name,LENGTH FROM catalog_contents WHERE LENGTH < 5	product_catalog
SELECT height FROM catalog_contents WHERE catalog_entry_name = "Fenta Orange"	product_catalog

SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1	behavior_monitoring
SELECT T2.address_id FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1	behavior_monitoring
SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1	behavior_monitoring

SELECT * FROM Addresses where address_id  =  3	behavior_monitoring
SELECT monthly_rental from Student_Addresses where address_id  =  3	behavior_monitoring
SELECT monthly_rental from Student_Addresses where address_id  =  1	behavior_monitoring

select max ( monthly_rental )  from student_addresses	behavior_monitoring
select address_id from student_addresses order by monthly_rental desc limit 1	behavior_monitoring
SELECT T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id ORDER BY monthly_rental DESC LIMIT 1	behavior_monitoring

SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code where detention_id = 1	behavior_monitoring
SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * )  ASC LIMIT 1	behavior_monitoring
SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * ) DESC LIMIT 1	behavior_monitoring

SELECT count ( * )  FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T1.zip_postcode   =   "918"	behavior_monitoring
SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T1.zip_postcode   =   "918"	behavior_monitoring

SELECT email_address FROM Teachers WHERE first_name  =  'Lyla' and middle_name  =  'Wilson' and last_name  =  'Medhurst'	behavior_monitoring
SELECT email_address FROM Teachers WHERE first_name  =  'Sid' and middle_name  =  'Tremayne' and last_name  =  'Brakus'	behavior_monitoring
SELECT cell_mobile_number FROM Teachers WHERE first_name  =  'Trystan' and middle_name  =  'Alexane' and last_name  =  'Schuster'	behavior_monitoring

SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.first_name   =   "Fanny"	behavior_monitoring
SELECT date_left_university FROM Students WHERE first_name   =   "Fanny"	behavior_monitoring
SELECT cell_mobile_number FROM Students WHERE first_name   =   "Fanny"	behavior_monitoring

SELECT student_id FROM Students WHERE first_name   =   "Emma"	behavior_monitoring
SELECT last_name FROM Students WHERE first_name   =   "Emma"	behavior_monitoring
SELECT email_address FROM Students WHERE first_name   =   "Emma"	behavior_monitoring

SELECT count ( * )  FROM STUDENTS	behavior_monitoring
SELECT incident_type_code FROM Behavior_Incident where student_id  =  1	behavior_monitoring
SELECT recommendations FROM Behavior_Incident	behavior_monitoring
SELECT cell_mobile_number FROM students where student_id  =  1	behavior_monitoring

SELECT count  ( * )  from  ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ) 	behavior_monitoring
SELECT count  ( * )  from  ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id where recommendations  =  "Transfer schools" GROUP BY T1.student_id ) 	behavior_monitoring
SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY count ( * )  DESC LIMIT 1	behavior_monitoring

select monthly_rental from Student_addresses order by monthly_rental desc limit 1	behavior_monitoring
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807	behavior_monitoring
SELECT T1.line_1 FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807	behavior_monitoring
SELECT T1.address_id FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807	behavior_monitoring

SELECT T1.date_incident_start ,  T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   "Rohan"	behavior_monitoring
SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   "Bergnaum"	behavior_monitoring
SELECT T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id where T2.last_name  =  "Hansen"	behavior_monitoring

SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T2.first_name   =   "Lyla"	behavior_monitoring
SELECT T1.city FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  "Lyla"	behavior_monitoring
SELECT last_name  FROM teachers where first_name  =  "Lyla"	behavior_monitoring

SELECT email_address FROM Students WHERE first_name   =   "Emma"	behavior_monitoring
SELECT student_id FROM Students WHERE last_name  =  "Rohan"	behavior_monitoring
SELECT email_address FROM Students WHERE student_id  =  4	behavior_monitoring

SELECT distinct count ( * )  from detention	behavior_monitoring
select count ( * )  from  ( SELECT last_name  FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id ) 	behavior_monitoring
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id	behavior_monitoring

SELECT T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id	behavior_monitoring
SELECT T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id order by count ( * )  desc	behavior_monitoring
SELECT * FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id	behavior_monitoring
SELECT T2.first_name, T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id order by count ( * )  desc	behavior_monitoring

select count ( teacher_id )  from Teachers	behavior_monitoring
SELECT count ( distinct T2.teacher_id )  FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id	behavior_monitoring
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id	behavior_monitoring
SELECT  last_name ,teacher_id  FROM Teachers EXCEPT SELECT T1.last_name ,T1.teacher_id FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id	behavior_monitoring

SELECT T1.date_incident_start  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   "Fahey"	behavior_monitoring
SELECT T1.incident_type_code  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   "Fahey"	behavior_monitoring
SELECT T2.date_left_university  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   "Fahey"	behavior_monitoring
SELECT count ( * )  from Behavior_Incident  where incident_type_code = "VIOLENCE"	behavior_monitoring
SELECT T2.first_name , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.incident_type_code  =  "VIOLENCE"	behavior_monitoring

SELECT COUNT ( * ) , state_province_county FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id   =   T2.address_id GROUP BY state_province_county	behavior_monitoring
SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id   =   T2.address_id WHERE T1.state_province_county   =   "Wisconsin"	behavior_monitoring

SELECT classroom from teachers where lastname  =  "ONDERSMA"	student_1
SELECT firstname, lastname from teachers where classroom  =  108	student_1
SELECT count ( distinct firstname )  from teachers	student_1
SELECT count ( distinct firstname )  from teachers where classroom  =  108	student_1

select lastname,firstname from list	student_1
select count ( * )  from list group by classroom order by count ( * )  desc limit 1	student_1
SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1	student_1

SELECT Grade FROM list	student_1
SELECT FirstName FROM list WHERE FirstName LIKE "J%"	student_1
SELECT LastName FROM list WHERE LastName LIKE "J%"	student_1
SELECT Classroom FROM teachers	student_1
SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T1.firstname   =   "GELL" AND T1.lastname   =   "TAMI"	student_1

SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1	student_1
SELECT classroom, grade FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1	student_1
SELECT FirstName FROM list where firstName like " S%" and classroom in  ( SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1 ) 	student_1

SELECT count ( distinct classroom )  FROM list	student_1
SELECT count ( distinct Grade )  FROM list	student_1
SELECT count ( distinct  LastName )  FROM list	student_1
SELECT count ( distinct  FirstName )  FROM list	student_1
SELECT Grade FROM list where LastName = 'CAR'	student_1

SELECT count ( * )  from teachers	student_1
SELECT grade  from list where FirstName like "%MAUDE%"	student_1
SELECT Lastname from list where FirstName like "%STORMY%"	student_1
SELECT count ( * )  from list	student_1

SELECT count ( * )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname   =   "KAWA" AND T2.lastname   =   "GORDON"	student_1
SELECT count ( * )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname  like "%MIN%" AND T2.lastname  like  "%MACROSTIE%"	student_1
SELECT T2.firstname, T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname like "%STORMY%" AND T1.lastname like "%CHRISTENSEN%"	student_1

SELECT count ( distinct T2.lastname )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5	student_1
SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5	student_1
SELECT DISTINCT T2.classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5	student_1

select name,id from companies where id  =   ( SELECT company_id from office_locations group by company_id order by count ( * )  desc limit 1 ) 	company_office
SELECT T2.id FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.building_id ORDER BY COUNT ( * )  DESC LIMIT 1	company_office
SELECT name FROM buildings where id  =  "3"	company_office

SELECT count ( * )  FROM Companies WHERE Industry  =  "Banking"	company_office
SELECT count ( * )  FROM Companies WHERE Industry ! =  "Banking"	company_office
SELECT sum ( sales_billion )  FROM Companies WHERE Industry ! =  "Banking"	company_office
SELECT max ( sales_billion )  FROM Companies WHERE Industry ! =  "Banking"	company_office
SELECT min ( sales_billion )  FROM Companies WHERE Industry ! =  "Banking"	company_office

SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.building_id HAVING COUNT ( * )   >  1	company_office
SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T2.name  =  "Torre KOI"	company_office
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  "JPMorgan Chase" and T2.name ! =  "Torre KOI"	company_office
SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  "HSBC" and T2.name  =  "Torre Mitikah"	company_office
SELECT name from companies where id  =  4	company_office
SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  "ExxonMobil" and T2.name  =  "Punto Chapultepec"	company_office
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  "General Electric"	company_office
SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T2.name  =  "Corporativo BBVA Bancomer" and T3.name ! =  "General Electric"	company_office

SELECT name FROM buildings	company_office
SELECT name FROM buildings WHERE Status   =   "on-hold"	company_office
SELECT name FROM buildings WHERE Status   =   "on-hold" ORDER BY Stories ASC	company_office

SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T4.product_name  =  "food"	tracking_orders
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T3.order_item_status  =  "Cancel" AND T4.product_name  =  "food" GROUP BY T1.customer_id HAVING count ( * )    > =    1	tracking_orders
SELECT count ( T1.customer_name )  FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T3.order_item_status  =  "Cancel" AND T4.product_name  =  "food"	tracking_orders

SELECT * FROM customers where customer_id in  ( select customer_id from Orders ) 	tracking_orders
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1	tracking_orders

SELECT T1.order_id ,T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id	tracking_orders
SELECT T1.order_id ,T2.product_id,T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T1.date_order_placed  > =   "1975-01-01" AND T1.date_order_placed < =  "1976-01-01"	tracking_orders

SELECT COUNT ( * )  FROM  ( SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )   < =   2 ) 	tracking_orders
SELECT COUNT ( * )  FROM Customers	tracking_orders
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )  < =  2	tracking_orders

SELECT invoice_number FROM invoices WHERE invoice_date < "1989-09-03"	tracking_orders
SELECT invoice_number FROM invoices WHERE invoice_date > "2007-12-25"	tracking_orders
SELECT invoice_number FROM invoices WHERE invoice_date < "1989-09-03" OR invoice_date > "2007-12-25"	tracking_orders

SELECT count ( * )  FROM orders	tracking_orders
SELECT count ( * )  FROM customers	tracking_orders
SELECT customer_id FROM customers	tracking_orders
SELECT count ( * )  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1	tracking_orders
SELECT * FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id having count ( * )   =  3	tracking_orders
SELECT customer_id FROM customers where customer_name  =  "George"	tracking_orders
SELECT customer_id FROM customers where customer_name  =  "Jeramie"	tracking_orders

SELECT order_status FROM orders ORDER BY date_order_placed DESC LIMIT 1	tracking_orders
SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1	tracking_orders

SELECT customer_name FROM Customers WHERE customer_id = 1	tracking_orders
SELECT customer_name FROM Customers WHERE customer_id = 2	tracking_orders
SELECT customer_name FROM Customers WHERE customer_id = 3	tracking_orders
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )   < =   2	tracking_orders

SELECT count ( * )  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "On Road"	tracking_orders
select count ( * )  from  ( SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "Shipped" ) 	tracking_orders
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "Shipped"	tracking_orders

SELECT count ( * )  from customers	tracking_orders
SELECT customer_id, count ( * )  from orders group by customer_id	tracking_orders
SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_name  =  "Jeramie"	tracking_orders

select product_id from Products where product_name  =  'food'	tracking_orders
select T2.order_id from Products as T1 join Order_Items as T2 where T1.product_id  =  T2.product_id and T1.product_name  =  'food'	tracking_orders
select T3.customer_id from Products as T1 join Order_Items as T2 join Orders as T3 where T1.product_id  =  T2.product_id and T1.product_name  =  'food' and T3.order_id  =  T2.order_id	tracking_orders

SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "Packing"	tracking_orders
SELECT DISTINCT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  "Packing"	tracking_orders
SELECT order_id FROM orders WHERE order_status  =  "Packing"	tracking_orders
SELECT customer_id FROM orders WHERE order_status  =  "Packing"	tracking_orders
SELECT order_id FROM orders WHERE order_status  =  "On Road"	tracking_orders

SELECT * ,  count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )    > =    2	tracking_orders
SELECT count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.customer_name  = "George"	tracking_orders
SELECT count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.customer_name  = "Beulah"	tracking_orders

SELECT count ( * )  from products	tracking_orders
SELECT count ( * )  from orders	tracking_orders
SELECT product_name from products where product_id  =  1	tracking_orders

SELECT count ( * )  FROM orders	tracking_orders
SELECT date_order_placed FROM orders where order_id  =  2	tracking_orders
SELECT count ( * )  FROM Order_Items	tracking_orders

SELECT  customer_id FROM orders ORDER BY date_order_placed LIMIT 1	tracking_orders
SELECT customer_id FROM orders ORDER BY date_order_placed desc LIMIT 1	tracking_orders
SELECT order_status FROM orders where customer_id = 11	tracking_orders
SELECT date_order_placed FROM orders where customer_id = 11	tracking_orders

SELECT Publication_Date FROM publication	book_2
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * )  DESC	book_2
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * )  DESC LIMIT 1	book_2

SELECT Price FROM publication ORDER BY Price ASC LIMIT 3	book_2
SELECT Publisher FROM publication ORDER BY Price ASC LIMIT 3	book_2
SELECT Publication_Date  FROM publication ORDER BY Price ASC LIMIT 3	book_2

SELECT count ( distinct Publisher )  FROM publication	book_2
SELECT Publisher, Price FROM publication WHERE Price  >  10000000 or Price  <  5000000	book_2

SELECT county FROM APPELLATIONS WHERE appelation  =  'Alexander Valley'	wine_1
SELECT max ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.Area   =   "Central Coast" AND T2.year  <  2005	wine_1
SELECT county FROM APPELLATIONS WHERE appelation  =  'Amador County'	wine_1

SELECT * FROM WINE WHERE year  =  2006 order by price desc limit 1	wine_1
SELECT * FROM WINE WHERE Price  >   ( SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006 ) 	wine_1
SELECT Name FROM WINE WHERE Price  >   ( SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006 ) 	wine_1

SELECT * FROM WINE order by price desc limit 1	wine_1
SELECT year FROM WINE order by price desc limit 1	wine_1
SELECT appelation FROM WINE where name  =  'Giana'	wine_1
SELECT * FROM WINE where score  =  91	wine_1

SELECT T1.appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T2.price  =   ( select max ( price )  from wine ) 	wine_1
SELECT max ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   "Sonoma"	wine_1
SELECT count ( * )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   "Sonoma"	wine_1
SELECT min ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   "Sonoma"	wine_1
SELECT AVG ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   "Sonoma"	wine_1

SELECT Grape FROM GRAPES WHERE Color   =   "White"	wine_1
SELECT * FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "White"	wine_1
SELECT avg ( score )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "White"	wine_1
SELECT avg ( score )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color  ! =   "White"	wine_1
SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "White"	wine_1
SELECT max ( price ) , min ( price ) ,avg ( price )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "White"	wine_1

SELECT Name FROM WINE WHERE Winery  =  "Brander"	wine_1
SELECT Name,Year FROM WINE WHERE Winery  =  "Brander"	wine_1
SELECT Name FROM WINE WHERE YEAR  <   ( SELECT min ( YEAR )  FROM WINE WHERE Winery   =   "Brander" ) 	wine_1

SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  "Central Coast"	wine_1
SELECT COUNT ( * )  FROM appellations WHERE Area  =  "Sierra Foothills"	wine_1
SELECT COUNT ( * )  FROM appellations WHERE County  =  "Napa"	wine_1
SELECT COUNT ( * )  FROM wine WHERE Appelation  =  "St. Helena"	wine_1

SELECT  avg ( Price )  from wine	wine_1
SELECT * from wine where price  =   ( select max ( price )  from wine ) 	wine_1
SELECT T1.grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1	wine_1
SELECT avg ( price )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1	wine_1
SELECT color from grapes where grape  =  "Roussanne"	wine_1

SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000	wine_1
select year from wine group by year order by count ( * )  desc limit 1	wine_1
select winery from wine where year  =  2007	wine_1
SELECT DISTINCT Name FROM WINE WHERE YEAR  >  2010	wine_1

SELECT avg ( t2.price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County ! =   'Sonoma'	wine_1
select distinct Winery from wine	wine_1
select distinct Winery, price from wine	wine_1

SELECT Name FROM WINE WHERE YEAR   =   2006	wine_1
SELECT Price FROM WINE WHERE YEAR   =   2006	wine_1
SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006	wine_1
SELECT name FROM WINE WHERE price>200	wine_1

SELECT color FROM grapes WHERE Grape  =  "Barbera"	wine_1
SELECT DISTINCT grape FROM wine WHERE score > 90	wine_1
SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "White"	wine_1

SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "Red" AND T2.price  >  50	wine_1
SELECT T2.state FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   "Red" AND T2.price  >  50	wine_1

SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Grape   =   "Cabernet Franc"	wine_1
SELECT * FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T2.price > 50	wine_1
SELECT grape FROM grapes where Color  =  "Red"	wine_1
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  "Red" AND T2.price > 50	wine_1

SELECT Winery FROM WINE	wine_1
select count ( * )  from  ( SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )    > =    4 ) 	wine_1
SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )    > =    4	wine_1

SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1	wine_1
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1	wine_1
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  LIMIT 1	wine_1

SELECT count ( distinct template_id )  FROM Documents	cre_Doc_Template_Mgt
SELECT count ( template_id )  FROM Documents GROUP BY template_id HAVING count ( * )   >  1	cre_Doc_Template_Mgt
SELECT document_id FROM Documents GROUP BY template_id HAVING count ( * )   >  1	cre_Doc_Template_Mgt

SELECT template_id FROM Documents	cre_Doc_Template_Mgt
SELECT template_id ,Document_ID FROM Documents	cre_Doc_Template_Mgt
SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents	cre_Doc_Template_Mgt
SELECT T1.template_id ,T1.Template_Type_Code FROM Templates as T1 join Documents as T2 on T1.Template_ID = T2.Template_ID	cre_Doc_Template_Mgt

SELECT count ( * )  FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"	cre_Doc_Template_Mgt
SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK"	cre_Doc_Template_Mgt
Select count ( * )  from documents where document_name not in   ( SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id   =   T2.template_id WHERE T1.template_type_code   =   "BK" ) 	cre_Doc_Template_Mgt

SELECT * FROM Templates AS T1 JOIN Documents AS T2 ON T1.Template_ID   =   T2.template_ID	cre_Doc_Template_Mgt
SELECT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID	cre_Doc_Template_Mgt
SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  =  T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID	cre_Doc_Template_Mgt

SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2	cre_Doc_Template_Mgt
SELECT Paragraph_Text FROM Paragraphs GROUP BY document_id HAVING count ( * )  BETWEEN 1 AND 2	cre_Doc_Template_Mgt

SELECT Version_Number from Templates where Template_ID  =  3	cre_Doc_Template_Mgt
SELECT t2.Document_Name from Templates as t1 join Documents as t2 on t1.Template_ID  =  t2.Template_ID where t1.Template_ID  =  25	cre_Doc_Template_Mgt
SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id	cre_Doc_Template_Mgt
SELECT Version_Number from Templates where Template_ID  =  4	cre_Doc_Template_Mgt

SELECT T1.document_id ,  T2.document_name ,  count ( * )  FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id   =   T2.document_id GROUP BY T1.document_id	cre_Doc_Template_Mgt
SELECT Paragraph_Text FROM Paragraphs	cre_Doc_Template_Mgt
SELECT Paragraph_Text FROM Paragraphs WHERE Other_Details ! =  "NULL"	cre_Doc_Template_Mgt

SELECT count ( * )  from staff	driving_school
SELECT last_name from staff where first_name  =  "Janessa"	driving_school
SELECT date_of_birth FROM Staff WHERE first_name  =  "Janessa" AND last_name  =  "Sawayn"	driving_school

SELECT count ( * )  FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Janessa"	driving_school
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Janessa"	driving_school
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Camylle"	driving_school
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Kaitlin"	driving_school
SELECT last_name from staff where first_name  =  'Kaitlin'	driving_school
SELECT last_name from staff where first_name  =  'Janessa'	driving_school
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  "Janessa" AND T2.last_name  =  "Sawayn"	driving_school

SELECT sum ( T1.lesson_time )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  "Rylan" AND T2.last_name  =  "Goodwin"	driving_school
SELECT T1.lesson_status_code FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  "Rylan" AND T2.last_name  =  "Goodwin"	driving_school
SELECT customer_id FROM customers WHERE first_name  =  "Rylan" AND last_name  =  "Goodwin"	driving_school

SELECT COUNT ( customer_id )  FROM Customers	driving_school
SELECT phone_number FROM customers where first_name  =  "Clara"	driving_school

SELECT customer_status_code  FROM Customers WHERE first_name  =  "Marina" OR last_name   =   "Kohler"	driving_school
SELECT phone_number  FROM Customers WHERE first_name  =  "Marina" OR last_name   =   "Kohler"	driving_school
SELECT email_address FROM Customers WHERE first_name  =  "Marina" OR last_name   =   "Kohler"	driving_school

SELECT lesson_date FROM Lessons	driving_school
SELECT avg ( lesson_time )  FROM Lessons	driving_school
SELECT price FROM Lessons ORDER BY price DESC LIMIT 1	driving_school
SELECT count ( * )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  "Ray"	driving_school

SELECT count ( * )  FROM Lessons	driving_school
SELECT nickname FROM Staff WHERE staff_id  =  3	driving_school
SELECT middle_name FROM Staff WHERE staff_id  =  2	driving_school

SELECT T1.vehicle_id ,  T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id   =   T2.vehicle_id	driving_school
SELECT vehicle_details FROM Vehicles WHERE vehicle_id   =  "1" or vehicle_id   =  "2"	driving_school
SELECT price FROM lessons WHERE  vehicle_id   =  "2"	driving_school
SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id   =   T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count ( * )  DESC LIMIT 1	driving_school

SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1	driving_school
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )   LIMIT 1	driving_school
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id  where T1.customer_status_code  =  'Bad Customer' GROUP BY T2.city ORDER BY count ( * )  LIMIT 1	driving_school
SELECT country from Addresses where city  =  'Ericamouth'	driving_school

SELECT address_id FROM Addresses WHERE city   =  "Damianfort"	driving_school
SELECT staff_id FROM Staff WHERE staff_address_id   =  14	driving_school
SELECT staff_id,first_name, last_name FROM Staff WHERE staff_address_id   =  14	driving_school

SELECT first_name FROM Staff	driving_school
SELECT first_name FROM Staff where first_name LIKE "%a%"	driving_school
SELECT count ( * ) , T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name LIKE "%a%"	driving_school

SELECT count ( * )  FROM Customers	driving_school

SELECT date_became_customer FROM Customers WHERE first_name  =  "Carole" AND last_name  =  "Bernhard"	driving_school
SELECT amount_outstanding FROM Customers WHERE first_name  =  "Carole" AND last_name  =  "Bernhard"	driving_school
SELECT customer_status_code FROM Customers WHERE first_name  =  "Carole" AND last_name  =  "Bernhard"	driving_school
SELECT date_became_customer FROM Customers WHERE last_name  =  "Bernhard"	driving_school

SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff	driving_school
SELECT first_name FROM Staff group by first_name order by count ( * )  desc limit 1	driving_school
SELECT last_name FROM Staff group by first_name order by count ( * )  desc limit 1	driving_school
SELECT first_name FROM Staff where last_name  =  'Mertz'	driving_school
SELECT first_name FROM staff where last_name  =  'Mertz'	driving_school

SELECT count ( * )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  "Rylan" AND T2.last_name  =  "Goodwin" AND T1.lesson_status_code  =  "Completed"	driving_school
SELECT customer_status_code from Customers  where first_name  =  "Rylan" AND last_name  =  "Goodwin"	driving_school
SELECT date_of_birth from Customers  where first_name  =  "Rylan" AND last_name  =  "Goodwin"	driving_school

SELECT sum ( T2.balance )  FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid where T1.name  =  "Wang"	small_bank_1

SELECT avg ( balance )  from savings	small_bank_1
SELECT custid from savings where balance >  ( select avg ( balance )  from savings ) 	small_bank_1
SELECT T2.balance,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) 	small_bank_1
SELECT T2.balance + T3.balance  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) 	small_bank_1
SELECT T3.balance - T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) 	small_bank_1

SELECT T1.name  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  <  T2.balance	small_bank_1
SELECT  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T1.name  =  "Weeks"	small_bank_1
SELECT  custid  FROM accounts where name  =  "Weeks"	small_bank_1

SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1	small_bank_1
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance  LIMIT 1	small_bank_1
select balance from CHECKING where custid = '3'	small_bank_1

select max ( balance )  from savings	small_bank_1
select min ( balance )  from savings	small_bank_1
select name from accounts	small_bank_1

select  custid,balance from savings	small_bank_1
select  balance  from CHECKING	small_bank_1
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T3.balance LIMIT 1	small_bank_1
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T1.name  =  "Weeks"	small_bank_1

SELECT balance FROM checking WHERE custid  =  2	small_bank_1
SELECT name FROM accounts WHERE custid  =  2	small_bank_1
SELECT balance FROM savings WHERE custid  =  2	small_bank_1
SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T1.name   =   'Brown'	small_bank_1

SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance + T3.balance LIMIT 1	small_bank_1
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T2.balance>3000	small_bank_1
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T3.balance>20000	small_bank_1
select  balance from SAVINGS order  by  balance  desc  limit  1	small_bank_1
select  min ( balance )  from SAVINGS	small_bank_1
select  max ( balance ) ,min ( balance )  from CHECKING	small_bank_1

SELECT count ( * )  ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid GROUP BY T1.name	small_bank_1
SELECT  max ( balance )   from  checking	small_bank_1
SELECT  min ( balance )   from  checking	small_bank_1

SELECT * FROM CHECKING	small_bank_1
SELECT * FROM SAVINGS	small_bank_1
SELECT * FROM ACCOUNTS	small_bank_1
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance DESC LIMIT 1	small_bank_1

SELECT count ( * )  FROM savings WHERE balance  >   ( SELECT avg ( balance )  FROM savings ) 	small_bank_1
SELECT * FROM savings WHERE custid = 1339	small_bank_1

select max ( balance )  from savings	small_bank_1
select min ( balance )  from savings	small_bank_1
select name from ACCOUNTS	small_bank_1
SELECT sum ( T2.balance )  , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name	small_bank_1

SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance DESC LIMIT 3	small_bank_1
SELECT T1.name , T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance DESC LIMIT 3	small_bank_1
SELECT avg ( T2.balance )  FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid	small_bank_1
SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 3	small_bank_1

SELECT avg ( salary )  FROM instructor	college_2
SELECT avg ( salary ) , dept_name FROM instructor GROUP BY dept_name	college_2
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  DESC LIMIT 1	college_2
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )   LIMIT 1	college_2
SELECT dept_name FROM instructor where name  =  'Mird'	college_2
SELECT salary FROM instructor where name  =  'Mird'	college_2

SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics'	college_2
Select count ( * )  from instructor where dept_name  =  'Physics' and salary <  ( SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics' ) 	college_2
Select name, salary from instructor where dept_name  =  'Physics' and salary <  ( SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics' ) 	college_2

SELECT YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count ( * )  DESC LIMIT 1	college_2
SELECT semester FROM SECTION where year  =  2002 GROUP BY semester ORDER BY count ( * )  DESC LIMIT 1	college_2
SELECT building FROM SECTION where semester  =  'Fall' and YEAR  =  2002	college_2

SELECT name FROM instructor WHERE dept_name  =  "Statistics"	college_2
SELECT avg ( salary )  FROM instructor WHERE dept_name  =  "Statistics"	college_2
SELECT name  FROM instructor where dept_name  =  "Statistics" order by salary desc limit 1	college_2
SELECT salary FROM instructor where dept_name  =  "Statistics" order by salary desc limit 1	college_2

SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * )  DESC LIMIT 3	college_2
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * )   LIMIT 3	college_2

SELECT name, salary FROM instructor	college_2
SELECT name, salary FROM instructor WHERE dept_name  =  "Biology"	college_2
SELECT count ( * )  FROM instructor WHERE salary >  ( SELECT salary FROM instructor WHERE name  =  "Valtchev" ) 	college_2
SELECT name FROM instructor WHERE salary >  ( SELECT salary FROM instructor WHERE name  =  "Valtchev" ) 	college_2

SELECT room_number FROM classroom WHERE capacity >  ( SELECT avg ( capacity )  FROM classroom ) 	college_2
SELECT max ( capacity )  ,  min ( capacity )  ,  building FROM classroom GROUP BY building	college_2
SELECT building FROM classroom order by capacity desc limit 1	college_2
SELECT building FROM classroom order by capacity limit 1	college_2

SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred	college_2
select name from student where dept_name = 'Math'	college_2
select ID from instructor where dept_name = 'Marketing'	college_2

SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING count ( * )   >  1	college_2
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred  >  1	college_2
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred  >  115	college_2

SELECT count ( * )  FROM course WHERE course_id IN  ( SELECT course_id FROM prereq ) 	college_2
SELECT count ( * )  FROM course	college_2
SELECT count ( * )  FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq ) 	college_2

SELECT count ( * )  FROM instructor	college_2
SELECT T1.id FROM instructor AS T1 JOIN advisor AS T2 ON T1.id   =   T2.i_id GROUP BY T2.i_id HAVING count ( * )   >  1	college_2
SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id   =   T2.i_id GROUP BY T2.i_id HAVING count ( * )   >  1	college_2

SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Fall' AND YEAR   =   2003 ) 	college_2
SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2003 ) 	college_2
SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004 ) 	college_2
SELECT distinct id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004	college_2
SELECT grade FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004 and id  =  10838	college_2

SELECT count ( * )  FROM instructor WHERE dept_name   =   'Statistics'	college_2
SELECT min ( salary )  FROM instructor WHERE dept_name   =   'Statistics'	college_2
SELECT name FROM instructor WHERE dept_name   =   'Statistics' order by salary asc limit 1	college_2

SELECT count ( * )  FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq ) 	college_2
SELECT * FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq )  order by credits desc limit 1	college_2
SELECT count ( * )  FROM course	college_2

SELECT course_id FROM course WHERE title   =   'International Finance'	college_2
SELECT course_id FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance' ) 	college_2
SELECT title FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance' ) 	college_2

SELECT count ( DISTINCT building )  FROM classroom	college_2
SELECT building FROM classroom WHERE capacity  >  50 GROUP BY building	college_2
SELECT count ( room_number )  FROM classroom WHERE capacity  >  50	college_2
SELECT building, count ( room_number )  FROM classroom WHERE capacity  >  50 group by building	college_2

SELECT dept_name FROM student GROUP BY dept_name ORDER BY count ( * )  DESC LIMIT 1	college_2
SELECT SUM ( tot_cred )  FROM student WHERE dept_name  =  "Civil Eng."	college_2
SELECT ID FROM student WHERE dept_name  =  "Civil Eng."	college_2

SELECT DISTINCT dept_name FROM course	college_2
SELECT title FROM course WHERE dept_name  =  "Statistics"	college_2

select course_id, prereq_id from prereq	college_2
SELECT course_id from prereq GROUP BY course_id HAVING count ( * )   >  1	college_2
SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1	college_2
SELECT sum ( T3.credits )  FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id join course as T3 on T3.course_id = T2.prereq_id where T1.title = "Game Programming"	college_2

SELECT count ( * )  FROM course	college_2
SELECT count ( * )  FROM course where dept_name  =  'Mech. Eng.'	college_2
SELECT count ( * )  FROM course where dept_name  =  'Mech. Eng.' and credits > 3	college_2
select distinct ( dept_name )  from course where title in  ( SELECT title FROM course where dept_name  =  'Mech. Eng.' and credits > 3 )  and dept_name ! =  'Mech. Eng.'	college_2
select count ( * )  from course where title in  ( SELECT title FROM course where dept_name  =  'Mech. Eng.' and credits > 3 )  and dept_name ! =  'Mech. Eng.'	college_2

SELECT ID FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) 	college_2
SELECT id, name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) 	college_2
SELECT name, dept_name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) 	college_2

SELECT dept_name, avg ( salary )  FROM instructor GROUP BY dept_name	college_2
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  ASC LIMIT 1	college_2

SELECT name FROM instructor WHERE dept_name   =   'Comp. Sci.'  AND salary  >  80000	college_2
SELECT name FROM instructor order by salary desc limit 1	college_2
SELECT dept_name FROM instructor where name  =  "Wieland"	college_2
SELECT avg ( salary )  from instructor where dept_name  =  "Pol. Sci."	college_2
SELECT avg ( salary )  from instructor where dept_name  =  "Cybernetics"	college_2
SELECT name, ID from instructor order by salary asc limit 1	college_2

SELECT name FROM instructor	college_2
SELECT avg ( salary )  FROM instructor	college_2
SELECT name FROM instructor ORDER BY salary DESC LIMIT 1	college_2

SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'	college_2
SELECT id FROM instructor WHERE dept_name  =  "Psychology"	college_2
SELECT salary FROM instructor WHERE id  =  22591	college_2
SELECT salary FROM instructor WHERE id  =  96895	college_2

SELECT course_id FROM takes	college_2
SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count ( * )  LIMIT 1	college_2
SELECT count ( * )  FROM takes WHERE semester  =  'Fall'  and year  =  '2008'	college_2

SELECT course_id, title FROM course	college_2
SELECT name FROM instructor WHERE salary > 80000	college_2
SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id   =   T2.id JOIN course AS T3 ON T2.course_id   =   T3.course_id WHERE T3.title   =   'C Programming'	college_2

select building from classroom order by capacity desc limit 1	college_2
select credits from course where title = 'Accounting'	college_2
select capacity from classroom where building = 'Whitman'	college_2

SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID   =   T2.ID WHERE T1.dept_name   =   'Art'	college_2
select  name  from instructor where dept_name =  'Art'	college_2
select   ID  from instructor where dept_name =  'Statistics'	college_2

SELECT count ( distinct dept_name )  from  student	college_2
SELECT count ( i_ID )  from advisor	college_2
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'	college_2

SELECT name FROM student WHERE dept_name   =   'History' ORDER BY tot_cred DESC LIMIT 1	college_2
SELECT count ( name )  FROM student WHERE dept_name   =   'History'	college_2
SELECT avg ( tot_cred )  FROM student WHERE dept_name   =   'History'	college_2

SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  DESC LIMIT 1	college_2
SELECT avg ( salary )  FROM instructor WHERE dept_name  =  'Physics'	college_2
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  ASC LIMIT 1	college_2

SELECT COUNT ( * )  FROM course	college_2
SELECT title FROM course	college_2
SELECT credits FROM course WHERE title  =  "C Programming"	college_2
SELECT name FROM student	college_2

SELECT title FROM course WHERE dept_name   =   'Statistics'	college_2
SELECT title FROM course WHERE dept_name   =   'Psychology'	college_2
SELECT title FROM course WHERE dept_name   =   'Statistics' EXCEPT SELECT title FROM course WHERE dept_name   =   'Psychology'	college_2

SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler'	college_2
SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler' AND semester  =  'Fall' AND YEAR  =  2010	college_2
SELECT credits FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler' AND semester  =  'Fall' AND YEAR  =  2010	college_2

SELECT title FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id   =   T2.course_id WHERE T2.title   =   'Mobile Computing' ) 	college_2
SELECT dept_name FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id   =   T2.course_id WHERE T2.title   =   'Mobile Computing' ) 	college_2
select count ( * )  from course where dept_name  =  "History"	college_2

SELECT dept_name,budget FROM department	college_2
SELECT dept_name,budget FROM department order by budget limit 1	college_2
SELECT dept_name,building, budget FROM department order by budget limit 1	college_2

SELECT count ( name )  FROM instructor WHERE id IN  ( SELECT id FROM teaches ) 	college_2
SELECT count ( name )  FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) 	college_2
SELECT name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) 	college_2

SELECT * FROM classroom WHERE capacity  >  50	college_2
SELECT room_number FROM classroom WHERE capacity  >  50	college_2
SELECT count ( distinct room_number )  FROM classroom WHERE capacity  >  50	college_2

SELECT gender_code ,  COUNT ( * )  FROM Guests GROUP BY gender_code ORDER BY COUNT ( * )  DESC	apartment_rentals
SELECT guest_first_name, guest_last_name FROM Guests where gender_code  =  "Unknown"	apartment_rentals
SELECT date_of_birth FROM Guests where gender_code  =  "Unknown"	apartment_rentals
SELECT date_of_birth FROM Guests where guest_first_name like '%M%' or guest_last_name like '%M%'	apartment_rentals

select apt_type_code from Apartments order by room_count  limit 1	apartment_rentals
select building_id from Apartments where apt_number  =  'Suite 645'	apartment_rentals

SELECT building_id FROM Apartments where apt_number  =  "Suite 645"	apartment_rentals
SELECT bathroom_count, bedroom_count  FROM Apartments where  apt_number  =  "Suite 645"	apartment_rentals
SELECT room_count FROM Apartments where  building_id  =  624	apartment_rentals
SELECT min ( bathroom_count )  ,  max ( bathroom_count ) , min ( bedroom_count ) , max ( bedroom_count )  FROM Apartments	apartment_rentals
SELECT building_id FROM Apartments where apt_number  =  "Apt. 908"	apartment_rentals

SELECT count ( * )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed"	apartment_rentals
SELECT t2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed"	apartment_rentals
SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed"	apartment_rentals

SELECT count ( DISTINCT apt_type_code )  FROM Apartments	apartment_rentals
SELECT distinct apt_type_code FROM Apartments	apartment_rentals
SELECT count ( * ) , apt_type_code FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code, count ( * )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count ( * )  DESC LIMIT 1	apartment_rentals

SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2	apartment_rentals
SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE t2.apt_number  =  "Apt. 585"	apartment_rentals
SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE t2.building_id  =  "225"	apartment_rentals
SELECT  T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2	apartment_rentals

SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1	apartment_rentals
SELECT apt_number FROM Apartments ORDER BY bedroom_count  LIMIT 1	apartment_rentals
SELECT apt_type_code FROM Apartments ORDER BY bathroom_count desc  LIMIT 1	apartment_rentals
SELECT room_count, apt_number FROM Apartments ORDER BY bathroom_count desc LIMIT 1	apartment_rentals

SELECT count ( DISTINCT building_id )  FROM apartment_buildings	apartment_rentals
SELECT count ( * )  FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  "Kyle"	apartment_rentals
SELECT count ( DISTINCT apt_type_code )  FROM Apartments	apartment_rentals
SELECT T2.apt_type_code FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  "Kyle"	apartment_rentals
SELECT T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  "Kyle"	apartment_rentals

SELECT count ( * )  FROM  Apartments	apartment_rentals
SELECT  apt_id FROM Apartments GROUP BY  apt_id ORDER BY sum ( room_count )  DESC LIMIT 1	apartment_rentals
SELECT  apt_type_code FROM Apartments GROUP BY  apt_type_code ORDER BY sum ( room_count )  DESC LIMIT 1	apartment_rentals

SELECT count ( * )  FROM Apartments	apartment_rentals
SELECT count ( * )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2	apartment_rentals
SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2	apartment_rentals

SELECT count ( apt_type_code )  FROM Apartments	apartment_rentals
SELECT apt_type_code FROM Apartments WHERE bathroom_count   > =    1 GROUP BY apt_type_code ORDER BY count ( * )  DESC LIMIT 1	apartment_rentals
SELECT apt_id FROM Apartments WHERE apt_type_code  =  'Flat'	apartment_rentals
SELECT building_id, apt_id  FROM Apartments WHERE apt_type_code  =  'Flat'	apartment_rentals

SELECT apt_type_code FROM Apartments	apartment_rentals
SELECT apt_type_code,room_count FROM Apartments	apartment_rentals
SELECT apt_type_code,room_count FROM Apartments order by room_count desc limit 1	apartment_rentals
SELECT apt_type_code FROM Apartments	apartment_rentals
SELECT apt_type_code ,  sum ( room_count )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code ,  sum ( room_count ) , sum ( bathroom_count ) ,sum ( bedroom_count )  FROM Apartments WHERE apt_type_code  =  "Flat"	apartment_rentals

SELECT count ( * )  from apartments	apartment_rentals
SELECT  count ( * )  from apartments where apt_type_code  = 'Flat'	apartment_rentals
SELECT  count ( * )  from apartments where apt_type_code  = 'Studio'	apartment_rentals

SELECT T2.building_id FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   "Gym"	apartment_rentals
SELECT sum ( T2.bathroom_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   "Gym"	apartment_rentals
SELECT sum ( T2.bedroom_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   "Gym"	apartment_rentals
SELECT sum ( T2.room_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   "Gym"	apartment_rentals

SELECT building_full_name FROM Apartment_Buildings WHERE building_description  =  'Studio'	apartment_rentals
SELECT building_manager FROM Apartment_Buildings WHERE building_description  =  'Studio'	apartment_rentals
SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name like '%Court%'	apartment_rentals

SELECT T2.apt_number, T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed"	apartment_rentals
SELECT count ( * )  FROM Apartments WHERE apt_number IN  ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed" )  AND bedroom_count  =  3	apartment_rentals
SELECT bathroom_count FROM Apartments WHERE apt_number IN  ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Confirmed" )  AND bedroom_count  =  3	apartment_rentals

SELECT count ( * )  FROM Apartments WHERE apt_number  =  "Suite 645"	apartment_rentals
SELECT building_id FROM Apartments WHERE apt_number  =  "Apt. 585"	apartment_rentals
SELECT min ( bathroom_count )  ,  max ( bathroom_count )  FROM Apartments	apartment_rentals

SELECT avg ( room_count )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   "Provisional"	apartment_rentals
SELECT * FROM Apartments where bathroom_count > 1 and bedroom_count > 3	apartment_rentals
SELECT * FROM Apartments order by bedroom_count desc limit 1	apartment_rentals
SELECT count ( * )  FROM apartment_bookings where booking_start_date like "%2016%"	apartment_rentals
SELECT count ( * )  FROM apartment_bookings as T1 join apartments as T2 on T1.apt_id  =  T2.apt_id where T1.booking_start_date like "%2016%" and T2.apt_type_code  =  "Studio"	apartment_rentals

SELECT room_count FROM Apartments order by room_count DESC LIMIT 3	apartment_rentals
SELECT apt_type_code, avg ( bathroom_count ) , avg ( bedroom_count ) , avg ( room_count )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code, avg ( room_count )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code, avg ( room_count )  FROM Apartments GROUP BY apt_type_code order by avg ( room_count )  desc	apartment_rentals
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code order by avg ( room_count )  desc	apartment_rentals

SELECT apt_type_code FROM Apartments	apartment_rentals
SELECT apt_type_code ,  max ( room_count )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code ,  min ( room_count )  FROM Apartments GROUP BY apt_type_code	apartment_rentals
SELECT apt_type_code FROM Apartments where building_id  =  808	apartment_rentals

SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4	apartment_rentals
SELECT T2.apt_number FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4	apartment_rentals
SELECT T2.bathroom_count FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4	apartment_rentals

SELECT Time FROM elimination	wrestler
SELECT T1.Time,T2.name FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID	wrestler
SELECT T2.name, T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID WHERE T2.Days_held  >  50	wrestler

SELECT count ( * )  FROM wrestler	wrestler
SELECT distinct location FROM wrestler	wrestler
SELECT wrestler_id FROM wrestler	wrestler
SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT ( * )  DESC LIMIT 1	wrestler

SELECT Team FROM Elimination WHERE Eliminated_By  =  "Orton"	wrestler
SELECT Team FROM Elimination WHERE Eliminated_By  =  "Benjamin"	wrestler
SELECT Elimination_Move FROM Elimination WHERE Eliminated_By  =  "Benjamin" and team = 'Team Batista'	wrestler
SELECT Time FROM Elimination WHERE Eliminated_By  =  "Benjamin" and team = 'Team Batista'	wrestler
SELECT Team FROM Elimination WHERE Eliminated_By  =  "Punk"	wrestler
SELECT Elimination_Move FROM Elimination WHERE Eliminated_By  =  "Punk"	wrestler

SELECT avg ( Days_held )  FROM wrestler	wrestler
SELECT name FROM wrestler order by Days_held limit 1	wrestler
SELECT name FROM wrestler where Wrestler_ID  =  1	wrestler

SELECT TIME FROM elimination WHERE Eliminated_By   =   "Punk" OR Eliminated_By   =   "Orton"	wrestler
SELECT TIME FROM elimination WHERE Eliminated_By   =   "Benjamin"	wrestler
SELECT avg ( TIME )  FROM elimination	wrestler

SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id   =   t2.route_id GROUP BY t1.route_id ORDER BY count ( * )  DESC LIMIT 1	customer_deliveries
SELECT count ( route_name )  FROM Delivery_Routes	customer_deliveries
SELECT t2.location_code,count ( * )  FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id   =   t2.route_id	customer_deliveries

select product_name from products	customer_deliveries
select max ( product_price )  from products	customer_deliveries
SELECT t1.product_name FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count ( * )  DESC LIMIT 1	customer_deliveries
select product_price from Products where product_name = 'dvds'	customer_deliveries

select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id  =  T2.employee_address_id group by T1.state_province_county order by count ( * )  desc limit 1	customer_deliveries
select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id  =  T2.employee_address_id group by T1.state_province_county order by count ( * )   limit 1	customer_deliveries
SELECT state_province_county FROM addresses WHERE address_id NOT IN  ( SELECT employee_address_id FROM Employees ) 	customer_deliveries

SELECT count ( customer_id )  FROM Customers	customer_deliveries
SELECT date_became_customer FROM Customers order by date_became_customer desc limit 1	customer_deliveries
SELECT date_became_customer FROM Customers order by date_became_customer limit 1	customer_deliveries
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5	customer_deliveries

SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   'California'	customer_deliveries
select t1.customer_id, t3.city, t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county  ! =   'California'	customer_deliveries

SELECT rank FROM captain	ship_1
SELECT Rank FROM captain where class ! =  "Third-rate ship of the line"	ship_1

SELECT flag FROM ship GROUP BY flag ORDER BY count ( * )  LIMIT 1	ship_1
SELECT count ( flag )  FROM ship	ship_1
SELECT count ( distinct Built_Year )  FROM ship	ship_1
SELECT count ( distinct Name )  FROM ship	ship_1
SELECT count ( distinct Type )  FROM ship	ship_1

SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain ) 	ship_1
select name from captain where class ! =  'NULL'	ship_1
SELECT Ship_ID  FROM ship WHERE name  = "HMS Gorgon"	ship_1
select count (  distinct Class )  from Ship	ship_1
select T1.Rank from captain as T1 join  Ship as T2 on  T1.Ship_ID = T2.Ship_ID where T2.Name = "HMS Gorgon"	ship_1

select count ( * )  from ship	ship_1
select count ( * )  from captain	ship_1
select Captain_id from captain order by age desc  limit 1	ship_1
select count ( distinct rank )  from captain	ship_1

SELECT name FROM ship	ship_1
SELECT class FROM ship	ship_1
SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain ) 	ship_1

Select count ( * )  from  ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )   >  1 ) 	ship_1
Select count ( * )  from  ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )    =  1 ) 	ship_1
Select age from captain order by age desc limit 1	ship_1
Select age from captain order by age limit 1	ship_1

SELECT name FROM captain order by age desc limit 1	ship_1
select rank from captain where name  =  "Captain Gilbert Pears"	ship_1
select rank from captain where name  =  "Captain Henry Dumaresq"	ship_1

SELECT name FROM ship	ship_1
SELECT name, flag FROM ship	ship_1
SELECT name FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) 	ship_1
SELECT flag FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) 	ship_1
SELECT Name, flag FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) 	ship_1

SELECT name FROM captain order by age desc limit 1	ship_1
SELECT name FROM captain order by age asc limit 1	ship_1
SELECT count ( * )  ,  rank FROM captain WHERE age  <  50 GROUP BY rank	ship_1

SELECT name FROM captain ORDER BY age LIMIT 1	ship_1
SELECT age FROM captain ORDER BY age LIMIT 1	ship_1
SELECT name FROM captain ORDER BY age desc LIMIT 1	ship_1

SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Midshipman'	ship_1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'	ship_1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'	ship_1

SELECT Rank FROM captain WHERE name like '%Conway%'	ship_1
SELECT avg ( age )  FROM captain WHERE Rank  =  'Midshipman'	ship_1
SELECT Class FROM captain WHERE name  =  'Lieutenant Hugh Bolitho'	ship_1

SELECT t1.name FROM captain as t1	ship_1
SELECT t1.name FROM captain as t1 ORDER BY t1.age LIMIT 1	ship_1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.Name like '%Henry%'	ship_1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.Name like '%Henry Dumaresq%'	ship_1

SELECT Name FROM representative	election_representative
SELECT Name FROM representative WHERE Representative_ID NOT IN  ( SELECT Representative_ID FROM election ) 	election_representative
SELECT Name, party FROM representative WHERE Representative_ID NOT IN  ( SELECT Representative_ID FROM election ) 	election_representative

SELECT min ( Vote_Percent )   FROM election	election_representative
SELECT max ( Vote_Percent )   FROM election	election_representative
select election_id from election where votes  =   ( SELECT max ( votes )  FROM election ) 	election_representative
select election_id from election where votes  =   ( SELECT min ( votes )  FROM election ) 	election_representative

SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC	election_representative
SELECT T2.Name, T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC	election_representative
SELECT T2.Name, T2.State FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC	election_representative
SELECT T2.Name, T1.Vote_Percent FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC	election_representative
SELECT T2.Name, T1.date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC	election_representative

SELECT max ( stars )  ,  min ( stars )  FROM Rating	movie_1
SELECT mID ,  ratingDate FROM Rating where stars = 5	movie_1
SELECT mID ,  ratingDate FROM Rating where stars = 2	movie_1
SELECT ratingDate FROM Rating where ratingDate ! =  'NULL' order by ratingdate  limit 1	movie_1
SELECT ratingDate FROM Rating order by ratingdate desc limit  1	movie_1

SELECT T2.title ,  avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars )  LIMIT 1	movie_1
SELECT year ,  director FROM  Movie where title = 'The Sound of Music'	movie_1
SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY T1.stars DESC LIMIT 1	movie_1

SELECT max ( stars )  FROM Rating	movie_1
SELECT avg ( stars )  FROM Rating	movie_1
SELECT min ( year )  FROM movie	movie_1

SELECT count ( * )  FROM Movie	movie_1
SELECT year FROM Movie order by year limit 1	movie_1
SELECT year FROM Movie order by year DESC  limit 1	movie_1
SELECT title FROM Movie WHERE YEAR   =    ( SELECT max ( YEAR )  FROM Movie ) 	movie_1
SELECT director FROM Movie WHERE title  =  "Avatar"	movie_1

SELECT COUNT ( DISTINCT mID )  FROM Rating	movie_1
SELECT COUNT ( * )  FROM Reviewer	movie_1
SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  "Brittany Harris"	movie_1

SELECT name FROM Reviewer	movie_1
SELECT count ( T2.rID )  FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T1.stars  >  3	movie_1
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T1.stars  >  3	movie_1

SELECT title FROM Movie WHERE mID NOT IN  ( SELECT mID FROM Rating ) 	movie_1
SELECT director from movie where title  =  "Star Wars"	movie_1

SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title	movie_1
SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title	movie_1
SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title ORDER BY T1.director ,  T1.title	movie_1
SELECT T1.title ,  T1.director, T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title ORDER BY T1.director ,  T1.title	movie_1

SELECT title FROM Movie	movie_1
SELECT title FROM Movie WHERE  YEAR   <  1980	movie_1
SELECT title FROM Movie WHERE director   =   "James Cameron"	movie_1

SELECT avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars )  DESC LIMIT 1	movie_1
SELECT T2.title ,avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID	movie_1
SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID where T1.stars =  ( select min ( stars )  from Rating  ) 	movie_1

SELECT count ( * )  FROM Movie	movie_1
SELECT count ( director )  FROM Movie	movie_1
SELECT count ( distinct T1.director )  FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title	movie_1
SELECT T1.title  FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title	movie_1
SELECT  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title	movie_1

SELECT count ( DISTINCT RID )  FROM Rating	movie_1
SELECT DISTINCT RID FROM Rating	movie_1
SELECT avg ( stars )  FROM Rating	movie_1
SELECT count ( DISTINCT RID )  FROM Rating WHERE stars < 4	movie_1
SELECT DISTINCT RID FROM Rating WHERE stars < 4	movie_1

SELECT count ( * )  FROM rating	movie_1
SELECT count ( * )  FROM  ( SELECT * FROM Rating GROUP BY mID HAVING count ( * )   <  2 ) 	movie_1
SELECT stars FROM Rating ORDER BY stars DESC LIMIT 1	movie_1
SELECT stars FROM Rating ORDER BY stars aSC LIMIT 1	movie_1
SELECT avg ( stars )  FROM Rating ORDER BY stars aSC LIMIT 1	movie_1

SELECT mid FROM Movie WHERE title  =  'Gone with the Wind'	movie_1
SELECT year FROM Movie WHERE title  =  'Star Wars'	movie_1
SELECT director FROM Movie WHERE title  =  'The Sound of Music'	movie_1
SELECT title FROM Movie WHERE director  =  'James Cameron' AND YEAR  >  2000	movie_1

SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T3.name   =   'Sarah Martinez'	movie_1
SELECT director, title from movie where director ! =  "Victor Fleming"	movie_1
select T1.director, T1.title, T2.stars from movie as T1 join rating as T2 on T1.mid  =  T2.mid where T1.mid in (  SELECT mID from movie where director ! =  "Victor Fleming" ) 	movie_1

SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3	movie_1
SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3	movie_1
SELECT T2.title ,  T2.year, T2.DIRECTOR FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3	movie_1
SELECT T2.title ,  T2.year, T2.DIRECTOR, t1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3	movie_1
SELECT avg ( stars )  from rating	movie_1

SELECT ratingDate FROM Rating WHERE mID  =  101	movie_1
SELECT year FROM Movie WHERE title  =  "The Sound of Music"	movie_1
SELECT director FROM Movie WHERE title  =  "Star Wars"	movie_1
SELECT avg ( T1.stars )  , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =   ( SELECT min ( YEAR )  FROM Movie ) 	movie_1

SELECT * FROM Movie	movie_1
SELECT director FROM Movie WHERE title  =  'Star Wars'	movie_1
SELECT * FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 1	movie_1
SELECT year FROM Movie WHERE title  =  'Gone with the Wind'	movie_1

SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars   =   4	movie_1
SELECT stars  FROM Rating where rID = 201	movie_1

select Delegate from election where Committee = 'Appropriations'	election
select T1.County_name from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'	election
select District from election where Committee = 'Appropriations'	election
select T1.Population from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'	election

SELECT count ( * )  FROM party	election
SELECT Party FROM party	election
SELECT Party FROM party group by Party having count ( * )  > 1	election
SELECT Attorney_General FROM party where Party = 'Democratic'	election

SELECT COUNT ( * )  FROM  ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2 ) 	election
SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2	election
SELECT Comptroller FROM PARTY WHERE US_Senate in  ( SELECT US_Senate FROM PARTY WHERE PARTY IN  ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2 )  ) 	election

SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   "Democratic"	election
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   "Liberal"	election
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   "Democratic" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   "Liberal"	election

SELECT zip_code from county where county_id  =  2	election
SELECT population from county where zip_code  =  "D21"	election
SELECT county_name from county where zip_code  =  "D02"	election
SELECT election_id from election where district  =  2	election
SELECT count ( DISTINCT T2.Delegate )  FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District WHERE T1.Population  >  50000	election

SELECT count ( Zip_code )  FROM county	election
SELECT count ( County_Id )  FROM county	election

SELECT County_name FROM county ORDER BY Population DESC LIMIT 1	election
SELECT County_name FROM county ORDER BY Population ASC LIMIT 1	election
SELECT population FROM county where county_name  =  "Baltimore County"	election
SELECT zip_code FROM county where county_name  =  "Baltimore County"	election

SELECT count ( * )  FROM city	county_public_safety
SELECT Name FROM city ORDER BY Hispanic DESC LIMIT 1	county_public_safety
SELECT Name FROM city ORDER BY Black DESC LIMIT 1	county_public_safety
SELECT Name FROM city ORDER BY white DESC LIMIT 1	county_public_safety

SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID	county_public_safety
SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1	county_public_safety
SELECT T1.population FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1	county_public_safety
SELECT T1.Residents_per_officer FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1	county_public_safety

SELECT name FROM city WHERE county_ID  =   ( SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1 ) 	county_public_safety
SELECT Police_officers FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) 	county_public_safety
SELECT Population FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) 	county_public_safety
SELECT Crime_rate FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) 	county_public_safety
SELECT Residents_per_officer FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) 	county_public_safety

SELECT count ( * )  FROM county_public_safety	county_public_safety
SELECT Name FROM county_public_safety ORDER BY Crime_rate ASC LIMIT 1	county_public_safety
SELECT Name FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1	county_public_safety
SELECT Name, Crime_rate FROM county_public_safety WHERE Name  =  'Campbell River' OR Name  =  'Central Saanich'	county_public_safety
SELECT Name, Crime_rate FROM county_public_safety WHERE Name  =  'Campbell River' OR Name  =  'Central Saanich' ORDER BY Crime_rate ASC	county_public_safety

SELECT MAX ( Population )  FROM county_public_safety	county_public_safety
SELECT COUNT ( Location )  FROM county_public_safety	county_public_safety
SELECT Crime_rate FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1	county_public_safety

SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT ( * )  LIMIT 1	county_public_safety
SELECT Crime_rate FROM county_public_safety WHERE Name = 'Burnaby'	county_public_safety
SELECT Location FROM county_public_safety WHERE Name = 'Campbell River'	county_public_safety
SELECT Police_officers FROM county_public_safety WHERE County_ID = '2'	county_public_safety

SELECT Count ( * )  ,  T2.FullName  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id	car_1
SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id order by count ( * )  desc limit 1	car_1
SELECT Count ( * )  ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id GROUP BY T2.id having count ( * )   > =  3	car_1

SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T3.weight  <  3500	car_1
SELECT DISTINCT T3.Weight FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model   =   T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker   =   T4.Id WHERE T1.Model = "bmw"	car_1
SELECT Model FROM car_names WHERE MakeId = 2	car_1

SELECT T2.Weight FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.MakeID  =  1	car_1
SELECT T2.Year FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "buick"	car_1
SELECT T2.Horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId   =   T2.Id WHERE T1.Model  =  "plymouth"	car_1
SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1	car_1

select count ( * )  from cars_data where year = '1974'	car_1
select id  from cars_data where year = '1974' and Cylinders  =  '8'	car_1

SELECT avg ( Horsepower )  FROM cars_data	car_1
SELECT Id FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1	car_1
SELECT accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1	car_1
SELECT COUNT ( * )  FROM CARS_DATA WHERE Accelerate  >  19.0	car_1

SELECT count ( DISTINCT Make )  FROM CAR_NAMES WHERE Model  =  'chevrolet'	car_1
SELECT count ( DISTINCT Model )  FROM CAR_NAMES	car_1
SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count ( DISTINCT Make )  DESC LIMIT 1	car_1

SELECT  Id  FROM CAR_MAKERS	car_1
SELECT  Country  FROM CAR_MAKERS	car_1

SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'	car_1
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'germany'	car_1
SELECt count ( T1.maker )  FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'	car_1
SELECt T1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'	car_1

SELECT Fullname FROM car_makers WHERE maker  =  "amc"	car_1
SELECT countryname FROM countries WHERE countryid = 1 or countryid = 2 or countryid = 3 ) 	car_1
SELECT modelid FROM model_list WHERE model  =  "amc"	car_1
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'	car_1

SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'	car_1
SELECT T3.model, T3.make FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker JOIN CAR_NAMES AS T3 ON T2.model   =   T3.model JOIN CARS_DATA AS T4 ON T3.MakeId   =   T4.id WHERE T4.year   =   '1970'	car_1
SELECT T1.Fullname FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970' ORDER BY T4.weight DESC limit 1	car_1

SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T2.Make   =   'amc hornet sportabout  ( sw ) '	car_1
SELECT T2.Model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId order by T1.Year desc limit 1	car_1

SELECT Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'	car_1
SELECT ModelId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Maker   =   'amc'	car_1
SELECT DISTINCT ( T1.Maker )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.Id  =  2	car_1
SELECT count ( * )  FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id   =   T2.Maker WHERE T1.FullName   =   'American Motor Company'	car_1

select fullname from car_makers where maker  =  "amc"	car_1
SELECT T3.model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T1.countryname  =  "germany"	car_1
SELECT modelid from model_list where model  =  "bmw"	car_1
SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country GROUP BY T1.countryId HAVING count ( * )   >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId   =   T2.Country JOIN MODEL_LIST AS T3 ON T2.Id   =   T3.Maker WHERE T3.Model   =   'fiat'	car_1

SELECT id from cars_data order by horsepower limit 1	car_1
SELECT avg ( horsepower ) from cars_data	car_1
SELECT T1.Id FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 	car_1
SELECT T1.Id ,T2.model FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id   =   T2.MakeId WHERE T1.Horsepower <  ( SELECT avg ( Horsepower )  FROM CARS_DATA ) 	car_1

SELECT sum ( Cylinders )  FROM cars_data	car_1
SELECT Weight FROM cars_data ORDER BY Weight DESC LIMIT 1	car_1
SELECT count ( * )  FROM cars_data	car_1
SELECT accelerate FROM cars_data ORDER BY accelerate DESC LIMIT 1	car_1
SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1	car_1

SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors'	car_1
SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T4.weight  >  3500	car_1
SELECT DISTINCT T2.Model, T3.maker FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.horsepower desc limit 1	car_1
SELECT count ( * )  FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' and t4.mpg > 15	car_1
SELECT DISTINCT t1.make, t1.model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model   =   T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker   =   T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId   =   T4.Id WHERE T3.FullName   =   'General Motors' order by t4.mpg desc limit 1	car_1

SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country	car_1
SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId   =   T2.Country	car_1

SELECT count ( * )  FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker   =   T2.Id JOIN COUNTRIES AS T3 ON T2.Country   =   T3.CountryId WHERE T3.CountryName   =   'usa'	car_1
SELECT distinct t1.maker FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country   =   T2.CountryId WHERE T2.CountryName   =   'usa'	car_1
select count (  * )  from model_list as t1 join car_makers as t2 where t1.maker  =  t2.id and t2.maker  =  "ford"	car_1

select distinct Model from car_names	car_1
SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model   =   T2.model JOIN CARS_DATA AS T3 ON T2.MakeId   =   T3.id WHERE T3.year  >  1980	car_1

SELECT distinct T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'	car_1
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName	car_1
SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3	car_1
SELECT T1.CountryName, count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe' GROUP BY T1.CountryName HAVING count ( * )    > =    3	car_1
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'europe'	car_1
SELECT count ( * )  FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'	car_1
SELECT T3.Fullname FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent   =   T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId   =   T3.Country WHERE T2.Continent   =   'america'	car_1

select * from song where song_name  =  "Tumi robe nirobe"	music_1
SELECT max ( T2.resolution )  ,  min ( T2.resolution )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.duration LIKE "3:%"	music_1
SELECT * FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id where file_size > 4	music_1

SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name  GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3	music_1
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "bangla" GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3	music_1
SELECT T1.preferred_genre FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "bangla" GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3	music_1
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "bangla" AND T1.preferred_genre  =  "folk"	music_1
SELECT artist_name FROM artist  WHERE preferred_genre  =  "folk"	music_1
SELECT artist_name FROM artist  WHERE preferred_genre  =  "tagore"	music_1

SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1	music_1
SELECT song_name FROM song ORDER BY releasedate LIMIT 1	music_1
SELECT artist_name FROM song ORDER BY releasedate LIMIT 1	music_1

SELECT rating FROM song WHERE languages   =   'english'	music_1
SELECT song_name FROM song	music_1
SELECT song_name FROM song WHERE rating <  ( SELECT min ( rating )  FROM song WHERE languages  =  'english' ) 	music_1

SELECT artist_name FROM song  WHERE  song_name  =  "Tumi robe nirobe"	music_1
SELECT rating FROM song  WHERE  song_name  =  "Tumi robe nirobe"	music_1
SELECT genre_is  FROM song  WHERE  song_name  =  "Tumi robe nirobe"	music_1
SELECT song_name FROM song WHERE genre_is  =  "modern" OR languages  =  "english"	music_1

SELECT T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1	music_1
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1	music_1
SELECT T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1	music_1

SELECT artist_name FROM artist	music_1
SELECT artist_name FROM artist WHERE country  =  "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name	music_1

SELECT song_name FROM song WHERE rating  <   ( SELECT max ( rating )  FROM song WHERE genre_is   =   "blues" ) 	music_1
SELECT song_name FROM song WHERE rating  >   ( SELECT max ( rating )  FROM song WHERE genre_is   =   "blues" ) 	music_1
SELECT song_name,rating FROM song WHERE  genre_is   =   "blues"	music_1

SELECT resolution FROM song WHERE rating  <  8	music_1
SELECT f_id,resolution FROM song WHERE resolution  >   ( SELECT max ( resolution )  FROM song WHERE rating  <  8 ) 	music_1
SELECT f_id,resolution FROM song WHERE resolution   > =   1080	music_1
SELECT song_name,rating FROM song WHERE resolution   > =   1080	music_1

SELECT min ( T1.duration )  ,  min ( T2.rating )  ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is	music_1
SELECT artist_name from song	music_1
SELECT count ( * )   FROM song where artist_name  =  "Enrique"	music_1

SELECT count ( * )  from artist	music_1
SELECT count ( * )  from song	music_1
SELECT song_name from song	music_1
SELECT artist_name from song where song_name  =  "My love"	music_1
SELECT country from song where artist_name  =  "Enrique"	music_1

SELECT * FROM artist WHERE gender   =   "Male"	music_1
SELECT artist_name FROM artist WHERE country   =   "UK" AND gender   =   "Male"	music_1
SELECT preferred_genre FROM artist WHERE artist_name  =  "Michel"	music_1
SELECT count ( * )  FROM artist WHERE preferred_genre   =   "pop" AND gender   =   "Male"	music_1
SELECT count ( * )  FROM artist WHERE preferred_genre   =   "pop" AND gender   =   "Female"	music_1
SELECT preferred_genre FROM artist Group By preferred_genre order by count ( * )  desc limit 1	music_1

SELECT languages FROM song GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1	music_1
SELECT min ( resolution ) , max ( resolution )  FROM song	music_1
SELECT min ( rating ) , max ( rating )  FROM song	music_1
SELECT languages FROM song WHERE resolution  <  500 GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1	music_1
SELECT languages FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1	music_1

SELECT count  ( distinct formats )  FROM files	music_1
SELECT formats, count ( * )  FROM files group by formats	music_1
SELECT formats FROM files GROUP BY formats ORDER BY COUNT  ( * )  DESC LIMIT 1	music_1

SELECT artist_name from song where country  =  'India'	music_1
SELECT f_id from song where languages  =  'bangla'	music_1
SELECT rating from song where resolution  =  512	music_1
SELECT song_name from song where genre_is  =  'tagore'	music_1
SELECT song_name from song where country  =  'Bangladesh'	music_1

SELECT max ( T1.duration )  ,  max ( T2.resolution )  ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.languages ORDER BY T2.languages	music_1
SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.languages ORDER BY T2.languages	music_1
SELECT max ( T1.duration )  ,  max ( T2.resolution )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.country ORDER BY T2.country	music_1
SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.country ORDER BY T2.country	music_1

SELECT count ( * )  FROM song	music_1
SELECT rating FROM song ORDER BY rating DESC LIMIT 1	music_1
SELECT count ( * )  FROM song	music_1
SELECT resolution FROM song ORDER BY resolution DESC LIMIT 1	music_1

SELECT duration from files order by duration desc limit 1	music_1
SELECT duration from files order by duration limit 1	music_1
SELECT count ( * )  from files where duration < 4	music_1

SELECT count ( * )  from artist where country  =  "India"	music_1
SELECT count ( * )  from artist where preferred_genre  =  "folk"	music_1
SELECT count ( * )  from artist where country  =  "Bangladesh"	music_1

SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  "english" GROUP BY T2.artist_name HAVING count ( * )   > =   1	music_1
select T1.country from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1	music_1
select T1.gender from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1	music_1
select T2.rating from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1	music_1

SELECT  count (  artist_name )  from artist	music_1
SELECT T2.song_name FROM  song AS T2  WHERE T2.releasedate LIKE "%Mar%"	music_1
SELECT T1.artist_name , T1.gender,T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE "%Mar%"	music_1

SELECT min ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" AND T2.resolution   <  800	music_1
SELECT max ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" AND T2.resolution   <  800	music_1
SELECT avg ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" AND T2.resolution   <  800	music_1

SELECT artist_name FROM artist	music_1
SELECT artist_name, rating FROM song	music_1
SELECT song_name, languages FROM song	music_1

SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000	music_1
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp3"	music_1
SELECT resolution from song where song_name  = "Just beat it"	music_1
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   "mp4" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000	music_1
SELECT resolution from song where song_name  =  'Aj ei akash'	music_1
SELECT song_name from song order by resolution desc limit 1	music_1
SELECT resolution from song where song_name  = 'Tumi robe nirobe'	music_1

SELECT f_id FROM files ORDER BY duration DESC LIMIT 1	music_1
SELECT artist_name FROM files ORDER BY duration DESC LIMIT 1	music_1
SELECT duration FROM files ORDER BY duration DESC LIMIT 1	music_1
SELECT duration FROM files ORDER BY duration LIMIT 1	music_1
SELECT avg ( duration )  FROM files	music_1

SELECT count ( distinct f_id )  FROM files	music_1
SELECT T2.country from files as T1 join song as T2 on T1.f_id  =  T2.f_id where T1.artist_name  =  "Shrikanta"	music_1
SELECT artist_name from song order by rating desc limit 1	music_1
SELECT languages, genre_is from song where artist_name  =  "Prity"	music_1
SELECT file_size from files where artist_name  =  "Farida"	music_1

SELECT max ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is	music_1
SELECT min ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is	music_1
SELECT min ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is order by T2.genre_is	music_1
SELECT min ( T1.duration )  ,  min ( T2.rating )  ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is	music_1

SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * )  DESC LIMIT 1	hospital_1
SELECT EmployeeID FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * )  DESC LIMIT 1	hospital_1
select name from nurse order by name	hospital_1

SELECT Name FROM procedures order by cost desc limit 1	hospital_1
SELECT Name FROM procedures order by cost asc limit 1	hospital_1
SELECT MAX ( cost )  ,  MIN ( cost )  ,  AVG ( cost )  FROM procedures	hospital_1

SELECT * FROM department AS T1 JOIN physician AS T2 ON T1.head   =   T2.EmployeeID GROUP BY departmentID ORDER BY count ( departmentID )  LIMIT 1	hospital_1
SELECT T2.name FROM department AS T1 JOIN physician AS T2 ON T1.head   =   T2.EmployeeID where T1.name = 'General Medicine'	hospital_1
select position from physician where name  =  "Percival Cox"	hospital_1

SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   "X"	hospital_1
SELECT DISTINCT T2.date FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   "X"	hospital_1
SELECT dose FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   "X"	hospital_1

SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician ORDER BY T2.dose DESC LIMIT 1	hospital_1

SELECT * FROM department GROUP BY departmentID ORDER BY count ( * )  LIMIT 1	hospital_1
SELECT head FROM department GROUP BY departmentID ORDER BY count ( departmentID )  LIMIT 1	hospital_1

SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient  =  T2.SSN JOIN stay AS T3 ON T1.Stay   =   T3.StayID WHERE T3.room   =   111	hospital_1
SELECT name FROM patient WHERE InsuranceID  =  68476213	hospital_1
SELECT DISTINCT Physician FROM Undergoes WHERE patient  =  100000001	hospital_1

SELECT count ( patient )  FROM Stay	hospital_1
SELECT patient FROM stay WHERE room  =  112 ORDER BY staystart DESC LIMIT 1	hospital_1
SELECT count ( distinct room )  FROM stay	hospital_1

SELECT count ( * )   from  Patient	hospital_1
SELECT T2.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111	hospital_1
SELECT T2.InsuranceID FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111	hospital_1

SELECT name FROM procedures order by cost desc limit 1	hospital_1
SELECT count ( * )  FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'	hospital_1
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'	hospital_1
SELECT T2.CertificationDate FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'	hospital_1

SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1	hospital_1
SELECT phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1	hospital_1
SELECT pcp FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1	hospital_1
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )    =   1	hospital_1
SELECT t1.start,t1.end FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )    =   1	hospital_1

SELECT COUNT ( * )  FROM Physician	hospital_1
SELECT Name FROM Procedures	hospital_1
SELECT Position FROM Physician WHERE Name  =  "John Dorian"	hospital_1
SELECT Cost FROM Procedures WHERE Name  =  "Reverse Rhinopodoplasty"	hospital_1

SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department  =  T2.departmentid WHERE PrimaryAffiliation   =   1	hospital_1
SELECT departmentID from department where name  =  "Surgery"	hospital_1

SELECT Room FROM Stay	hospital_1
SELECT T1.Name FROM Stay as T4 Join Patient as T1 where T4.Patient = T1.SSN and T4.Room  =  111	hospital_1
SELECT distinct T4.Name, T3.Dose FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE T2.Name  =  'John Smith'	hospital_1

SELECT name FROM physician	hospital_1
SELECT T1.name ,  count ( * )  FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid   =   T2.PCP GROUP BY T1.employeeid	hospital_1
SELECT name FROM physician WHERE name NOT IN  ( SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid   =   T2.PCP ) 	hospital_1

SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1	hospital_1
SELECT Patient FROM Appointment WHERE Start  =  '2008-04-24 10:00'	hospital_1
SELECT Patient FROM Appointment WHERE AppointmentID  =  93216548 OR AppointmentID  =  86213939	hospital_1
SELECT DISTINCT ( T1.name )  FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn  =  T2.patient WHERE T2.patient  =  100000004 OR T2.patient  =  100000002	hospital_1

select appointmentid from appointment order by start desc limit 1	hospital_1
select patient from appointment order by start desc limit 1	hospital_1
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn  =  T2.patient ORDER BY T2.start DESC LIMIT 1	hospital_1

SELECT name FROM physician	hospital_1
SELECT SSN FROM physician where name  =  'John Dorian'	hospital_1
SELECT name FROM physician where EmployeeID  =  2	hospital_1
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician ORDER BY T2.dose DESC LIMIT 1	hospital_1

select count ( * )  from Physician	hospital_1
select Name from Physician	hospital_1
SELECT Position FROM physician WHERE POSITION LIKE '%senior%'	hospital_1
SELECT name FROM physician WHERE POSITION LIKE '%senior%'	hospital_1

SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment WHERE T1.name   =   "John Wen"	hospital_1

SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.card_type_code   =   "Credit"	customers_card_transactions
SELECT T2.customer_first_name, T2.customer_last_name, count ( * )  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.card_type_code   =   "Credit" group by T1.customer_id	customers_card_transactions
SELECT count ( * )  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T2.customer_first_name   =   "Blanche" AND T2.customer_last_name   =   "Huels" AND T1.card_type_code   =   "Credit"	customers_card_transactions

SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id	customers_card_transactions
SELECT T1.customer_address FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id where T2.other_account_details  =  'VIP'	customers_card_transactions
SELECT T2.account_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id where T1.customer_first_name like "%G%" or T1.customer_first_name like "%A%" or T1.customer_last_name like "%G%" or T1.customer_last_name like "%A%"	customers_card_transactions

SELECT customer_first_name, customer_last_name from customers where customer_id  =  1	customers_card_transactions
SELECT card_type_code from Customers_Cards where customer_id  =  6	customers_card_transactions
SELECT customer_address from Customers where customer_id  =  2	customers_card_transactions
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2	customers_card_transactions

SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * )  DESC LIMIT 1	customers_card_transactions
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * )  LIMIT 1	customers_card_transactions
SELECT count ( * )  FROM Customers_cards where card_type_code  =  "Credit"	customers_card_transactions
SELECT count ( * )  FROM Customers_cards where card_type_code  =  "Credit"	customers_card_transactions

SELECT customer_id FROM Customers_cards GROUP BY customer_id having count ( * ) >1	customers_card_transactions
SELECT customer_id, count ( * )  FROM Customers_cards GROUP BY customer_id having count ( * ) >1	customers_card_transactions

SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2	customers_card_transactions
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2	customers_card_transactions
SELECT T2.customer_address FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_type_code  =  "Credit"	customers_card_transactions
SELECT T2.customer_email FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.date_valid_from  =   ( SELECT MIN ( date_valid_from )  FROM Customers_Cards ) 	customers_card_transactions

SELECT avg ( transaction_amount )  FROM Financial_transactions	customers_card_transactions
SELECT  sum ( transaction_amount )  FROM Financial_transactions	customers_card_transactions

SELECT  count ( * )  FROM Customers_cards	customers_card_transactions
SELECT customer_id , count ( * )  FROM Customers_cards GROUP BY customer_id ORDER BY count ( * )  DESC LIMIT 1	customers_card_transactions

SELECT count ( * )  FROM Customers	customers_card_transactions
SELECT customer_first_name FROM Customers	customers_card_transactions
SELECT T2.card_number from  Customers as T1 JOIN Customers_Cards as T2 ON T1.customer_id  =  T2.customer_id WHERE customer_first_name  =  "Aniyah"	customers_card_transactions

SELECT customer_id from customers WHERE customer_first_name   =   "Art" AND customer_last_name   =   "Turcotte"	customers_card_transactions

SELECT population FROM city WHERE City_ID  =  2	farm
SELECT census_ranking FROM city WHERE official_name  =  "Perth-Andover"	farm
SELECT hosts FROM farm_competition WHERE Theme like "%Carnival M is back%"	farm

SELECT max ( Cows )  ,  min ( Cows )  FROM farm	farm
SELECT max ( Total_Horses )  ,  min ( Total_Horses )  FROM farm	farm
SELECT oxen, total_cattle  FROM farm where farm_id  =  1	farm

SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )   >  1	farm
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )    =   1	farm
SELECT T1.Official_Name, T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )   =  1	farm
SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID where T1.Official_Name  =  "Plaster Rock"	farm
SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID where T2.Theme  =  "Carnival M is back!"	farm

SELECT * from course	college_1
SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code	college_1
SELECT T2.emp_lname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code	college_1

SELECT SCHOOL_CODE from DEPARTMENT where EMP_NUM = 114	college_1
SELECT SCHOOL_CODE from DEPARTMENT where DEPT_NAME = 'Fine Arts'	college_1
SELECT DEPT_ADDRESS from DEPARTMENT where DEPT_NAME = 'Accounting'	college_1
SELECT PROF_EXTENSION  from PROFESSOR where DEPT_CODE = 'HIST'	college_1

SELECT * FROM student WHERE stu_gpa  < 3	college_1
SELECT * FROM student WHERE stu_gpa > 3	college_1
SELECT * FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1	college_1
SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1	college_1

SELECT dept_code, dept_name FROM department	college_1
SELECT t2.crs_code FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE t1.dept_code   =   "CIS"	college_1
SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE t1.dept_code   =   "CIS"	college_1

SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT school_code from department where dept_name  =  "Accounting"	college_1
SELECT EMP_num from department where dept_name  =  "Accounting"	college_1

SELECT count ( * )  from department	college_1
SELECT T1.emp_fname from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST'	college_1
SELECT T2.prof_office from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST'	college_1
SELECT T1.emp_fname, T2.prof_office from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST' and T2.PROF_HIGH_DEGREE  =  'Ph.D.'	college_1

SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_FNAME  =  "James"	college_1
SELECT EMP_DOB FROM EMPLOYEE WHERE EMP_FNAME  =  "James"	college_1
SELECT EMP_HIREDATE FROM EMPLOYEE WHERE EMP_FNAME  =  "James"	college_1

SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM   =   T3.EMP_NUM WHERE DEPT_NAME   =   "Biology"	college_1
SELECT count ( * )  from employee	college_1
SELECT max ( prof_extension )  from professor	college_1
SELECT min ( emp_num )  from Employee	college_1

SELECT DEPT_NAME FROM DEPARTMENT	college_1
SELECT distinct ( DEPT_CODE )  FROM DEPARTMENT	college_1
SELECT T1.stu_fname, T1.STU_LNAME FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'	college_1
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'	college_1
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'	college_1

SELECT CLASS_ROOM FROM CLASS WHERE CLASS_SECTION   =   1	college_1

SELECT count ( * )  FROM professor	college_1
SELECT count ( distinct DEPT_NAME )  FROM DEPARTMENT	college_1

SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code WHERE T1.crs_code   =   'ACCT-211'	college_1
SELECT CLASS_TIME,CLASS_ROOM from CLASS where CRS_CODE  =   'ACCT-211'	college_1
select distinct crs_code from class	college_1

SELECT count ( * )  from STUDENT	college_1
SELECT count ( T1.stu_fname )  FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'A'	college_1
SELECT count ( T1.stu_fname )  FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C' OR T2.enroll_grade   =   'A'	college_1

SELECT count ( DISTINCT SCHOOL_CODE )  FROM DEPARTMENT	college_1
SELECT * ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code   =   T2.crs_code JOIN department AS T3 ON T2.dept_code   =   T3.dept_code GROUP BY T3.school_code	college_1
SELECT count ( * )  ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code   =   T2.crs_code JOIN department AS T3 ON T2.dept_code   =   T3.dept_code GROUP BY T3.school_code	college_1

SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting'	college_1
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'	college_1
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'	college_1

SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'A'	college_1
SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'	college_1
SELECT  t1.stu_num FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'	college_1
SELECT t2.class_code FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'	college_1
SELECT stu_class, stu_GPA FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'	college_1

SELECT dept_name from department	college_1
SELECT T2.dept_name, count ( * )   FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code group by T1.dept_code	college_1
SELECT T2.dept_name ,  T2.dept_address ,  count ( * )  FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 3	college_1

SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT T2.STU_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT T3.CRS_CODE FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT CLASS_TIME from CLASS where CRS_CODE = "ACCT-211"	college_1

SELECT count ( * )  FROM STUDENT	college_1
SELECT avg ( STU_GPA )  FROM STUDENT	college_1
SELECT ENROLL_GRADE FROM ENROLL ORDER BY ENROLL_GRADE ASC LIMIT 1	college_1
SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code	college_1

SELECT count ( * )  FROM  CLASS	college_1
SELECT count ( distinct  EMP_NUM )  FROM employee where EMP_JOBCODE = 'PROF'	college_1

SELECT class_code  FROM CLASS where CLASS_ROOM  =  'BUS311'	college_1
SELECT PROF_NUM FROM CLASS where CRS_CODE  =  'ACCT-211'	college_1
SELECT CLASS_TIME FROM CLASS where CLASS_SECTION  = 3	college_1
SELECT count ( * )  ,  class_room FROM CLASS GROUP BY class_room HAVING count ( * )    > =    2	college_1

SELECT count ( * )  FROM professor	college_1
SELECT count ( * )  FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE DEPT_NAME   =   "Accounting"	college_1

SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   "Computer Info. Systems"	college_1
SELECT crs_description FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   "Computer Info. Systems"	college_1
SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   "Biology"	college_1
SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   "Accounting"	college_1
SELECT t2.crs_credit FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   "Accounting"	college_1

SELECT T2.dept_name  FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 1	college_1
SELECT count ( * )   FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 1	college_1
SELECT dept_address from department where dept_name  =  "Accounting"	college_1
SELECT T2.stu_fname, T2.stu_lname from department as T1 join student as T2 on T1.dept_code  =  T2.dept_code where T1.dept_name  =  "Accounting" and T2.stu_GPA > 3.0	college_1
SELECT sum ( stu_transfer )  from student	college_1

SELECT school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name )   <  5	college_1
SELECT * FROM department where school_code  =  "BUS"	college_1
SELECT count ( DISTINCT dept_name )  ,  school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name )   <  5	college_1

SELECT count ( * )  FROM professor WHERE dept_code  =  "HIST"	college_1
SELECT count ( * )  FROM professor WHERE dept_code  =  "HIST" and prof_high_degree  =  "Ph.D."	college_1
SELECT count ( distinct dept_code )  FROM professor	college_1
SELECT distinct dept_code from professor where dept_code  =  "ENG"	college_1
SELECT count ( * )  from professor where dept_code  =  "ENG" and prof_high_degree  =  "Ph.D."	college_1
SELECT prof_office from professor where dept_code  =  "HIST" and prof_high_degree  =  "Ph.D."	college_1
SELECT count ( * )  from professor where prof_high_degree  =  "Ph.D."	college_1
SELECT count ( * )  from professor where prof_high_degree  =  "Ph.D." and dept_code  =  "ACCT"	college_1
SELECT prof_office from professor where prof_high_degree  =  "Ph.D." and dept_code  =  "ACCT"	college_1
SELECT prof_extension from professor where prof_high_degree  =  "Ph.D." and dept_code  =  "ACCT" and prof_office  =  "KLR 229D"	college_1

SELECT count ( distinct CRS_CODE )  from course	college_1
SELECT count ( DEPT_CODE )  from department	college_1
SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Statistics'	college_1
SELECT CRS_DESCRIPTION from course	college_1
SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Intro. to Statistics'	college_1
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE T1.crs_description  = 'Intro. to Statistics'	college_1

SELECT ENROLL_GRADE from ENROLL where STU_NUM = 324257	college_1
SELECT count ( * )  from Class	college_1
SELECT count ( * )  from student	college_1
SELECT DEPT_CODE from student where STU_NUM = 324257	college_1

SELECT School_Code FROM Department WHERE Dept_Name  =  'Accounting'	college_1
SELECT Dept_Address FROM Department WHERE Dept_Name  =  'Accounting'	college_1
SELECT T3.prof_office FROM professor AS T3 JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT T3.prof_high_degree FROM professor AS T3 JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'	college_1
SELECT class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T1.Crs_Code  =  "ACCT-211" AND T1.Class_Time LIKE '%T%'	college_1

SELECT count ( * )  from employee	college_1
SELECT count ( * )  from professor where DEPT_CODE  =  "ENG"	college_1
SELECT prof_high_degree from professor where DEPT_CODE  =  "HIST"	college_1

SELECT count ( * )  FROM professor	college_1
SELECT DISTINCT T4.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code	college_1
SELECT count ( * )  FROM Professor WHERE Dept_code  =  "ACCT"	college_1
SELECT count ( DISTINCT t3.emp_num )  FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T3.dept_code   =   'ACCT'	college_1
SELECT count ( DISTINCT t3.emp_num )  FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T3.dept_code   =   'ACCT'	college_1
SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'	college_1

SELECT count ( * )  from professor	college_1
SELECT count ( * )  from professor where DEPT_CODE  =  "ENG"	college_1
SELECT dept_code from professor where emp_num  =  103	college_1

SELECT DISTINCT T1.EMP_FNAME FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM   =   T2.PROF_NUM WHERE CRS_CODE   =   "ACCT-211"	college_1
SELECT DISTINCT T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM   =   T2.PROF_NUM WHERE CRS_CODE   =   "ACCT-211"	college_1

SELECT count ( * )  FROM professor WHERE prof_high_degree   =   'Ph.D.' OR prof_high_degree   =   'MA'	college_1
SELECT count ( * )  FROM professor where prof_high_degree  =  'Ph.D.'	college_1

SELECT count ( * )  FROM student	college_1
SELECT count ( class_room )  FROM class	college_1
SELECT avg ( STU_GPA )  FROM student	college_1
SELECT STU_LNAME FROM student where STU_FNAME  =  "William"	college_1

SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num	college_1
SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num	college_1
SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num	college_1

SELECT count ( school_code )  FROM department	college_1
SELECT count ( * )  FROM PROFESSOR	college_1
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  desc LIMIT 1	college_1
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  LIMIT 1	college_1
select DEPT_NAME from department where school_code in  ( SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  LIMIT 1 ) 	college_1

SELECT stu_fname ,  stu_lname  FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1	college_1
SELECT stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1	college_1
SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  <  3 ORDER BY stu_dob ASC LIMIT 1	college_1

SELECT T3.DEPT_EXTENSION FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num JOIN department AS T3 ON T2.dept_code   =   T3.dept_code WHERE EMP_LNAME = "Donelly" or  EMP_LNAME = "Blalock"	college_1
SELECT T3.SCHOOL_CODE FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num JOIN department AS T3 ON T2.dept_code   =   T3.dept_code WHERE T3.dept_name  =  'History'	college_1

SELECT COUNT ( * )  FROM  ( SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music' ) 	store_1
SELECT composer FROM tracks WHERE name  =  "For Those About To Rock  ( We Salute You ) "	store_1
SELECT milliseconds FROM tracks WHERE name  =  "For Those About To Rock  ( We Salute You ) "	store_1
SELECT composer FROM tracks WHERE name  =  "Fast As a Shark"	store_1

SELECT count ( * )  from tracks	store_1
SELECT count ( id )  from playlists	store_1
SELECT avg ( unit_price  )  from tracks	store_1

SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY total LIMIT 10	store_1
SELECT T1.first_name, T1.last_name  FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY total LIMIT 10	store_1

SELECT count ( distinct country )  FROM customers	store_1
select count ( * )  from customers where last_name  =  "Almeida"	store_1
SELECT country FROM customers WHERE first_name  =  "Roberto" AND last_name  =  "Almeida"	store_1

SELECT * FROM customers WHERE first_name  =  "Eduardo" AND last_name  =  "Martins"	store_1
SELECT company FROM customers WHERE first_name  =  "Eduardo" AND last_name  =  "Martins"	store_1
SELECT city FROM customers WHERE company  =  "Woodstock Discos"	store_1
SELECT phone FROM customers WHERE first_name  =  "Eduardo" AND last_name  =  "Martins"	store_1

SELECT title ,  phone ,  hire_date FROM employees WHERE first_name  =  "Nancy" AND last_name  =  "Edwards"	store_1
SELECT count ( * )  FROM employees	store_1
SELECT first_name FROM employees WHERE title = "General Manager"	store_1

SELECT count ( * )  from employees where title like "%manager%"	store_1

SELECT count ( * )  FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name  =  "Nancy" AND T1.last_name  =  "Edwards"	store_1
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name ! =  "Nancy" AND T1.last_name ! =  "Edwards"	store_1
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T2.first_name  =  "Andrew" AND T2.last_name  =  "Adams"	store_1
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name  =  "Andrew" AND T1.last_name  =  "Adams" and T2.first_name ! =  'Nancy' and T2.last_name ! =  'Edwards'	store_1

SELECT billing_address FROM invoices ORDER BY total DESC LIMIT 1	store_1
SELECT sum ( total )  FROM invoices WHERE billing_city   =   "Chicago" AND billing_state   =   "IL"	store_1
SELECT billing_country FROM invoices WHERE total   =  3.96	store_1

SELECT count ( * )  FROM customers	store_1
SELECT company FROM customers where company ! =  'NULL'	store_1
SELECT total  FROM invoices  order by total desc limit 1	store_1

SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	store_1
SELECT T1.id FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	store_1
SELECT T1.address FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	store_1

SELECT * FROM tracks	store_1
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id   =   T2.track_id JOIN playlists AS T3 ON T2.playlist_id   =   T3.id WHERE T3.name   =   'Movies'	store_1
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id   =   T2.track_id JOIN playlists AS T3 ON T2.playlist_id   =   T3.id WHERE T3.name  ! =   'Music'	store_1

SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  "Balls to the Wall"	store_1
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  "Balls to the Wall"	store_1
SELECT distinct T2.composer FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  "Balls to the Wall"	store_1

SELECT billing_country  FROM invoices GROUP BY billing_country ORDER BY SUM ( total )  DESC LIMIT 8	store_1
SELECT billing_city  FROM invoices where billing_city  like "%O%"	store_1
SELECT distinct billing_address FROM invoices where billing_city  = "Boston"	store_1

SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5	store_1
SELECT T1.first_name ,  T1.last_name, T1.city, T1.state FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5	store_1
SELECT T1.first_name ,  T1.last_name, T1.city, T1.state, T1.country FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5	store_1
SELECT T1.email FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5	store_1

SELECT address from customers where state  =  'SP'	store_1
SELECT country from customers where support_rep_id  =  5	store_1
SELECT name from tracks where album_id  =  3	store_1
SELECT unit_price from tracks where id  =  6	store_1
SELECT composer from tracks where genre_id  =  1	store_1

select id,name from genres order by id desc limit 5	store_1
SELECT T1.id,COUNT ( * )  FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 5	store_1
SELECT t1.id,T2.composer FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 5	store_1
select composer from tracks order by milliseconds	store_1

SELECT count ( * )  FROM invoices AS T2 JOIN customers AS T1 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  "Lucas" AND T1.last_name  =  "Mancini"	store_1
SELECT sum ( T2.total )  FROM customers AS T1 JOIN invoices AS T2 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  "Lucas" AND T1.last_name  =  "Mancini"	store_1
SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  "Lucas" AND T1.last_name  =  "Mancini" ORDER BY t2.invoice_date DESC LIMIT 1	store_1

SELECT  COUNT ( * )  FROM invoices WHERE billing_country   =   "USA"	store_1
SELECT  billing_state, COUNT ( * )  FROM invoices WHERE billing_country   =   "USA" group by billing_state	store_1
SELECT  billing_country, COUNT ( * )  FROM invoices group by billing_country	store_1
SELECT  billing_city, COUNT ( * )  FROM invoices where billing_country  =  "USA" group by billing_city	store_1
SELECT  billing_city, COUNT ( * )  FROM invoices where billing_country ! =  "USA" group by billing_city	store_1

SELECT company FROM customers WHERE first_name  =  "Eduardo" AND last_name  =  "Martins"	store_1
SELECT phone FROM customers WHERE first_name  =  "Eduardo" AND last_name  =  "Martins"	store_1

SELECT billing_country ,  AVG ( total )  FROM invoices GROUP BY billing_country	store_1
SELECT billing_country FROM invoices order by total desc  limit 1	store_1
SELECT billing_country , total FROM invoices ORDER BY total DESC LIMIT 10	store_1

SELECT count ( T2.id )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Rock"	store_1
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Rock"	store_1
SELECT avg ( T2.unit_price )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Rock"	store_1
SELECT count ( T2.name )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Jazz"	store_1
SELECT T2.milliseconds FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  "Rock" and T2.name  =  'Balls to the Wall'	store_1

SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  "Movies"	store_1
SELECT id from  playlists WHERE name  =  "Movies"	store_1

SELECT country FROM customers WHERE first_name  =  "Roberto" AND last_name  =  "Almeida"	store_1
SELECT state FROM customers WHERE first_name  =  "Roberto" AND last_name  =  "Almeida"	store_1
SELECT address FROM customers WHERE first_name  =  "Roberto" AND last_name  =  "Almeida"	store_1
SELECT company FROM customers WHERE first_name  =  "Roberto" AND last_name  =  "Almeida"	store_1
SELECT first_name,last_name FROM customers WHERE company  =  "Riotur" AND first_name ! =  "Roberto" AND last_name ! =  "Almeida"	store_1

SELECT count ( * )  FROM invoices	store_1
SELECT sum ( total )  FROM invoices WHERE billing_country  =  "Germany"	store_1
SELECT sum ( total )  FROM invoices WHERE billing_country  =  "Norway"	store_1
SELECT count ( distinct billing_country )  FROM invoices	store_1

SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id  =  T2.track_id JOIN invoices AS T3 ON T3.id  =  T2.invoice_id JOIN customers AS T4 ON T4.id  =  T3.customer_id WHERE T4.first_name  =  "Daan" AND T4.last_name  =  "Peeters"	store_1
select id ,milliseconds from tracks group by id	store_1
select unit_price from tracks	store_1

SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT min ( amount_piad )  FROM claim_headers ) 	insurance_and_eClaims
SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT min ( amount_piad )  FROM claim_headers ) 	insurance_and_eClaims
SELECT t3.Customer_Details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT max ( amount_piad )  FROM claim_headers ) 	insurance_and_eClaims
SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT max ( amount_piad )  FROM claim_headers ) 	insurance_and_eClaims

SELECT count ( Claim_Stage_ID )  from Claims_Processing_Stages	insurance_and_eClaims
SELECT count ( distinct Staff_ID )  from Claims_Processing	insurance_and_eClaims

SELECT count ( * )  from claim_headers	insurance_and_eClaims
SELECT max ( amount_claimed )  from claim_headers	insurance_and_eClaims
SELECT min ( amount_piad )  from claim_headers	insurance_and_eClaims
SELECT date_of_settlement from claim_headers where claim_type_code  =  "Overtime Meal Subsidy"	insurance_and_eClaims

SELECT Policy_ID,Customer_ID,Policy_Type_Code FROM policies	insurance_and_eClaims
SELECT Policy_Type_Code FROM policies	insurance_and_eClaims
SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims

SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.start_date   =    ( SELECT max ( start_date )  FROM policies ) 	insurance_and_eClaims
SELECT customer_details FROM Customers WHERE Customer_ID  =  263	insurance_and_eClaims
SELECT Policy_Type_Code from policies Where customer_id  =  334	insurance_and_eClaims

SELECT count ( * )  FROM customers	insurance_and_eClaims
SELECT count ( customer_details )  FROM customers WHERE customer_details LIKE "%Diana%"	insurance_and_eClaims
SELECT customer_details FROM customers WHERE customer_details LIKE "%Diana%"	insurance_and_eClaims

SELECT sum ( amount_piad )  FROM claim_headers	insurance_and_eClaims
SELECT avg ( amount_piad )  FROM claim_headers	insurance_and_eClaims
SELECT sum ( Amount_Claimed )  FROM claim_headers	insurance_and_eClaims
SELECT date_of_claim from claim_headers order by amount_claimed desc limit 1	insurance_and_eClaims
SELECT date_of_claim from claim_headers order by amount_claimed limit 1	insurance_and_eClaims

SELECT Policy_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   "Dayana Robel"	insurance_and_eClaims
SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   "Dayana Robel"	insurance_and_eClaims
SELECT Start_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   "Dayana Robel"	insurance_and_eClaims
SELECT End_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   "Dayana Robel"	insurance_and_eClaims

SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.policy_type_code   =   "Deputy"	insurance_and_eClaims

SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims
SELECT Policy_Type_Code FROM policies where Customer_ID  =  380	insurance_and_eClaims
SELECT Policy_Type_Code,Start_Date FROM policies where Customer_ID  =  380	insurance_and_eClaims
SELECT Policy_Type_Code,Start_Date,End_Date FROM policies where Customer_ID  =  380	insurance_and_eClaims

select count ( staff_id )  from staff	insurance_and_eClaims
select count ( customer_id )  from Customers	insurance_and_eClaims
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff	insurance_and_eClaims

SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims
SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims
SELECT count ( * )  FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1	insurance_and_eClaims

SELECT customer_details FROM customers	insurance_and_eClaims
SELECT Staff_ID,Staff_Details from staff	insurance_and_eClaims

SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count ( * )   >  2	insurance_and_eClaims
select Start_Date from Policies where Policy_Type_Code  =  'Jurisdiction'	insurance_and_eClaims
select end_Date from Policies where Policy_Type_Code  =  'Deputy'	insurance_and_eClaims

select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id	insurance_and_eClaims
select t2.Customer_ID, t1.Policy_Type_code, t2.Customer_Details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id	insurance_and_eClaims
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.policy_type_code   =   "Deputy" OR t1.policy_type_code   =   "Uniform"	insurance_and_eClaims

SELECT School FROM university WHERE affiliation ! =  'Public'	university_basketball
SELECT School,Founded FROM university WHERE affiliation ! =  'Public'	university_basketball
SELECT School FROM university	university_basketball
SELECT School,Affiliation FROM university	university_basketball

SELECT COUNT ( * )  FROM university WHERE affiliation ! =  'Public'	university_basketball
SELECT school, enrollment FROM university WHERE affiliation ! =  'Public'	university_basketball
SELECT founded FROM university WHERE affiliation ! =  'Public'	university_basketball

SELECT count ( * )  FROM university WHERE affiliation  =  'Public'	university_basketball
SELECT count ( * )  FROM university WHERE affiliation  =  'Public' and enrollment > 20000	university_basketball

SELECT Primary_conference FROM university WHERE School  =  "Lebanon Valley College"	university_basketball
SELECT Nickname FROM university WHERE School  =  "University of Rhode Island"	university_basketball
SELECT location FROM university WHERE Nickname  =  "Fightin Blue Hens"	university_basketball
SELECT school FROM university WHERE founded  >  1850 OR affiliation   =   'Public'	university_basketball

SELECT school FROM university ORDER BY founded LIMIT 1	university_basketball
SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1	university_basketball

SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'	university_basketball
SELECT t2.All_Home FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'	university_basketball
SELECT t2.All_Road FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'	university_basketball
SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'	university_basketball
SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Duke'	university_basketball

SELECT team_id, acc_percent FROM basketball_match	university_basketball
SELECT acc_percent FROM basketball_match order by acc_percent limit 1	university_basketball
SELECT acc_percent FROM basketball_match order by acc_percent desc limit 1	university_basketball

SELECT Location FROM University	university_basketball
SELECT School FROM University	university_basketball
SELECT count ( * )  FROM University WHERE Location LIKE "%NY%"	university_basketball

SELECT count ( * )  from university	university_basketball
SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent DESC LIMIT 1	university_basketball
SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent LIMIT 1	university_basketball
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent LIMIT 1	university_basketball

SELECT school FROM university ORDER BY enrollment DESC LIMIT 1	university_basketball
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1	university_basketball
SELECT location FROM university ORDER BY enrollment DESC LIMIT 1	university_basketball
SELECT enrollment FROM university ORDER BY enrollment DESC LIMIT 1	university_basketball
SELECT nickname FROM university ORDER BY enrollment DESC LIMIT 1	university_basketball

SELECT T1.name  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * )  DESC LIMIT 1	flight_4
SELECT  T1.city  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * )  DESC LIMIT 1	flight_4

SELECT city FROM airports GROUP BY city HAVING count ( * )    =   2	flight_4
SELECT name FROM airports where country  = 'Papua New Guinea'	flight_4
SELECT elevation FROM airports where name  = 'Madang Airport'	flight_4
SELECT elevation FROM airports where name  = 'Goroka Airport'	flight_4

SELECT name from airports where city  = 'Mount Hagen'	flight_4
SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'	flight_4
SELECT count ( * )  from airlines where active  =  'Y'	flight_4
SELECT elevation from airports where name  =  'Madang Airport'	flight_4

SELECT rid FROM routes WHERE dst_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' )  AND src_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' ) 	flight_4

SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  ASC LIMIT 1	flight_4
SELECT DISTINCT ( COUNT ( name )  )  FROM airports	flight_4
SELECT COUNT ( DISTINCT country )  FROM airports	flight_4

select count ( * )  from airports	flight_4
select name from airports	flight_4
select count ( distinct city )  from airports	flight_4

SELECT country FROM airlines	flight_4
SELECT country FROM airlines WHERE active   =   'Y' GROUP BY country ORDER BY count ( * )  DESC LIMIT 1	flight_4
SELECT COUNT ( * )  FROM airlines WHERE active   =   'Y' AND country  =  "United States"	flight_4

SELECT name  FROM airports ORDER BY elevation LIMIT 1	flight_4
SELECT city  FROM airports ORDER BY elevation LIMIT 1	flight_4
SELECT country FROM airports ORDER BY elevation LIMIT 1	flight_4
SELECT elevation FROM airports where name  =  "Bar Yehuda Airfield"	flight_4

SELECT city FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  3	flight_4
SELECT city FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  4	flight_4
SELECT name FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  4	flight_4
SELECT name FROM airports WHERE elevation > 4000	flight_4
SELECT name FROM airports WHERE elevation > 5000	flight_4

SELECT elevation FROM airports WHERE name  =  "Goroka Airport"	flight_4
SELECT count ( * )  FROM routes WHERE dst_apid IN  ( SELECT apid FROM airports WHERE country   =   'Canada' )  AND src_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' ) 	flight_4

SELECT dst_apid,dst_ap FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'	flight_4
SELECT * FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'	flight_4
SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'	flight_4

SELECT T2.src_apid,T2.src_ap,T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name	flight_4
SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name	flight_4
SELECT  T1.name, count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name	flight_4

SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid WHERE T2.country   =   'Italy'	flight_4
SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'	flight_4
SELECT t1.src_ap FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'	flight_4

SELECT count ( * )  FROM airlines	flight_4
SELECT * FROM airlines WHERE name LIKE 'Private%'	flight_4

SELECT city FROM airports GROUP BY city HAVING count ( * )   >  1	flight_4
SELECT city ,  count ( * )  FROM airports GROUP BY city HAVING count ( * )   >  1	flight_4
SELECT city FROM airports GROUP BY city HAVING count ( * )    =   3	flight_4
SELECT city FROM airports GROUP BY city HAVING count ( * )    > =   4	flight_4
SELECT city, count ( * )  FROM airports GROUP BY city HAVING count ( * )    > =   4	flight_4

SELECT count ( * )  FROM airports WHERE name LIKE '%International%'	flight_4
SELECT country FROM airports GROUP BY country ORDER BY count ( * )  DESC LIMIT 1	flight_4
SELECT max ( elevation )  FROM airports	flight_4
SELECT min ( elevation )  FROM airports	flight_4
SELECT country FROM airports WHERE elevation  =   ( SELECT min ( elevation )  FROM airports ) 	flight_4

SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2	flight_4
SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'	flight_4

select name from airlines	flight_4
select count ( * )  from routes AS T1 JOIN airlines AS T2 ON T2.alid  =  T1.alid WHERE T2.country = 'United States'	flight_4
SELECT T1.country , T1.name , count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country , T1.name	flight_4

SELECT country FROM airports ORDER BY elevation DESC LIMIT 1	flight_4
SELECT city FROM airports ORDER BY elevation DESC LIMIT 1	flight_4
SELECT elevation FROM airports ORDER BY elevation DESC LIMIT 1	flight_4

SELECT first_name FROM customer WHERE customer_id IN  (  SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01'  ) 	sakila_1
SELECT first_name FROM customer WHERE customer_id IN (  SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01'  )  AND active  =  1	sakila_1

SELECT last_name FROM customer WHERE customer_id  = 1	sakila_1
SELECT inventory_id FROM rental WHERE rental_id  = 3	sakila_1
SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id   =   T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1	sakila_1

SELECT count ( * )  from film	sakila_1
SELECT min ( release_year ) , max ( release_year )  from film	sakila_1
SELECT min ( rental_rate ) , max ( rental_rate )  from film	sakila_1
SELECT T2.title  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT T2.film_id  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT T2.description  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1

SELECT amount FROM payment ORDER BY amount DESC LIMIT 1	sakila_1
SELECT amount,payment_id,customer_id FROM payment ORDER BY amount DESC LIMIT 1	sakila_1
SELECT payment_id FROM payment where amount>5  ORDER BY last_update DESC LIMIT 1	sakila_1

SELECT title FROM film WHERE film_id = 1	sakila_1
SELECT film_id FROM film WHERE LENGTH > 100	sakila_1
SELECT title FROM film  WHERE release_year = 2006	sakila_1
SELECT title FROM film  EXCEPT SELECT title FROM film WHERE replacement_cost > 200	sakila_1

SELECT * FROM film WHERE special_features LIKE '%Deleted Scenes%'	sakila_1
SELECT count ( * )  FROM film WHERE special_features LIKE '%Deleted Scenes%'	sakila_1
SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'	sakila_1

SELECT  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT T1.description, T1.rating,T1.special_features FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1

SELECT district FROM address	sakila_1
SELECT district FROM address GROUP BY district HAVING count ( * )   > =   2	sakila_1

SELECT first_name FROM customer WHERE customer_id IN (  SELECT customer_id FROM rental WHERE rental_date  < =   '2005-08-23 00:00:00'  ) 	sakila_1
SELECT customer_id FROM customer WHERE customer_id NOT IN (  SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01'  ) 	sakila_1
SELECT first_name FROM customer WHERE customer_id NOT IN (  SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01'  ) 	sakila_1

SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count ( * )  DESC LIMIT 1	sakila_1

select count ( * )  from  ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )   >  1 ) 	sakila_1
select count ( * )  from  ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )    > =    3 ) 	sakila_1
SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )    > =    3	sakila_1

SELECT T2.city FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT COUNT ( * )  FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT T2.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1	sakila_1
SELECT address FROM address WHERE address LIKE "%S%"	sakila_1

SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T3.title   =   'HUNGER ROOF'	sakila_1
SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   "Foreign"	sakila_1
SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   "Foreign" and T3.special_features  =  "Deleted Scenes"	sakila_1
SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   "Foreign" and T3.special_features  =  "Trailers"	sakila_1
SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   "Foreign" and T3.special_features  =  "Action"	sakila_1

SELECT title FROM film WHERE LENGTH  >  100	sakila_1
SELECT title FROM film WHERE LENGTH  < =   100	sakila_1
SELECT title FROM film WHERE rating   =   'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200	sakila_1

SELECT amount FROM payment ORDER BY amount DESC LIMIT 1	sakila_1
SELECT avg ( amount )  FROM payment	sakila_1

SELECT title FROM film WHERE rental_rate  =  0.99	sakila_1
SELECT title FROM film  ORDER BY rental_rate DESC LIMIT 1	sakila_1
SELECT title  FROM film  INTERSECT SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count ( * )  < 3	sakila_1

SELECT Market_Rate  FROM furniture WHERE name  =  "Chabudai"	manufacturer
SELECT T2.Price_in_Dollar  FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID  =  T2.Furniture_ID  WHERE T1.name  =  "Chabudai"	manufacturer
SELECT T2.Manufacturer_ID  FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID  =  T2.Furniture_ID  WHERE T1.name  =  "Chabudai"	manufacturer

SELECT t1.Name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1	manufacturer
SELECT Manufacturer_ID FROM manufacturer where name  =  'Tomorrow'	manufacturer
SELECT Num_of_Shops FROM manufacturer where name  =  'Tomorrow'	manufacturer

SELECT name FROM furniture where Num_of_Component < 6	manufacturer
SELECT name FROM furniture where Num_of_Component > 10	manufacturer

SELECT sum ( market_rate )  FROM furniture	manufacturer

SELECT COUNT ( * )  FROM teacher	course_teach
SELECT COUNT ( * )  FROM course_arrange	course_teach
SELECT T2.Name , COUNT ( * )  FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name	course_teach
SELECT Name , age FROM teacher	course_teach

SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id   =   T2.address_id WHERE T2.country   =   'Haiti'	student_transcripts_tracking
SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'	student_transcripts_tracking
SELECT T1.last_name, * FROM Students as T1 join addresses as T2 on T1.current_address_id  =  T2.address_id WHERE T1.cell_mobile_number  =  '09700166582'	student_transcripts_tracking
SELECT email_address FROM Students where cell_mobile_number  =  '09700166582'	student_transcripts_tracking

SELECT count ( * )  FROM Students	student_transcripts_tracking
SELECT first_name,middle_name,last_name  FROM Students	student_transcripts_tracking
SELECT date_first_registered  FROM Students	student_transcripts_tracking

SELECT count ( * )  FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'	student_transcripts_tracking
SELECT t1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'	student_transcripts_tracking
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  9	student_transcripts_tracking
SELECT DISTINCT t1.first_name, t1.middle_name, t1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE t1.student_id  =  7	student_transcripts_tracking
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name, T3.degree_summary_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'	student_transcripts_tracking
SELECT DISTINCT T3.degree_summary_description FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id	student_transcripts_tracking
SELECT DISTINCT T1.student_ID FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'	student_transcripts_tracking
SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id   =   T3.degree_program_id WHERE T3.degree_summary_name   =   'Bachelor'	student_transcripts_tracking

SELECT degree_program_id from Student_Enrolment	student_transcripts_tracking
SELECT semester_id from Student_Enrolment	student_transcripts_tracking
SELECT semester_name from semesters	student_transcripts_tracking
SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id   =   T2.semester_id GROUP BY T1.semester_id ORDER BY count ( * )  DESC LIMIT 1	student_transcripts_tracking

SELECT distinct semester_name FROM Semesters	student_transcripts_tracking
SELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 	student_transcripts_tracking
SELECT semester_id,semester_name,semester_description FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 	student_transcripts_tracking

SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2	student_transcripts_tracking
SELECT T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING count ( * )    =   2	student_transcripts_tracking
SELECT email_address FROM Students where student_id  =  4	student_transcripts_tracking
SELECT date_first_registered FROM Students where first_name  =  'Timmothy' and middle_name  =  'Anna' and last_name  =  'Ward'	student_transcripts_tracking

SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id WHERE degree_summary_name   =   'Master'	student_transcripts_tracking
SELECT T1.degree_summary_description FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE T2.student_id  =  14	student_transcripts_tracking

SELECT count ( * )  FROM Students	student_transcripts_tracking
SELECT first_name FROM Students where student_id = 3	student_transcripts_tracking
SELECT email_address FROM Students where student_id = 2	student_transcripts_tracking
SELECT count ( * )  FROM Student_Enrolment	student_transcripts_tracking

SELECT count ( * )  FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'	student_transcripts_tracking
SELECT T1.first_name,T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'	student_transcripts_tracking
SELECT T1.first_name, T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT T3.first_name, T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id	student_transcripts_tracking

SELECT transcript_id FROM Transcripts ORDER BY transcript_date DESC LIMIT 1	student_transcripts_tracking
SELECT transcript_date FROM Transcripts WHERE transcript_id  =  5	student_transcripts_tracking

SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2	student_transcripts_tracking
SELECT T2.other_details FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2	student_transcripts_tracking
SELECT T2.transcript_date FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id   =   T2.transcript_id GROUP BY T1.transcript_id HAVING count ( * )    > =    2	student_transcripts_tracking

SELECT T1.semester_name, count ( * )  from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id	student_transcripts_tracking
SELECT T1.semester_name from semesters as T1 join student_enrolment as T2 on T1.semester_id  =  T2.semester_id group by T2.semester_id order by count ( * )  desc limit 1	student_transcripts_tracking
SELECT student_enrolment_id, degree_program_id from  Student_Enrolment	student_transcripts_tracking
sELECT semester_name FROM Semesters WHERE semester_id NOT IN (  SELECT semester_id FROM Student_Enrolment  ) 	student_transcripts_tracking

SELECT department_name FROM Departments WHERE department_name LIKE '%computer%'	student_transcripts_tracking
SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'	student_transcripts_tracking
SELECT department_id FROM Departments WHERE department_name LIKE '%computer%'	student_transcripts_tracking
SELECT other_details FROM Departments WHERE department_name  =  "history"	student_transcripts_tracking

SELECT transcript_date FROM Transcripts group by transcript_date order by count ( * )  asc limit 1	student_transcripts_tracking
SELECT count ( * )  FROM Transcripts Where transcript_date  =  "1975-05-06 12:04:47"	student_transcripts_tracking
SELECT transcript_date FROM Transcripts GROUP BY transcript_date ORDER BY count ( * )  desc limit 1	student_transcripts_tracking

select transcript_date from Transcripts	student_transcripts_tracking
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1	student_transcripts_tracking
SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1	student_transcripts_tracking

SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1	student_transcripts_tracking
SELECT T1.degree_program_id  FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  DESC LIMIT 1	student_transcripts_tracking
SELECT COUNT ( * )  FROM Student_Enrolment WHERE degree_program_id  =  "9"	student_transcripts_tracking
SELECT COUNT ( * )  FROM Degree_Programs WHERE degree_summary_name  =  "Master" AND degree_program_id  =  "9"	student_transcripts_tracking
SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count ( * )  limit 1	student_transcripts_tracking
SELECT COUNT ( * )  FROM Student_Enrolment where degree_program_id  =  "3"	student_transcripts_tracking

SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id   =   T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count ( * )  DESC LIMIT 1	student_transcripts_tracking
SELECT degree_program_id from Degree_Programs where degree_summary_description  =  'architecto'	student_transcripts_tracking

SELECT T2.degree_program_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T1.first_name  =  "Timmothy"	student_transcripts_tracking
SELECT date_first_registered, date_left FROM Students WHERE first_name  =  "Timmothy"	student_transcripts_tracking
SELECT middle_name FROM Students WHERE email_address  =  "johns.unique@example.net"	student_transcripts_tracking

SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'	student_transcripts_tracking
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina'	student_transcripts_tracking
SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id	student_transcripts_tracking
SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id   =   T2.address_id WHERE T2.state_province_county   =   'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id   =   T4.student_id	student_transcripts_tracking

select name from club	sports_competition
select name from club where Club_ID = '3'	sports_competition
select Region from club where name = 'BK Slide'	sports_competition
SELECT name FROM CLub WHERE Club_ID NOT IN  ( SELECT Club_ID FROM player ) 	sports_competition

SELECT name, club_id FROM CLub	sports_competition
SELECT player_id, name, club_id FROM player	sports_competition
SELECT name FROM CLub WHERE Club_ID NOT IN  ( SELECT Club_ID FROM player ) 	sports_competition

SELECT name FROM player WHERE points  >   ( SELECT avg ( points )  FROM player ) 	sports_competition
SELECT name FROM player where Points  =   ( SELECT MAX ( Points )  FROM player ) 	sports_competition
SELECT name FROM player where Points  =   ( SELECT MAX ( Points )  FROM player ) 	sports_competition

SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly'	sports_competition

SELECT DISTINCT ( competition_type )  FROM competition	sports_competition
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * )    > =    5	sports_competition
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * )   < =   5	sports_competition

SELECT country FROM competition WHERE competition_type   =   'Tournament' GROUP BY country ORDER BY count ( * )  DESC LIMIT 1	sports_competition
SELECT country FROM competition WHERE competition_type   =   'Tournament' GROUP BY country ORDER BY count ( * )  asc LIMIT 1	sports_competition
SELECT Competition_type FROM competition WHERE country  =  "Russia"	sports_competition

SELECT * FROM player WHERE Points > 20	sports_competition
SELECT Position FROM player WHERE Points > 20	sports_competition
SELECT Name FROM player WHERE Points > 20	sports_competition
SELECT Name FROM player WHERE Points  =   ( Select max ( Points )  FROM player ) 	sports_competition

SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly'	sports_competition
select count ( * )  from  ( SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly' ) 	sports_competition

SELECT Author FROM submission	workshop_paper
SELECT distinct T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID   =   T2.Submission_ID	workshop_paper
SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID   =   T2.Submission_ID GROUP BY T2.Author HAVING COUNT ( DISTINCT T1.workshop_id )   >  1	workshop_paper

SELECT branch_id FROM membership_register_branch	shop_membership
SELECT membership_amount FROM branch where Name  =  'Popert'	shop_membership
SELECT city FROM branch where name  =  'Alexandre'	shop_membership

SELECT Name FROM branch	shop_membership
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Louisville, Kentucky'	shop_membership
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Hiram ,  Georgia'	shop_membership

SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year   =   2016 GROUP BY T2.branch_id ORDER BY count ( * )  DESC LIMIT 1	shop_membership
SELECT T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year   =   2016 GROUP BY T2.branch_id ORDER BY count ( * )  DESC LIMIT 1	shop_membership
SELECT name, membership_amount FROM branch where membership_amount  =   ( select min ( membership_amount )  from branch where open_year like "%2017%" ) 	shop_membership
SELECT name, open_year FROM branch where open_year  =   ( select min ( open_year )  from branch ) 	shop_membership

SELECT count ( Name )   FROM branch	shop_membership
SELECT sum ( membership_amount )   FROM branch	shop_membership
SELECT membership_amount FROM branch  order by membership_amount desc limit  1	shop_membership
SELECT min ( membership_amount )  FROM branch	shop_membership

SELECT min ( membership_amount )  FROM branch WHERE open_year   =   2011 OR city   =   'London'	shop_membership
SELECT max ( membership_amount )  FROM branch WHERE open_year   =   2011 OR city   =   'London'	shop_membership

SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1	shop_membership
select Member_ID from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1 ) 	shop_membership
select Name from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1 ) 	shop_membership
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1	shop_membership
select member_id from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1 ) 	shop_membership
select name from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1 ) 	shop_membership

SELECT T1.register_year FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.name = "Jeremy Jarmon"	shop_membership
SELECT Card_Number FROM member where name = 'Corey Peters'	shop_membership
SELECT Hometown FROM member where name = 'Myron Pryor'	shop_membership
SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T1.register_year   =   2016	shop_membership

SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   6	shop_membership
SELECT T2.Name FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id group by T1.member_id order by count ( * )  desc limit 2	shop_membership
SELECT hometown from member where name  =  "Myron Pryor"	shop_membership
SELECT t2.branch_id from member as t1 join purchase as t2 on t1.member_id  =  t2.member_id where name  =  "Myron Pryor"	shop_membership

SELECT name FROM member WHERE member_id IN  ( SELECT member_id FROM membership_register_branch ) 	shop_membership
SELECT name FROM member WHERE member_id NOT IN  ( SELECT member_id FROM membership_register_branch ) 	shop_membership
SELECT count ( distinct branch_id )  FROM membership_register_branch	shop_membership

SELECT Name FROM branch ORDER BY membership_amount ASC LIMIT 1	shop_membership
SELECT Open_year FROM branch WHERE Branch_ID = 3	shop_membership
SELECT open_year FROM branch GROUP BY open_year HAVING count ( * )    > =    2	shop_membership

SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3	shop_membership
SELECT membership_amount FROM branch ORDER BY membership_amount DESC LIMIT 3	shop_membership
SELECT Open_year FROM branch ORDER BY membership_amount DESC LIMIT 3	shop_membership
SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 3	shop_membership
SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 1	shop_membership

SELECT city ,  count ( * )  FROM branch WHERE open_year  <  2010 GROUP BY city	shop_membership
SELECT open_year FROM branch WHERE open_year  <  2010	shop_membership
SELECT name FROM branch WHERE open_year  <  2010	shop_membership

SELECT distinct city FROM branch	shop_membership
SELECT count ( branch_id )  FROM branch where city  =  'London'	shop_membership
SELECT count ( Branch_ID )  FROM branch WHERE city  = 'Oxford'	shop_membership

SELECT Name FROM member WHERE Hometown LIKE "%Kentucky%"	shop_membership
SELECT Card_Number FROM member	shop_membership
SELECT COUNT ( * )  FROM member	shop_membership

SELECT T1.member_id, count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id group by T1.member_id	shop_membership
SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   5	shop_membership
SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   6	shop_membership

SELECT Draft_Class from match_season WHERE season  =  1996.0	match_season
SELECT Draft_Pick_Number from match_season WHERE season  =  "1998.0" AND country  =  "6"	match_season
SELECT player from match_season WHERE season  =  "1996.0" AND team  =  "1"	match_season
SELECT College FROM match_season WHERE POSITION   =   "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION   =   "Defender"	match_season

SELECT count ( distinct Official_native_language )  FROM country	match_season
SELECT count ( distinct Official_native_language )  FROM country WHERE Official_native_language LIKE "%English%"	match_season
SELECT Official_native_language FROM country WHERE Official_native_language LIKE "%English%"	match_season

SELECT capital from country where country_name  =  "Indonesia"	match_season
SELECT capital from country where country_name  =  "Iran"	match_season
SELECT count ( DISTINCT T1.Official_native_language )  FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id   =   T2.Country WHERE T2.Position   =   "Defender"	match_season

SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team   =   T2.Team_id WHERE T2.Name   =   "Columbus Crew"	match_season
SELECT singles_WL from player where player like "%Hong%"	match_season

SELECT country_name, country_id FROM country where Capital   =   "Dublin"	match_season
SELECT position FROM match_season where country  =  4	match_season
SELECT player FROM match_season where country  =  4	match_season
SELECT T1.player FROM match_season as T1 join country as T2 on T1.country  =  T2.country_id where T2.country_name  =   "Iraq"	match_season

SELECT count ( * )  FROM Friend	network_1
SELECT avg ( grade )  FROM Highschooler	network_1
SELECT DISTINCT name  FROM Highschooler	network_1

select student_id from Friend	network_1

SELECT count ( * )  FROM Highschooler	network_1
SELECT avg ( grade )  FROM Highschooler	network_1
SELECT grade FROM Highschooler order by grade desc limit 1	network_1
SELECT grade FROM Highschooler order by grade limit 1	network_1

SELECT student_id, friend_id FROM Friend	network_1
SELECT id FROM Highschooler	network_1
SELECT count ( id )  FROM Highschooler	network_1
SELECT count ( distinct friend_id )  FROM Friend	network_1
SELECT id FROM Highschooler EXCEPT SELECT friend_id FROM Friend	network_1
SELECT name, grade FROM Highschooler where id  =  1510	network_1

SELECT name FROM Highschooler	network_1
SELECT count ( * )  from  Likes  group by student_id order by  count ( * )  desc limit  1	network_1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count ( * )  DESC limit 1	network_1

SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    2	network_1
SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1	network_1
SELECT T2.id FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id   =   T2.id GROUP BY T1.student_id HAVING count ( * )    > =    1	network_1

SELECT AVG ( grade )  FROM Highschooler	network_1
SELECT AVG ( grade )  FROM Highschooler	network_1
SELECT MAX ( grade )  FROM Highschooler	network_1

select count ( * )  from highschooler	network_1
SELECT count ( * )  FROM highschooler WHERE grade   =   9	network_1
SELECT grade from highschooler where name  =  "Kyle"	network_1

SELECT grade FROM Highschooler GROUP BY grade ORDER BY count ( * )  DESC LIMIT 1	network_1
SELECT name FROM Highschooler WHERE grade  =  9	network_1
SELECT grade FROM Highschooler WHERE name  =  "Tiffany"	network_1
SELECT count ( * )  FROM Highschooler WHERE grade  =  9	network_1
SELECT grade FROM Highschooler WHERE name  =  "Gabriel" AND ID  =  1689	network_1
SELECT ID FROM Highschooler WHERE name  =  "Tiffany"	network_1
SELECT name FROM Highschooler WHERE ID  =  1510	network_1

select name from highschooler	network_1
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"	network_1
SELECT id FROM highschooler where name  =  "Kyle"	network_1
SELECT name FROM highschooler where id  =  1709	network_1
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Jordan"	network_1
SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Gabriel"	network_1

SELECT count ( * )  FROM Likes	network_1
SELECT count ( * )  FROM friend	network_1
SELECT student_id FROM friend where friend_id  =  1689	network_1

SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT count ( * )  FROM Employees where role_code  =  "ED"	cre_Doc_Tracking_DB
SELECT employee_name,gender_MFU FROM Employees where role_code  =  "ED"	cre_Doc_Tracking_DB

SELECT count ( * )  from all_documents where document_name   =   "Robin CV"	cre_Doc_Tracking_DB
SELECT document_id from all_documents where document_name   =   "Robin CV"	cre_Doc_Tracking_DB
SELECT T2.Date_in_Location_From from all_documents as T1 join Document_Locations as T2 on T1.document_id  =  T2.document_id where T1.document_name   =   "Robin CV"	cre_Doc_Tracking_DB
SELECT T2.Date_in_Locaton_To from all_documents as T1 join Document_Locations as T2 on T1.document_id  =  T2.document_id where T1.document_name   =   "Robin CV"	cre_Doc_Tracking_DB

SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed	cre_Doc_Tracking_DB
SELECT employee_name FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 	cre_Doc_Tracking_DB
SELECT Role_Code FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 	cre_Doc_Tracking_DB
SELECT date_of_birth FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 	cre_Doc_Tracking_DB

SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT count ( * )  from document_locations where Location_Code  =  'x'	cre_Doc_Tracking_DB
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  LIMIT 1	cre_Doc_Tracking_DB

SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   "Human Resource"	cre_Doc_Tracking_DB
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   "Human Resource"	cre_Doc_Tracking_DB
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE  T2.role_name   =   "Manager"	cre_Doc_Tracking_DB
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE  T2.role_name   =   "Human Resource"	cre_Doc_Tracking_DB

SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  DESC LIMIT 1	cre_Doc_Tracking_DB
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  asc LIMIT 1	cre_Doc_Tracking_DB
select location_code from Document_Locations order by Date_in_Location_From desc limit 1	cre_Doc_Tracking_DB

SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   "Editor"	cre_Doc_Tracking_DB
SELECT role_code,role_name FROM ROLES	cre_Doc_Tracking_DB
SELECT Employee_ID,Role_Code FROM Employees	cre_Doc_Tracking_DB
SELECT Role_Code,Role_Description FROM Roles	cre_Doc_Tracking_DB

SELECT distinct location_code FROM Document_locations	cre_Doc_Tracking_DB
SELECT distinct document_id FROM Document_locations	cre_Doc_Tracking_DB
SELECT Date_in_Location_From FROM Document_locations WHERE Document_ID = '81'	cre_Doc_Tracking_DB

SELECT location_name FROM Ref_Locations	cre_Doc_Tracking_DB
SELECT Date_in_Locaton_To FROM Document_Locations	cre_Doc_Tracking_DB
SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code   =   T2.location_code GROUP BY T1.location_code ORDER BY count ( * )  ASC LIMIT 1	cre_Doc_Tracking_DB

SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * )  ASC LIMIT 1	cre_Docs_and_Epenses
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses
SELECT Document_Date  FROM Documents where Document_ID = 105	cre_Docs_and_Epenses

select count ( * )  from documents	cre_Docs_and_Epenses
SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name   =   'Noel CV'	cre_Docs_and_Epenses
SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name   =   'King Book'	cre_Docs_and_Epenses

SELECT document_name  FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'	cre_Docs_and_Epenses
SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'	cre_Docs_and_Epenses
SELECT Document_Description FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'	cre_Docs_and_Epenses

SELECT count ( * )  FROM Documents WHERE document_id NOT IN  (  SELECT document_id FROM Documents_with_expenses  ) 	cre_Docs_and_Epenses
SELECT Budget_type_code FROM Documents_with_Expenses	cre_Docs_and_Epenses

SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   "Government"	cre_Docs_and_Epenses
SELECT T1.Document_Details FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   "Government"	cre_Docs_and_Epenses
SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   "Organisation"	cre_Docs_and_Epenses
SELECT T2.Budget_Type_Code FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   "Organisation"	cre_Docs_and_Epenses
SELECT Document_Details FROM Documents_with_expenses order by Document_ID desc limit 1	cre_Docs_and_Epenses

SELECT Account_details FROM Accounts order by Account_details desc limit 1	cre_Docs_and_Epenses
SELECT Account_details FROM Accounts WHERE Account_details LIKE "%5%"	cre_Docs_and_Epenses
SELECT Statement_ID FROM  Accounts WHERE Account_details LIKE "%5%"	cre_Docs_and_Epenses
SELECT Account_details FROM Accounts WHERE Account_details LIKE "%9%"	cre_Docs_and_Epenses
SELECT Account_ID FROM Accounts WHERE Account_details LIKE "%9%"	cre_Docs_and_Epenses

SELECT document_type_code from documents where project_id  =  30	cre_Docs_and_Epenses
SELECT statement_details from statements where statement_id  =  197	cre_Docs_and_Epenses
SELECT document_name from documents where document_id  =  42	cre_Docs_and_Epenses
SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id   =   T2.document_id WHERE T1.statement_details   =   'Private Project'	cre_Docs_and_Epenses

select Project_ID from Projects	cre_Docs_and_Epenses
select Project_ID,Project_Details from Projects	cre_Docs_and_Epenses
SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count ( * )  > 2	cre_Docs_and_Epenses

SELECT T1.statement_id FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses
SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses

SELECT count ( * )  FROM Documents where Document_Type_Code  =  "BK"	cre_Docs_and_Epenses
SELECT count ( * )  FROM Documents where Document_Type_Code  =  "CV"	cre_Docs_and_Epenses

SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT T1.Document_Type_Code FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT T1.Project_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'	cre_Docs_and_Epenses
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%a%'	cre_Docs_and_Epenses

SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses
SELECT count ( Account_ID )  from accounts	cre_Docs_and_Epenses
SELECT Statement_Details from Statements where Statement_ID = '57'	cre_Docs_and_Epenses
SELECT Account_Details from accounts where Account_ID = 61	cre_Docs_and_Epenses

SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'	cre_Docs_and_Epenses
SELECT document_name FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project' order by document_date limit 1	cre_Docs_and_Epenses
SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project' order by document_date limit 1	cre_Docs_and_Epenses

SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses
SELECT Document_Details FROM Documents_with_expenses GROUP BY Document_Details ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * )  DESC LIMIT 1	cre_Docs_and_Epenses

select count ( Location )  from shop where Open_Year = '2008'	device
select count ( Location )  from shop where Open_Year>'2012'	device
select Location from shop where Open_Year>'2012'	device

SELECT count ( Device_ID )  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID where Shop_Name = 'Dinas Device'	device
SELECT count ( Device_ID )  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID where Shop_Name = 'Best Buy'	device
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * )  DESC LIMIT 1	device
SELECT T2.Shop_Name,Location  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * )  DESC LIMIT 1	device

SELECT Shop_Name FROM shop	device
SELECT T2.Shop_Name,T1.Quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID	device
SELECT T2.Shop_Name,T1.quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1	device

SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1	device
SELECT T2.location FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1	device
SELECT T2.shop_id FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1	device

select open_year from shop order by open_year	device
SELECT location FROM shop group by location having count ( * )  > 1	device
SELECT shop_name FROM shop WHERE Open_Year  >  2012 or  Open_Year  <  2008	device

SELECT name FROM building	protein_institute
SELECT T1.name ,  count ( * )  FROM building AS T1 JOIN institution AS T2 ON T1.building_id   =   T2.building_id GROUP BY T1.building_id	protein_institute
SELECT Name FROM building ORDER BY Height_feet DESC LIMIT 1	protein_institute

SELECT institution from institution where founded = 2003	protein_institute
SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id  =  T2.building_id WHERE T2.founded > 2003	protein_institute
SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id  =  T2.building_id WHERE T2.founded < 2003	protein_institute

SELECT count ( * )  from  Institution	protein_institute
SELECT count ( * )  from building	protein_institute
select count ( distinct team )  from institution	protein_institute

SELECT name FROM building	protein_institute
SELECT name FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) 	protein_institute
SELECT floors FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) 	protein_institute
SELECT name FROM building WHERE building_id NOT IN  ( SELECT building_id FROM institution ) 	protein_institute
select Street_address from building where name  =  "Bank of America Tower"	protein_institute
SELECT name, street_address FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) 	protein_institute

SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1	protein_institute
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  ASC LIMIT 1	protein_institute
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1	protein_institute

SELECT max ( year )  FROM PersonFriend	network_2
SELECT name from personfriend where year  =   ( select max ( year )  FROM PersonFriend  ) 	network_2
SELECT friend from personfriend where name  =  "Zach" and year  =  12	network_2

SELECT count ( friend )  from PersonFriend  where name = 'Zach'	network_2
SELECT name,friend,year from PersonFriend  where name = 'Zach'	network_2
SELECT t1.name,friend,year,age from PersonFriend as t1 join  Person as t2 on t1.friend = t2.name where t1.name = 'Zach'	network_2
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name  =   'Zach' AND T2.year   =    ( SELECT max ( YEAR )  FROM PersonFriend WHERE name  =   'Zach' ) 	network_2
SELECT job FROM Person  WHERE name  =   'Dan'	network_2
SELECT age FROM Person  WHERE name  =   'Dan'	network_2

SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name  =   'Zach' AND T2.year   =    ( SELECT max ( YEAR )  FROM PersonFriend WHERE name  =   'Zach' ) 	network_2
SELECT age FROM Person where name  =  "Dan"	network_2
SELECT city from Person where name = 'Zach'	network_2
SELECT age from Person where name = 'Zach'	network_2
SELECT job from Person where name = 'Zach'	network_2

SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend  =   'Alice'	network_2
SELECT job from person where name  =  "Zach"	network_2
SELECT age from person where name  =  "Zach"	network_2
SELECT year from personfriend where friend  =  "Alice" and name  =  "Zach"	network_2

SELECT count ( * )  FROM Person	network_2
SELECT age FROM Person where name = 'Bob'	network_2
SELECT city FROM Person where name = 'Alice'	network_2

SELECT name FROM Person WHERE gender   =   'male'	network_2
SELECT age FROM Person WHERE name   =   'Bob'	network_2
SELECT name FROM Person WHERE job   =   'doctor'	network_2

SELECT count ( * )  FROM Person	network_2
SELECT name FROM Person order  by age limit 1	network_2
SELECT count ( * )  FROM Person WHERE age  >  30 AND job   =   'engineer'	network_2
SELECT count ( * )  FROM Person WHERE gender = 'female'	network_2

SELECT name FROM Person	network_2
SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'	network_2

SELECT count ( * )  FROM PersonFriend where name  =  'Alice'	network_2
SELECT friend from personfriend where name  =  "Alice"	network_2
SELECT friend from personfriend where name  =  "Bob"	network_2
SELECT gender from person where name  =  "Zach"	network_2

SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'	network_2
SELECT * FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach'	network_2
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob' and T1.name ! =  "Alice" and T1.name ! =  "Zach"	network_2

select city from person where name  =  "Alice"	network_2
SELECT count ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'male'	network_2
SELECT job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'male'	network_2

SELECT Name FROM Person ORDER BY AGE DESC LIMIT 1	network_2
SELECT count ( T2.friend )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice'	network_2
SELECT count ( T2.friend )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'female'	network_2

SELECT name FROM person EXCEPT SELECT name FROM PersonFriend	network_2
SELECT job FROM person WHERE name  =  'Zach'	network_2

SELECT avg ( age )  FROM Person WHERE gender   =   'male'	network_2
SELECT job FROM Person WHERE gender   =   'male'	network_2
SELECT avg ( age )  ,  job FROM Person WHERE gender   =   'male' GROUP BY job	network_2

SELECT COUNT ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age  >  40 ) 	network_2
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age  >  40 ) 	network_2

SELECT count ( * )  FROM Person WHERE job  =  "student"	network_2
SELECT count ( * )  FROM Person WHERE job ! =  "student"	network_2
SELECT name FROM Person WHERE job ! =  "student"	network_2
SELECT name FROM Person WHERE job ! =  "student"	network_2
SELECT count ( * )  FROM Person WHERE age  >  30 AND job   =   'engineer'	network_2

SELECT name FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) 	network_2
SELECT age FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) 	network_2
SELECT job  FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) 	network_2

SELECT name FROM PersonFriend GROUP BY name HAVING count ( * )    =   1	network_2
SELECT count ( * )  FROM PersonFriend where friend = 'Alice'	network_2
SELECT count ( * )  FROM PersonFriend where friend = 'Bob'	network_2
SELECT friend FROM PersonFriend where name = 'Bob'	network_2
SELECT friend FROM PersonFriend where name = 'Zach'	network_2
SELECT count ( distinct name )  FROM PersonFriend	network_2
SELECT count ( distinct friend )  FROM PersonFriend	network_2

SELECT DISTINCT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan'	network_2
SELECT DISTINCT T1.name, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan'	network_2

SELECT count ( * )  FROM Person WHERE city  =  "austin"	network_2
SELECT count ( * )  FROM PersonFriend WHERE name  =  "Alice" OR name  =  "Bob"	network_2
SELECT  name FROM PersonFriend WHERE friend  IN  ( SELECT name FROM person WHERE city  =  'austin' ) 	network_2

SELECT count ( * )  from person where city  =  "new york city"	network_2
select count ( * )  from  ( SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Bob' ) 	network_2
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Bob'	network_2

SELECT count ( * )  from Person where job  =  "student"	network_2
SELECT count ( * )  from Person	network_2
SELECT count  ( distinct friend )  from PersonFriend	network_2
SELECT count ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'	network_2
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'	network_2
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'	network_2
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach'	network_2

SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'Austin' ) 	network_2
SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'new york city' ) 	network_2
SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'salt lake city' ) 	network_2
SELECT distinct name FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'salt lake city' ) 	network_2
SELECT distinct name FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'new york city' ) 	network_2
select count ( * )  from Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE Person.city = 'new york city'	network_2

SELECT name FROM Person	network_2
SELECT name, job FROM Person	network_2
SELECT name, job FROM Person WHERE job  =  'student'	network_2
SELECT name, job FROM Person WHERE job  =  'student' ORDER BY age DESC LIMIT 1	network_2

SELECT friend from personfriend where name = 'Alice'	network_2
SELECT age FROM Person AS T1 where name =  ( select friend from personFriend where name = 'Alice' ) 	network_2

SELECT T1.city FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Dan'	network_2
SELECT * FROM Person WHERE name   =   'Zach'	network_2

SELECT latin_commander FROM battle WHERE name  =  "Battle of Serres"	battle_death
SELECT result FROM battle WHERE date  =  "31 January 1206"	battle_death
SELECT bulgarian_commander FROM battle WHERE date  =  "June 1205"	battle_death
SELECT name FROM battle WHERE latin_commander  =  "Baldwin I"	battle_death

SELECT count ( * )  FROM death	battle_death
SELECT * FROM death where killed  =   ( select max ( killed )  from death ) 	battle_death
SELECT * FROM death where note like "%East%"	battle_death

SELECT T1.killed FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'	battle_death
SELECT T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'	battle_death
SELECT COUNT ( T1.id )  FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'	battle_death

SELECT T1.id ,  T1.name FROM battle AS T1	battle_death
SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10	battle_death
SELECT T1.id ,  T1.name ,T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id   =   T2.lost_in_battle JOIN death AS T3 ON T2.id   =   T3.caused_by_ship_id GROUP BY T1.id HAVING sum ( T3.killed )   >  10	battle_death

SELECT name  FROM battle	battle_death
SELECT name, bulgarian_commander FROM battle	battle_death
SELECT name  FROM battle EXCEPT SELECT T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'	battle_death
SELECT name , RESULT FROM battle EXCEPT SELECT T1.name , T1.result  FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'	battle_death
SELECT name , RESULT , bulgarian_commander FROM battle EXCEPT SELECT T1.name , T1.result , T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'	battle_death
SELECT date FROM battle WHERE result  =  "Bulgarian victory"	battle_death

SELECT distinct Studio FROM film	film_rank
SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT ( * )  DESC LIMIT 1	film_rank
SELECT count ( * )  FROM film where studio  =  "20th Century Fox"	film_rank

SELECT Number_cities FROM market where country  =  "USA"	film_rank
SELECT count ( country )  FROM market	film_rank
SELECT market_id FROM market where country  =  "China"	film_rank
SELECT max ( Number_cities )  ,  min ( Number_cities )  FROM market	film_rank

SELECT COUNT ( DISTINCT Title )  FROM film	film_rank
SELECT count ( Title )  FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) 	film_rank
SELECT film_ID FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) 	film_rank
SELECT Title from film WHERE film_ID IN  ( SELECT film_ID FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation )  ) 	film_rank

SELECT Studio FROM film order by Gross_in_dollar DESC limit 1	film_rank
SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )    > =    4500000	film_rank
SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )    > =    4500000	film_rank

SELECT * FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID   =   T2.Film_ID WHERE T2.Year   =   1995	film_rank
SELECT director  FROM film where title  =  'ET the Extra-Terrestrial'	film_rank
SELECT low_estimate, high_estimate FROM film_market_estimation where Year  =  1995	film_rank

SELECT gtype FROM Video_games where gameid  =  1	game_1
SELECT gtype FROM Video_games where gameid  =  1	game_1
SELECT gname FROM video_games where gtype  =  "Role-playing game"	game_1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  DESC LIMIT 1	game_1

SELECT StuID, LName, Fname FROM Student	game_1
SELECT stuID ,sportname FROM SportsInfo	game_1
SELECT StuID,LName,Fname FROM Student where stuID not in  ( SELECT StuID FROM Sportsinfo ) 	game_1

SELECT sum ( hours_played )  FROM Plays_games AS T1 JOIN Video_games where GType  =  "Role-playing game"	game_1
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  DESC LIMIT 1	game_1
SELECT stuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid where t2.GName  =  "Works of Widenius" order by hours_played desc limit 1	game_1
SELECT count ( distinct t1.StuID )  FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid where t2.GName  =  "Works of Widenius"	game_1
SELECT GType FROM Video_games where GName  =  "Works of Widenius"	game_1

SELECT sum ( gamesplayed )  FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.age  <  20	game_1
SELECT sum ( hoursperweek )   FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.age  <  20	game_1
SELECT sportName,count ( * )  from sportsinfo where stuid in  ( select stuid from student where age < 20 )  group by sportname order by count ( * )  desc limit 1	game_1

SELECT StuID FROM Student WHERE sex   =   'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname   =   "Football"	game_1
SELECT Fname, Lname FROM Student WHERE StuID  =  1002	game_1
SELECT Fname, Lname FROM Student WHERE StuID  =  1003	game_1

SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  DESC LIMIT 1	game_1
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  ASC LIMIT 1	game_1
SELECT count ( * )  FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid WHERE GName  =  'The Vanishing of Eric Calder'	game_1

SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games	game_1

SELECT count ( * )  FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'	game_1
SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'	game_1
SELECT T2.fname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'	game_1
SELECT T2.major FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'	game_1
SELECT T1.sportname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'	game_1

SELECT StuID FROM Student WHERE sex   =   'F'	game_1
SELECT StuID FROM Sportsinfo WHERE sportname   =   "Football"	game_1
SELECT StuID FROM Student WHERE sex   =   'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname   =   "Football"	game_1

SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum ( hoursperweek )  > 10	game_1
SELECT StuID FROM Sportsinfo where SportName = 'Football'	game_1
select avg ( HoursPerWeek )  from SportsInfo where SportName = 'Football'	game_1
select avg ( HoursPerWeek )  from SportsInfo	game_1
select distinct SportName from SportsInfo	game_1
select avg ( HoursPerWeek )  from SportsInfo where SportName = 'Lacrosse'	game_1
SELECT StuID FROM Sportsinfo	game_1

SELECT distinct StuID FROM Plays_games	game_1
SELECT distinct StuID FROM Sportsinfo	game_1
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games	game_1

SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid JOIN Student AS T3 ON T3.Stuid   =   T1.Stuid WHERE T3.Lname   =   "Smith" AND T3.Fname   =   "Linda"	game_1
SELECT gtype FROM video_games WHERE Gname  =  "RNG Stone"	game_1
SELECT city_code FROM student WHERE Lname  =  "Jones" AND Fname  =  "Shiela"	game_1
SELECT T1.hours_played FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid WHERE Gname  =  "The Vanishing of Eric Calder"	game_1
SELECT T3.Fname, T3.lname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid JOIN Student AS T3 ON T3.Stuid   =   T1.Stuid WHERE T2.Gname  = "The Vanishing of Eric Calder"	game_1
SELECT sum ( hours_played )  FROM Plays_games	game_1

SELECT count ( * )  FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   "Football"	game_1
SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   "Football"	game_1
SELECT count ( * )  FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   "Lacrosse"	game_1
SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   "Lacrosse"	game_1

SELECT count ( distinct gtype )  FROM Video_games	game_1
SELECT gtype, count ( * )  FROM Video_games GROUP BY gtype	game_1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  LIMIT 1	game_1

SELECT StuID ,  count ( * )  FROM Sportsinfo GROUP BY StuID	game_1
SELECT StuID ,  count ( * )  ,  sum ( gamesplayed )  FROM Sportsinfo GROUP BY StuID	game_1
SELECT count ( distinct stuid )  FROM SportsInfo WHERE OnScholarship  =  "Y"	game_1
SELECT SportName FROM SportsInfo GROUP BY SportName ORDER BY count ( * )  DESC LIMIT 1	game_1
SELECT SportName FROM SportsInfo ORDER BY HoursPerWeek DESC LIMIT 1	game_1

SELECT LName FROM Student where Fname = 'Linda'	game_1
SELECT Age FROM Student where Fname = 'Linda'	game_1
SELECT Age FROM Student where Lname = 'Kim'	game_1
SELECT distinct sex  FROM Student where age = 18	game_1

SELECT count ( distinct sportname )   FROM Sportsinfo WHERE onscholarship  =  "Y"	game_1
SELECT distinct sportname  FROM Sportsinfo WHERE onscholarship  =  "Y"	game_1
SELECT sportname  FROM Sportsinfo  WHERE onscholarship  =  "Y" GROUP BY sportname ORDER BY count ( * )  DESC LIMIT 1	game_1

SELECT avg ( level_of_membership )  FROM member	coffee_shop
SELECT count ( * )  FROM member WHERE membership_card  =  "Black"	coffee_shop
SELECT avg ( time_of_purchase )  FROM member WHERE membership_card  =  "White"	coffee_shop
SELECT name FROM member WHERE membership_card  =  "White"	coffee_shop

SELECT Shop_ID  from  shop  order by Num_of_staff desc  limit  1	coffee_shop
SELECT  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'	coffee_shop
SELECT t1.address , t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'	coffee_shop

select avg ( Num_of_shaff_in_charge )  from happy_hour	coffee_shop
select count ( distinct month )  from happy_hour	coffee_shop
SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count ( * )   >  2	coffee_shop

SELECT count ( * )  FROM shop where score > 37	coffee_shop
SELECT avg ( num_of_staff )  FROM shop	coffee_shop

SELECT name ,  member_id FROM member WHERE age  <  30	coffee_shop
SELECT name ,  member_id FROM member WHERE Membership_card   =   'Black'	coffee_shop
SELECT name ,  member_id FROM member WHERE Membership_card   =   'Black' OR age  >  30	coffee_shop
SELECT count ( * )  FROM member WHERE Membership_card   =   'Black' OR age  >  30	coffee_shop
SELECT name FROM member WHERE Membership_card   =   'Black' OR age  >  30	coffee_shop

SELECT address FROM member WHERE age  <  30	coffee_shop
SELECT address FROM member WHERE age  > 40	coffee_shop
SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40	coffee_shop

SELECT school FROM school WHERE school_id NOT IN  ( SELECT school_id FROM school_bus ) 	school_bus
SELECT TYPE FROM school WHERE school_id NOT IN  ( SELECT school_id FROM school_bus ) 	school_bus
SELECT school  FROM school WHERE location like "%Hawaii%" and school_id IN  ( SELECT school_id FROM school_bus ) 	school_bus
SELECT school  FROM school WHERE location like "%Indonesia" and school_id IN  ( SELECT school_id FROM school_bus ) 	school_bus
SELECT count ( * )   FROM school WHERE location like "%Hawaii" and type  =  "Private"	school_bus

SELECT count ( * )  FROM driver	school_bus
SELECT avg ( Age )  FROM driver	school_bus

SELECT count ( * )  FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  100	theme_gallery
SELECT count ( * )  FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE  T2.ticket_price  <  10	theme_gallery
SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  100	theme_gallery
SELECT theme FROM  exhibition order by Year desc limit 1	theme_gallery
SELECT Ticket_Price FROM  exhibition order by Year desc limit 1	theme_gallery

SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  DESC LIMIT 1	theme_gallery
SELECT T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  DESC LIMIT 1	theme_gallery
SELECT * FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  LIMIT 1	theme_gallery

SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  <  100	theme_gallery
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  500	theme_gallery
SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  500	theme_gallery

SELECT count ( * )  FROM exhibition	theme_gallery
SELECT name FROM artist	theme_gallery
SELECT age FROM artist where name  =  "Vijay Singh"	theme_gallery
SELECT ticket_price FROM exhibition order by ticket_price desc limit 1	theme_gallery
SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id WHERE T1.ticket_price  >   ( SELECT avg ( ticket_price )  FROM exhibition ) 	theme_gallery

SELECT  max ( age )  FROM artist WHERE country   =   'United States'	theme_gallery
SELECT  count ( Artist_ID )  FROM artist WHERE country   =   'United States' and Year_Join>1993	theme_gallery
SELECT  year_join FROM artist WHERE  Name =   'Vijay Singh'	theme_gallery

SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR  <  2009	theme_gallery
SELECT min ( ticket_price )   FROM exhibition WHERE YEAR  <  2009	theme_gallery
SELECT max ( ticket_price )   FROM exhibition WHERE YEAR  <  2009	theme_gallery
SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR   =  2005	theme_gallery
SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR  < 2006	theme_gallery

SELECT avg ( age )  FROM artist	theme_gallery
SELECT name FROM artist order by age desc limit 1	theme_gallery
SELECT distinct Country FROM artist	theme_gallery

SELECT age from artist where country  =  "United States"	theme_gallery
SELECT avg ( age )  from artist where country  =  'United States'	theme_gallery
SELECT min ( age )  from artist where country  =  'United States'	theme_gallery

SELECT count ( distinct player_id )  from player	baseball_1
SELECT birth_year from player where  player_id = 'aardsda01'	baseball_1
SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T2.player_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1

SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3	baseball_1
SELECT T1.birth_city , T1.birth_state , T1.birth_country FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3	baseball_1
SELECT T1.birth_year, T1.birth_month, T1.birth_day FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3	baseball_1

select player_id from salary order by salary desc limit 1	baseball_1
select count ( player_id )  from player where birth_country  =  'USA'	baseball_1
select team_id from team order by rank limit 1	baseball_1
SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2005 AND T3.name  =  'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2007 AND T3.name  =  'Washington Nationals'	baseball_1

SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T1.year   =   2000 AND T2.city   =   'Atlanta'	baseball_1

SELECT * FROM all_star GROUP BY team_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1
SELECT * FROM player AS T1 JOIN all_star AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1
SELECT T1.player_id FROM player AS T1 JOIN all_star AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1

SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1
select count ( distinct player_id )  from player_college where college_id  =   ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1 ) 	baseball_1
SELECT T1.city, T1.state, T1.country FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1	baseball_1
Select year from player_college where college_id  =   ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1 )  group by college_id order by year desc limit 1	baseball_1
Select count ( player_id )  from player_college where year  =  "2018" and college_id  =  "texas"	baseball_1

SELECT salary FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.team_id  =  "ATL"	baseball_1
SELECT distinct T1.league_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.player_id  =  "bedrost01"	baseball_1
SELECT distinct T1.player_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.salary  =  545000	baseball_1

SELECT salary FROM salary WHERE YEAR   =   2001 ORDER BY salary DESC LIMIT 3	baseball_1
SELECT salary FROM salary WHERE YEAR   =   2001 and team_id  =  "ATL" ORDER BY salary DESC LIMIT 3	baseball_1
SELECT salary FROM salary WHERE YEAR   =   2001 and league_id  =  "NL" ORDER BY salary DESC LIMIT 3	baseball_1
SELECT salary FROM salary WHERE YEAR   =   2001 and league_id  =  "AL" ORDER BY salary DESC LIMIT 3	baseball_1

SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br group by  T1.team_id ORDER BY sum ( T1.attendance )  asc limit 1	baseball_1
SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  asc limit 1	baseball_1
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  desc limit 1	baseball_1
SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  desc limit 1	baseball_1

SELECT count ( * )  FROM postseason WHERE ties   =   1	baseball_1

SELECT count ( * )  FROM park	baseball_1
SELECT city FROM park where park_name  =  "Riverside Park"	baseball_1
SELECT state FROM park where park_name   =  "Columbia Park"	baseball_1
SELECT count ( * )  FROM home_game	baseball_1
SELECT count ( * )  FROM home_game where year  =  1871	baseball_1

SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3	baseball_1
select name_first, name_last from player where player_id in  ( SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3 )  order by birth_year, birth_month, birth_day desc limit 1	baseball_1
SELECT T1.player_id, T2.league_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3	baseball_1

SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * )  ASC LIMIT 1	baseball_1
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * )  ASC LIMIT 3	baseball_1

SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE  T1.year   =  1871	baseball_1
SELECT count ( * )  FROM home_game WHERE team_id  =  "BS1"	baseball_1
SELECT rank FROM team WHERE team_id  =  "BS1"	baseball_1

SELECT count ( * )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings'	baseball_1
SELECT count ( * )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings' AND T1.year   =   2000	baseball_1
SELECT SUM ( salary )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings' AND T1.year   =   2000	baseball_1

SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010	baseball_1
SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010	baseball_1
SELECT avg ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Cleveland Forest Citys'	baseball_1
SELECT avg ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Chicago White Stockings'	baseball_1
SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br order by T1.span_first limit 1	baseball_1
SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br order by T1.span_first desc limit 1	baseball_1

SELECT name_first, name_last, name_given FROM player	baseball_1
SELECT T2.name_first , T2.name_last, T2.name_given FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2007 AND T3.name  =  'Washington Nationals'	baseball_1
SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2005 or T1.year  =  2007	baseball_1

SELECT count ( * )  FROM postseason	baseball_1
SELECT * FROM postseason ORDER BY wins DESC LIMIT 1	baseball_1

SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * )  ASC LIMIT 1	baseball_1
SELECT category FROM hall_of_fame where yearid = 1944	baseball_1
SELECT sum ( votes )   FROM hall_of_fame where category = "Pioneer/Executive"	baseball_1

SELECT count ( * )  ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings' GROUP BY T1.year	baseball_1
SELECT team_id_winner  FROM postseason	baseball_1
SELECT team_id_loser FROM postseason	baseball_1

SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T2.park_name  =  'Columbia Park'	baseball_1
SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T1.year  =  1907	baseball_1
SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  1907 AND T2.park_name  =  'Columbia Park'	baseball_1

SELECT avg ( height )  FROM player	baseball_1
SELECT avg ( T1.height )  FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'	baseball_1
SELECT avg ( weight )  FROM player	baseball_1
SELECT player_id FROM player ORDER BY weight DESC LIMIT 1	baseball_1

SELECT T1.name_given FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'	baseball_1
SELECT T1.height FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'	baseball_1
SELECT avg ( T1.height )  FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'	baseball_1

SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'	pets_1
select count ( * )  from  ( SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' ) 	pets_1
SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'	pets_1

SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1	pets_1
SELECT T1.lname, T1.fname  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1	pets_1
SELECT T1.lname, T1.fname, T1.sex  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid GROUP BY T1.stuid HAVING count ( * )   >  1	pets_1

SELECT count ( * ) FROM student WHERE Sex = "F"	pets_1
SELECT LName,Fname  FROM student order  by  Age  limit 1	pets_1
SELECT avg ( age )  FROM student WHERE stuid NOT IN  ( SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid ) 	pets_1
SELECT city_code  FROM student WHERE  StuID = 1003	pets_1

select lname from Student AS T1 JOIN Has_Pet AS T2 ON T2.stuid = T1.stuid	pets_1
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE  T3.pettype  =  'cat'	pets_1
SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'	pets_1

SELECT count ( * )  FROM student WHERE age  >  20	pets_1
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid WHERE T1.age  >  20	pets_1

SELECT distinct PetType from Pets	pets_1
SELECT count ( * )   from Pets where PetType = "dog"	pets_1
SELECT pet_age  from Pets where PetType = "dog"	pets_1
SELECT weight  from Pets where PetType = "dog" and pet_age  =   ( select min ( pet_age )  from Pets where PetType = "dog" ) 	pets_1

SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'dog'	pets_1
SELECT count ( * )  FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat'	pets_1
SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid   =   T2.stuid JOIN pets AS T3 ON T3.petid   =   T2.petid WHERE T3.pettype   =   'cat' OR T3.pettype   =   'dog'	pets_1

SELECT LOCATION FROM bridge WHERE name   =   'Kolob Arch' OR name   =   'Rainbow Bridge'	architecture
SELECT length_meters FROM bridge WHERE name   =   'Kolob Arch'	architecture
SELECT name FROM bridge WHERE length_feet  =   ( select max ( length_feet )  from bridge ) 	architecture
SELECT location FROM bridge WHERE name  =  "Xian Ren Qiao  ( Fairy Bridge ) "	architecture

SELECT TYPE  FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1	architecture
SELECT TYPE, count ( * )   FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1	architecture
select built_year from mill where type  =   ( SELECT TYPE FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1 ) 	architecture

SELECT nationality FROM architect WHERE name  =  'Zaha Hadid'	architecture
SELECT gender FROM architect WHERE name  =  'Frank Gehry'	architecture
SELECT built_year FROM mill WHERE architect_id  =  2	architecture
SELECT location FROM mill WHERE id  =  3	architecture

SELECT name FROM architect	architecture
SELECT * FROM architect where nationality = 'American'	architecture

SELECT length_meters from bridge where name  =  "Fairy Bridge"	architecture
SELECT * from bridge where name  =  "Xian Ren Qiao  ( Fairy Bridge ) "	architecture
SELECT * from bridge as T1 join architect as T2 on T1.architect_id  =  T2.id where T1.name  =  'Xian Ren Qiao  ( Fairy Bridge ) '	architecture
SELECT * from bridge as T1 join architect as T2 on T1.architect_id  =  T2.id where T2.name  =  "Frank Lloyd Wright" and T1.name ! =  "Xian Ren Qiao  ( Fairy Bridge ) "	architecture
SELECT * FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id JOIN bridge AS T3 ON T3.architect_id   =   T2.id WHERE T3.length_meters  >  80	architecture

SELECT count ( * )  from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T1.name  =  "Frank Lloyd Wright"	architecture
SELECT count ( * )  from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T1.name  =  "Frank Gehry"	architecture
SELECT T1.name from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T2.name  =  "Xian Ren Qiao  ( Fairy Bridge ) "	architecture
SELECT name from architect where id  =  2	architecture

SELECT T1.name  FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	architecture
SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	architecture
SELECT T2.name FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id where T1.name = 'Frank Lloyd Wright'	architecture

SELECT count ( * )  FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE T2.nationality   =   'American'	architecture
SELECT count ( * )  FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE  T2.nationality   =   'Canadian'	architecture
SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE T2.nationality   =   'American' OR T2.nationality   =   'Canadian'	architecture

select count ( distinct Swimmer_ID )  from record	swimming
SELECT count ( * )  FROM swimmer WHERE id NOT IN  ( SELECT swimmer_id FROM record ) 	swimming
SELECT name FROM swimmer WHERE id NOT IN  ( SELECT swimmer_id FROM record ) 	swimming

SELECT country FROM stadium group by country having count ( * )   > =   2	swimming
SELECT distinct country FROM stadium WHERE capacity  >  60000	swimming

SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id JOIN event AS t3 ON t2.event_id   =   t3.id JOIN stadium AS t4 ON t4.id   =   t3.stadium_id WHERE t1.nationality   =   'Australia'	swimming
SELECT name FROM swimmer where nationality   =   'Australia'	swimming

SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id   =   t2.id JOIN stadium AS t3 ON t3.id   =   t2.stadium_id GROUP BY t2.stadium_id ORDER BY count ( * )  DESC LIMIT 1	swimming
SELECT count ( name )  from event	swimming
SELECT count ( name )  from stadium	swimming

SELECT name, time FROM swimmer	swimming
SELECT  t1.time, t2.event_id FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id	swimming
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count ( * )   > =   2	swimming

SELECT count ( Name )  from event	swimming
SELECT count ( distinct Capacity )  from stadium	swimming

SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * )  DESC LIMIT 1	swimming
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * )  ASC LIMIT 1	swimming
SELECT nationality FROM swimmer WHERE name  =  "Grant Hackett" OR name  =  "Craig Stevens"	swimming

SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win'	swimming
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'	swimming
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'	swimming
SELECT t1.name, t1.Nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' INTERSECT SELECT t1.name, t1.Nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'	swimming

SELECT country FROM stadium GROUP BY country HAVING count ( * )    > =   1	swimming
SELECT count ( DISTINCT city )  FROM stadium	swimming
SELECT country FROM stadium GROUP BY country HAVING count ( * )  < =  3	swimming

SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1	swimming
SELECT city FROM stadium where name  =  "Nou Mestalla"	swimming
SELECT country FROM stadium where name  =  "Nou Mestalla"	swimming

SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006	swimming
SELECT capacity FROM stadium where country  =  "England"	swimming
SELECT city FROM stadium where country  =  "England"	swimming

select title from film where directed_by  =  "Bill Schreiner"	cinema
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day )  DESC LIMIT 1	cinema
select original_air_date from film	cinema

SELECT Title FROM film	cinema

SELECT MAX ( Price )  FROM schedule	cinema
SELECT AVG ( Price )  FROM schedule	cinema
SELECT AVG ( Rank_in_series )  FROM film	cinema

SELECT count ( distinct cinema_id )  from cinema	cinema
SELECT avg ( capacity )  from cinema	cinema
SELECT name from cinema where capacity =  ( select min ( capacity )  from cinema )  or  capacity =  ( select max ( capacity )  from cinema ) 	cinema
SELECT location from cinema GROUP BY LOCATION ORDER BY count ( * )  DESC LIMIT 1	cinema
SELECT LOCATION FROM cinema WHERE openning_year  > =   2010 GROUP BY LOCATION ORDER BY count ( * )  DESC LIMIT 1	cinema

SELECT Name FROM cinema	cinema
SELECT Name FROM cinema ORDER BY Openning_year ASC LIMIT 1	cinema
SELECT avg ( Capacity )  FROM cinema	cinema
SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800	cinema

SELECT capacity FROM cinema where name  =  "Codling"	cinema
SELECT max ( capacity )  FROM cinema	cinema
SELECT location FROM cinema where name  =  "Codling"	cinema

SELECT count ( * )  FROM cinema WHERE capacity   > =    300	cinema
SELECT name FROM cinema WHERE capacity   > =    300	cinema
SELECT LOCATION FROM cinema WHERE capacity   > =    300	cinema
SELECT * FROM cinema order by capacity desc limit 1	cinema
SELECT openning_year FROM cinema where name  =  "Codling"	cinema

SELECT T2.name ,  sum ( T1.show_times_per_day )  FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id   =   T2.cinema_id GROUP BY T1.cinema_id	cinema
SELECT T2.name FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id   =   T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum ( T1.show_times_per_day )  DESC LIMIT 1	cinema
SELECT Name FROM cinema ORDER BY Capacity DESC LIMIT 1	cinema
SELECT Name FROM cinema WHERE Location  =  "County Cork"	cinema

SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id WHERE t2.Time_of_day   =   "Morning" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id WHERE t2.Time_of_day   =   "Night"	program_share
SELECT name from program where owner  =  "Beijing Television  ( BTV ) "	program_share
SELECT launch from program where name  =  "Kaku"	program_share
SELECT owner from program where name  =  "Toonmax"	program_share

SELECT count ( * )  from broadcast	program_share
SELECT * from channel	program_share
SELECT owner from channel where name = "CCTV-1"	program_share
SELECT name from channel where rating_in_percent  =   ( select max ( rating_in_percent )  from channel ) 	program_share

SELECT COUNT ( * )  FROM journalist	news_report
SELECT COUNT ( * )  FROM journalist WHERE years_working > 5	news_report
SELECT name FROM journalist ORDER BY Years_working DESC LIMIT 1	news_report

SELECT Name from journalist	news_report
SELECT T1.Event_ID,T1.Date  from event as T1 join news_report as T2 on T1.Event_ID = T2.Event_ID	news_report

SELECT Nationality FROM journalist WHERE Name  =  "Jackie Waring"	news_report
SELECT * FROM journalist WHERE Name ! =  "Jackie Waring" AND Nationality  =  "England"	news_report
SELECT AGE FROM journalist WHERE Name  =  "Herbert Swindells"	news_report

SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1	news_report
SELECT journalist_ID FROM journalist where journalist_ID not in  ( SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1 )  ORDER BY Years_working DESC LIMIT 1	news_report
SELECT Name FROM journalist where journalist_ID = 4	news_report
SELECT nationality FROM journalist where journalist_ID = 4	news_report
SELECT count ( journalist_ID )  FROM journalist where Nationality = 'England'	news_report
SELECT journalist_ID FROM journalist where Nationality = 'England' order by  Years_working limit 1	news_report
SELECT journalist_ID FROM journalist order by  Years_working limit 1	news_report

select count ( * )  from journalist	news_report
select Name from journalist where journalist_ID  = 2	news_report
select Nationality from journalist where journalist_ID  = 1	news_report

SELECT * FROM journalist WHERE Years_working  >  10	news_report
SELECT name FROM journalist WHERE Years_working  >  10 AND Years_working  < 3	news_report
SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3	news_report
SELECT avg ( years_working )  FROM journalist WHERE Nationality = "England"	news_report
SELECT name FROM journalist WHERE Nationality = "England"	news_report
SELECT avg ( age )  FROM journalist WHERE Nationality = "England"	news_report

SELECT count ( * )  FROM event	news_report
SELECT event_id FROM event ORDER BY Event_Attendance DESC	news_report
SELECT event_id, event_attendance,  name FROM event ORDER BY Event_Attendance DESC	news_report

SELECT count ( master_customer_id )  FROM Customer_Master_Index	local_govt_mdm
SELECT master_customer_id FROM  Customer_Master_Index where cmi_details ! =   ( 'Schmidt, Kertzmann and Lubowitz' ) 	local_govt_mdm
SELECT t1.master_customer_id,cmi_cross_ref_id FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details not in  ( 'Schmidt, Kertzmann and Lubowitz' ) 	local_govt_mdm
SELECT t1.master_customer_id,cmi_cross_ref_id,source_system_code  FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details ! =   ( 'Schmidt, Kertzmann and Lubowitz' ) 	local_govt_mdm
SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id   =   T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id   =   T2.master_customer_id WHERE T3.cmi_details ! =  'Schmidt ,  Kertzmann and Lubowitz'	local_govt_mdm

SELECT T1.source_system_code  FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id	local_govt_mdm
SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id	local_govt_mdm
SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id	local_govt_mdm
SELECT source_system_code FROM CMI_Cross_References	local_govt_mdm

SELECT master_customer_id, cmi_details from Customer_Master_Index	local_govt_mdm
SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id from customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id	local_govt_mdm
SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id   =   T2.master_customer_id WHERE T1.cmi_details   =   'Gottlieb, Becker and Wyman'	local_govt_mdm

SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'	local_govt_mdm
SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code not  LIKE '%en%'	local_govt_mdm
SELECT master_customer_id  FROM cmi_cross_references WHERE source_system_code = 'Electoral'	local_govt_mdm

SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )   >  1	poker_player
SELECT People_ID FROM people WHERE Nationality  =  'Russia'	poker_player
SELECT People_ID, name FROM people WHERE Nationality  =  'Russia'	poker_player

SELECT distinct Nationality FROM people	poker_player
SELECT Nationality FROM people	poker_player
SELECT count ( * )  FROM people where Nationality  =  'Russia'	poker_player
SELECT count ( * )  FROM people where Nationality  =  'Bulgaria'	poker_player

select count ( * )  from poker_player	poker_player
SELECT count ( * )  FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000	poker_player
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000	poker_player

SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1	poker_player
SELECT People_ID FROM poker_player ORDER BY Earnings DESC LIMIT 1	poker_player
SELECT Best_Finish FROM poker_player ORDER BY Earnings DESC LIMIT 1	poker_player
SELECT Earnings FROM poker_player order by Earnings desc limit 1	poker_player

SELECT Earnings FROM poker_player	poker_player
SELECT Earnings FROM poker_player order by Earnings desc	poker_player
SELECT Final_Table_Made FROM poker_player order by Earnings asc limit 1	poker_player
SELECT Final_Table_Made FROM poker_player order by Earnings desc limit 1	poker_player

SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM poker_player ) 	poker_player
SELECT Name FROM people WHERE People_ID IN  ( SELECT People_ID FROM poker_player ) 	poker_player

SELECT height FROM people where name  =  "Aleksey Ostapenko"	poker_player
SELECT name FROM people where birth_date  =  "August 16, 1982"	poker_player
SELECT people_id FROM people where nationality  =  "Russia"	poker_player
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT ( * )    > =    2	poker_player

SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Earnings  >  300000	poker_player
SELECT count ( Poker_Player_ID )  from poker_player	poker_player

SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made	poker_player
SELECT T1.Nationality FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Final_Table_Made	poker_player
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings desc limit 1	poker_player
SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings limit 1	poker_player
SELECT T2.Best_Finish FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Earnings  limit 1	poker_player

SELECT Nationality FROM people where People_ID = 1	poker_player
SELECT Birth_Date FROM people where Name = "Teodor Salparov"	poker_player
SELECT Earnings FROM poker_player where People_ID   =   5	poker_player
SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1	poker_player

SELECT contestant_name FROM CONTESTANTS	voter_1
SELECT COUNT ( contestant_name )  FROM CONTESTANTS	voter_1
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  1	voter_1
SELECT contestant_name FROM CONTESTANTS WHERE contestant_number  =  2	voter_1

SELECT  count ( * )   from  camera_lens	mountain_photos
SELECT name ,id FROM camera_lens WHERE name LIKE "%Digital%"	mountain_photos

SELECT count ( * )  FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id   =   T2.id WHERE T2.brand   =   'Olympus'	mountain_photos
SELECT T1.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id   =   T2.id group by T1.name having T2.brand   =   'Olympus'	mountain_photos
SELECT  T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma'	mountain_photos
SELECT  count ( * )  from photos as T1 join camera_lens as T2 on  T1.camera_lens_id = T2.id where T2.brand  =  'Sigma'	mountain_photos
SELECT  T1.name from photos as T1 join camera_lens as T2 on  T1.camera_lens_id = T2.id where T2.brand  =  'Sigma'	mountain_photos

SELECT T1.name ,  count ( * )  FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id GROUP BY T1.id	mountain_photos
SELECT T1.name ,  count ( * )  FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id GROUP BY T1.id ORDER BY count ( * ) 	mountain_photos
SELECT T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id  where T1.brand  =  "Olympus"	mountain_photos

SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID   =   T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID   =   T3.Performance_ID WHERE T2.Role   =   "Violin"	performance_attendance
select T1.name from member as T1 join member_attendance as T2 on T1.Member_id  =  T2.Member_id group by T2.Member_id order by count ( * )  desc limit 1	performance_attendance
select T1.name from member as T1 join member_attendance as T2 on T1.Member_id  =  T2.Member_id group by T2.Member_id order by count ( * )  asc limit 1	performance_attendance

SELECT Date FROM performance	performance_attendance
SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1	performance_attendance
SELECT Performance_ID FROM performance ORDER BY Attendance DESC LIMIT 1	performance_attendance

SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN  ( SELECT Winning_Aircraft FROM MATCH ) 	aircraft
SELECT winning_pilot FROM match group by winning_pilot order by count ( * )  desc limit 1	aircraft
SELECT winning_aircraft FROM match group by winning_aircraft order by count ( * )  desc limit 1	aircraft

SELECT location ,  country FROM match WHERE round  =  "1.0"	aircraft
SELECT pilot_id FROM pilot WHERE name  =  "Prof. Zackery Collins"	aircraft
SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id   =   t2.winning_pilot ORDER BY t1.age LIMIT 1	aircraft

SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE "%London%"	aircraft
SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE "%Heathrow%"	aircraft
SELECT sum ( International_Passengers )  FROM airport WHERE Airport_Name LIKE "%Heathrow%"	aircraft

SELECT Aircraft from aircraft	aircraft
SELECT Description from aircraft WHERE Aircraft = 'Robinson R-22'	aircraft
SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID   =   T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID   =   T3.Airport_ID WHERE T3.Airport_Name   =   "London Gatwick"	aircraft

SELECT airport_name, international_passengers FROM airport	aircraft
SELECT airport_name FROM airport order by international_passengers desc limit 1	aircraft
SELECT * from airport where airport_name  =  "London Heathrow"	aircraft

SELECT distinct t1.pilot_id FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id   =   t2.winning_pilot	aircraft
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count ( * )  DESC LIMIT 1	aircraft

SELECT Aircraft FROM aircraft	aircraft

SELECT name from museum	museum_visit

SELECT Level_of_membership FROM visitor WHERE name  =   "Gonzalo Higuaín "	museum_visit
SELECT name FROM visitor WHERE Level_of_membership =  5	museum_visit
SELECT count ( * )  FROM visitor WHERE Level_of_membership>5	museum_visit
SELECT age FROM visitor WHERE Level_of_membership   = 8	museum_visit
SELECT count ( * )  FROM visitor WHERE Level_of_membership > 4	museum_visit
SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC	museum_visit

SELECT name FROM visitor WHERE Level_of_membership  >  4	museum_visit
SELECT name, age FROM visitor WHERE Level_of_membership  >  4	museum_visit
SELECT name ,  age FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC	museum_visit
SELECT id FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC	museum_visit

SELECT  t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1	museum_visit
SELECT  t1.name, t1.id, t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id GROUP BY t1.id HAVING count ( * )   >  1	museum_visit
SELECT  name, Level_of_membership FROM visitor where age > 20	museum_visit
SELECT  t1.name , t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id where t2.total_spent > 100	museum_visit

SELECT max ( num_of_ticket )  FROM visit	museum_visit
SELECT avg ( num_of_ticket )  FROM visit	museum_visit

SELECT sum ( t2.Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id WHERE t1.Level_of_membership   =   1	museum_visit
SELECT COUNT ( id )  FROM visitor WHERE Level_of_membership  =  1	museum_visit
SELECT COUNT ( DISTINCT level_of_membership )  FROM visitor	museum_visit
SELECT name FROM visitor WHERE Level_of_membership  =  1	museum_visit
SELECT  t1.level_of_membership, sum ( Total_spent )  FROM visitor AS t1 JOIN visit AS t2 ON t1.id   =   t2.visitor_id group by Level_of_membership	museum_visit

SELECT state FROM customers GROUP BY state ORDER BY count ( * )  LIMIT 1	customer_complaints
SELECT count ( customer_id )  FROM customers where customer_type_code  = "Good Credit Rating"	customer_complaints
SELECT state FROM customers where customer_type_code  = "Good Credit Rating"	customer_complaints
SELECT customer_id FROM customers where customer_type_code  = "Good Credit Rating"	customer_complaints

SELECT date_complaint_raised from complaints order by date_complaint_raised desc limit 1	customer_complaints
SELECT date_complaint_closed from complaints where date_complaint_raised  = '2007-10-14 21:50:43'	customer_complaints
SELECT customer_id from complaints where date_complaint_raised  = '2007-10-14 21:50:43'	customer_complaints
SELECT phone_number FROM customers  where customer_id  = 118	customer_complaints

SELECT complaint_status_code , count ( * )  FROM complaints WHERE complaint_type_code   =   "Product Failure" GROUP BY complaint_status_code	customer_complaints
SELECT complaint_status_code  FROM complaints WHERE complaint_type_code   =   "Product Failure"	customer_complaints

SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id   =   t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1	customer_complaints
SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id   =   t2.staff_id ORDER BY t2.date_complaint_raised desc LIMIT 1	customer_complaints

SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1	customer_complaints
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1	customer_complaints
SELECT t1.address_line_1, t1.address_line_2 FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1	customer_complaints

SELECT stuid FROM Student WHERE Fname  =  "Linda" AND Lname  =  "Smith"	restaurant_1
SELECT age FROM Student WHERE Fname  =  "Linda" AND Lname  =  "Smith"	restaurant_1
SELECT city_code FROM Student WHERE Fname  =  "Linda" AND Lname  =  "Smith"	restaurant_1

select ResName from  Restaurant where ResID  =  1	restaurant_1
select address from  Restaurant where ResID  =  1	restaurant_1
select Rating from  Restaurant where ResID  =  1	restaurant_1
SELECT count ( * )  FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'	restaurant_1

SELECT count ( * )  FROM Restaurant	restaurant_1
SELECT count ( * )  FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'	restaurant_1
SELECT ResName FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'	restaurant_1
SELECT Address FROM Restaurant where ResName = 'Subway'	restaurant_1
SELECT Rating FROM Restaurant where ResName = 'Subway'	restaurant_1

SELECT Major ,  count ( * )  FROM Student GROUP BY Major HAVING count ( Major )  BETWEEN 2 AND 30	restaurant_1
SELECT Major ,  count ( * )  FROM Student GROUP BY Major HAVING count ( Major )  BETWEEN 2 AND 20	restaurant_1

SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major ! =  600 AND Sex  =  'F'	restaurant_1
SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major ! =  600 AND Sex  =  'M'	restaurant_1
SELECT Fname , Lname FROM Student WHERE   Major ! =  600 AND Sex  =  'M' order by Age desc limit 1	restaurant_1
SELECT Major , Advisor FROM Student WHERE LName = "Thornton" and FName = "Ian"	restaurant_1
select Fname , Lname FROM Student  where Sex  =  'F' and Major = 520	restaurant_1

SELECT city_code FROM Student WHERE Fname  =  "Linda" AND Lname  =  "Smith"	restaurant_1
SELECT fname,lname FROM Student WHERE sex  =  "F"	restaurant_1
SELECT city_code FROM Student WHERE sex  =  "F"	restaurant_1
SELECT fname,lname FROM Student order by age desc limit 1	restaurant_1

SELECT Age FROM Student WHERE Fname  =  "Linda" AND Lname  =  "Smith"	restaurant_1
SELECT Fname, Lname FROM Student ORDER BY age DESC LIMIT 1	restaurant_1
SELECT Advisor FROM Student ORDER BY age  LIMIT 1	restaurant_1

SELECT sum ( Spent )  FROM Student JOIN Visits_Restaurant ON Student.StuID  =  Visits_Restaurant.StuID WHERE Student.Fname  =  "Linda" AND Student.Lname  =  "Smith"	restaurant_1
SELECT * FROM Student where city_code  =   ( select city_code from student where Fname  =  "Linda" AND Lname  =  "Smith" )  and Fname ! =  "Linda" AND Lname ! =  "Smith"	restaurant_1
SELECT T1.StuID, sum ( T2.Spent )  FROM Student AS T1 JOIN Visits_Restaurant AS T2 where city_code  =   ( select city_code from student where Fname  =  "Linda" AND Lname  =  "Smith" )  and Fname ! =  "Linda" AND Lname ! =  "Smith" GROUP BY T1.StuID HAVING sum ( T2.Spent )  >  ( SELECT sum ( Spent )  FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID  =  T2.StuID WHERE T1.Fname  =  "Linda" AND T1.Lname  =  "Smith" ) 	restaurant_1

SELECT origin, destination, flno FROM Flight GROUP BY destination	flight_1
SELECT destination, flno FROM Flight GROUP BY destination	flight_1
SELECT destination, count ( * )  FROM Flight GROUP BY destination	flight_1
SELECT destination, count ( * )  FROM Flight GROUP BY destination order by count ( * )  LIMIT 1	flight_1

SELECT salary, name from employee	flight_1
SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1	flight_1
SELECT T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1	flight_1

SELECT avg ( distance )  FROM Flight	flight_1
SELECT max ( distance )  FROM Flight	flight_1
SELECT max ( price )  FROM Flight	flight_1

SELECT count ( * )  FROM Flight WHERE origin   =   "Los Angeles"	flight_1
SELECT count ( * )  FROM Flight WHERE origin   =   "Los Angeles" and destination  =  "Honolulu"	flight_1
SELECT departure_date ,  arrival_date FROM Flight WHERE origin   =   "Los Angeles" AND destination   =   "Honolulu"	flight_1

SELECT salary FROM Employee ORDER BY salary ASC	flight_1
SELECT salary FROM Employee ORDER BY salary ASC LIMIT 3	flight_1
SELECT name FROM Employee ORDER BY salary ASC limit 1	flight_1
SELECT eid FROM Employee ORDER BY salary ASC LIMIT 1	flight_1

SELECT name from aircraft	flight_1
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid GROUP BY T1.aid ORDER BY count ( * )  ASC LIMIT 1	flight_1
SELECT aid from aircraft where name  = 'Boeing 727'	flight_1

SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count ( * )  ASC LIMIT 1	flight_1
SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1	flight_1
SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  <  5000 GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1	flight_1

SELECT departure_date FROM Flight WHERE origin   =   "Los Angeles" AND destination   =   "Honolulu"	flight_1
SELECT arrival_date FROM Flight WHERE origin   =   "Los Angeles" AND destination   =   "Honolulu"	flight_1
SELECT price FROM Flight WHERE origin   =   "Los Angeles" AND destination   =   "Honolulu"	flight_1
SELECT flno FROM Flight WHERE origin   =   "Los Angeles" AND destination   =   "Honolulu"	flight_1

SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate	flight_1
SELECT name FROM Employee EXCEPT SELECT eid FROM Certificate	flight_1
SELECT COUNT ( * )  FROM Employee EXCEPT SELECT aid FROM Certificate	flight_1

SELECT distinct aid FROM Aircraft WHERE name   =   "Airbus A340-300"	flight_1
select sum ( distance )  from flight where aid  =   ( SELECT distinct aid FROM Aircraft WHERE name   =   "Airbus A340-300" ) 	flight_1
SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid   =   T2.aid WHERE T2.name   =   "Airbus A340-300"	flight_1

SELECT count ( distinct name  ) from aircraft	flight_1
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count ( * )  ASC LIMIT 1	flight_1
SELECT count ( * )  FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid where T2.name = "Boeing 747-400"	flight_1
SELECT distance from Aircraft where name = "Boeing 747-400"	flight_1
SELECT distance from Aircraft where name = "Boeing 737-800"	flight_1

SELECT distance FROM Aircraft where name  =  'Boeing 747-400'	flight_1
SELECT distance FROM Aircraft where name  =  'Boeing 737-800'	flight_1
SELECT name FROM Aircraft where distance  =  7120	flight_1
SELECT aid FROM Aircraft order by distance desc limit 1	flight_1
SELECT name FROM Aircraft order by distance desc limit 1	flight_1

SELECT count ( distinct origin )  FROM Flight	flight_1
SELECT count ( * )  FROM Flight	flight_1
SELECT origin FROM Flight group by origin order by count ( * )  asc limit 1	flight_1

SELECT count ( * )  FROM order_items	department_store
SELECT count ( * )  FROM order_items where product_id  =  7	department_store
SELECT count ( * )  FROM order_items where order_item_id  =  2	department_store

SELECT T1.supplier_name FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id ORDER BY T3.address_details	department_store
SELECT T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id ORDER BY T3.address_details	department_store
SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id where T1.supplier_name  =  'Tesco'	department_store
SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id where T1.supplier_name  =  'Lidl'	department_store

SELECT avg ( total_amount_purchased )  ,  avg ( total_value_purchased )  FROM Product_Suppliers WHERE supplier_id   =    ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  DESC LIMIT 1 ) 	department_store
SELECT avg ( total_amount_purchased )  , avg ( total_value_purchased )  FROM Product_Suppliers WHERE supplier_id  =   ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  LIMIT 1 ) 	department_store
SELECT distinct supplier_id FROM Product_Suppliers WHERE supplier_id  =   ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  LIMIT 1 ) 	department_store
SELECT sum ( total_value_purchased )  from Product_Suppliers where supplier_id = 3	department_store
SELECT date_supplied_to  from Product_Suppliers where supplier_id = 3	department_store

SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased )  > 50000 OR avg ( total_amount_purchased )  < 30000	department_store
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased )  < 30000	department_store
select product_id, avg ( total_amount_purchased )  from Product_Suppliers group by product_id	department_store
select date_supplied_to from Product_Suppliers order by date_supplied_to desc limit 1	department_store

SELECT staff_id FROM staff_department_assignments where job_title_code  =  "Department Manager"	department_store
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * )  LIMIT 1	department_store

SELECT distinct department_id FROM staff_department_assignments	department_store
SELECT department_id,count ( staff_id )  FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) 	department_store
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * )  LIMIT 1	department_store

SELECT T1.staff_name  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Sales Person"	department_store
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Sales Person" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Clerical Staff"	department_store
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Sales Person"	department_store
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  "Clerical Staff"	department_store
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  "Clerical Staff"	department_store

SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum ( total_amount_purchased )   >  80000	department_store
SELECT date_supplied_to FROM Product_Suppliers where supplier_id  =  4 order by date_supplied_to desc limit 1	department_store

SELECT avg ( product_price )  FROM products	department_store
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products ) 	department_store
SELECT avg ( product_price )  FROM products WHERE product_type_code  =  "Hardware"	department_store
SELECT avg ( product_price )  FROM products WHERE product_type_code  =  "Clothes"	department_store

select date_assigned_to from  Staff_Department_Assignments where job_title_code  =  'Department Manager'	department_store
SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id GROUP BY T2.staff_id HAVING COUNT  ( * )   >  1	department_store
select date_assigned_from from Staff_Department_Assignments where job_title_code  =  'Sales Person'	department_store

SELECT customer_name ,  customer_id FROM customers	department_store
SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE "%TN%"	department_store
SELECT customer_address FROM customers WHERE customer_address LIKE "%TN%"	department_store

SELECT staff_gender,  staff_name FROM staff where staff_id = 1	department_store
SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1	department_store
SELECT  job_title_code from Staff_Department_Assignments	department_store

SELECT customer_id FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! =  "Credit Card"	department_store
SELECT customer_name FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! =  "Credit Card"	department_store
SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! =  "Credit Card"	department_store
SELECT customer_email, customer_phone FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! =  "Credit Card"	department_store

SELECT product_id from Product_Suppliers where supplier_id  =  2	department_store
SELECT avg ( product_price )  from products	department_store
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 AND T2.product_price  >   ( SELECT avg ( product_price )  FROM products ) 	department_store
SELECT product_price from products where product_id  =  8	department_store
SELECT product_price from products where product_id  =  15	department_store

SELECT COUNT ( * )  FROM Customers	department_store
SELECT customer_name FROM Customers	department_store
SELECT max ( customer_code )  FROM Customers	department_store
SELECT customer_address FROM Customers WHERE customer_name  =  "Ahmed"	department_store

SELECT product_name FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1	department_store
SELECT product_price FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1	department_store
SELECT product_name,product_price FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price asc LIMIT 1	department_store
SELECT avg ( product_price )  FROM products WHERE product_type_code   =   'Hardware'	department_store
SELECT avg ( product_price )  FROM products WHERE product_type_code   =   'Clothes'	department_store

SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Sales Person" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Clerical Staff"	department_store
SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Sales Person"	department_store
SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   "Clerical Staff"	department_store

SELECT staff_name, staff_gender FROM Staff	department_store
SELECT department_id, job_title_code FROM Staff_Department_Assignments	department_store
SELECT count ( * )  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id Where T2.job_title_code  =  "Sales Person" OR T2.job_title_code  =  "Clerical Staff"	department_store
SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1	department_store

SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3	department_store
SELECT T2.product_type_code  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3	department_store
SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3	department_store
SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3	department_store
SELECT T1.supplier_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name = 'red jeans'	department_store
SELECT T1.supplier_id,T1.total_amount_purchased FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name = 'red jeans'	department_store

SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >   ( SELECT min ( order_date )  FROM Customer_Orders WHERE order_status_code   =   "Cancelled" ) 	department_store
SELECT order_status_code FROM Customer_Orders WHERE order_id  =  3	department_store

SELECT * FROM products ORDER BY product_price LIMIT 1	department_store
SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1	department_store

SELECT product_id from products order by product_price desc limit 1	department_store
SELECT product_name from products order by product_price desc limit 1	department_store
SELECT product_name from products order by product_price limit 1	department_store

SELECT count ( * )  FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   "South"	department_store
SELECT count ( * )  FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   "West"	department_store
SELECT T1.store_address FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   "East"	department_store
SELECT T1.store_phone FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   "West"	department_store
SELECT T1.store_email FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   "West"	department_store

SELECT max ( product_price )  ,  min ( product_price )  FROM products GROUP BY product_type_code ORDER BY product_type_code	department_store
SELECT product_name  FROM products	department_store

SELECT count ( distinct department_id )  from Staff_Department_Assignments	department_store
SELECT job_title_code from Staff_Department_Assignments where department_id  =  5	department_store
SELECT count ( * )  from Staff_Department_Assignments where job_title_code  =  "Department Manager"	department_store

SELECT customer_address FROM customers	department_store
SELECT order_date FROM customer_orders	department_store
SELECT customer_phone FROM customers	department_store

SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2	department_store
SELECT avg ( T2.product_price )  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2	department_store
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 AND T2.product_price  >   ( SELECT avg ( T2.product_price )  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 ) 	department_store

SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 1	department_store
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2 except SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 1	department_store
SELECT store_name FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2	department_store
SELECT store_address FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2	department_store
SELECT store_email FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2	department_store

SELECT avg ( product_price )  FROM products	department_store
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products ) 	department_store
SELECT product_name FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products )  ) 	department_store
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products ) 	department_store
SELECT product_name FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products )  ) 	department_store
SELECT product_price FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products )  ) 	department_store

SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   "bus" OR How_to_Get_There   =   "walk"	cre_Theme_park
SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   "bus" OR How_to_Get_There   =   "walk"	cre_Theme_park
SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   "shuttle"	cre_Theme_park
SELECT Name,opening_hours  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   "shuttle"	cre_Theme_park
SELECT Name,Location_ID  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   "shuttle"	cre_Theme_park

SELECT count ( * )  FROM Visitors	cre_Theme_park
SELECT count ( distinct Tourist_Attraction_ID )  FROM Visits	cre_Theme_park
select count  ( * )  from  ( SELECT * FROM Visits as T1 join Visitors as T2 on T1.tourist_id  =  T2.tourist_id group by T1.tourist_id having count ( * )  >1 ) 	cre_Theme_park
SELECT count ( * )  FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) 	cre_Theme_park

SELECT name from tourist_attractions	cre_Theme_park
SELECT name from tourist_attractions where how_to_get_there  =  "bus"	cre_Theme_park
SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  "254 Ottilie Junction"	cre_Theme_park
SELECT T1.location_Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T2.how_to_get_there  =  "bus"	cre_Theme_park
SELECT T1.address FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T2.how_to_get_there  =  "bus"	cre_Theme_park

SELECT distinct ( Name )  FROM Tourist_Attractions	cre_Theme_park
SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Vincent"	cre_Theme_park
SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Vivian"	cre_Theme_park
SELECT Tourist_Details FROM Visitors WHERE Tourist_Details ! =  "Vivian" and Tourist_Details! =  "Vincent"	cre_Theme_park

SELECT DISTINCT Name FROM Tourist_attractions	cre_Theme_park
SELECT Name, Tourist_attraction_ID FROM Tourist_attractions	cre_Theme_park
SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT ( * )  FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID	cre_Theme_park

SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Alison"	cre_Theme_park
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Rosalind"	cre_Theme_park

SELECT Name ,  Tourist_Attraction_ID FROM Tourist_Attractions	cre_Theme_park
SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    > =    2	cre_Theme_park
SELECT T1.Name ,  count ( * )  FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    > =    2	cre_Theme_park

SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  "game1"	cre_Theme_park
SELECT T2.name  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  "game1"	cre_Theme_park
SELECT T2.How_to_Get_There  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  "game1"	cre_Theme_park
SELECT T2.Opening_Hours  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  "game1"	cre_Theme_park
SELECT T2.Other_Details  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  "game1"	cre_Theme_park

SELECT count ( * )  FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) 	cre_Theme_park
SELECT Tourist_Details FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) 	cre_Theme_park
SELECT T1.Tourist_Details FROM Visitors AS T1 JOIN Visits AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID ORDER BY Visit_Date LIMIT 1	cre_Theme_park

SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID	cre_Theme_park
SELECT  T3.visit_date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Vincent" union SELECT  T3.VISIT_DATE FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Marcelle"	cre_Theme_park
SELECT T1.Name,T3.visit_date,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Vincent" union SELECT T1.Name,T3.VISIT_DATE,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   "Marcelle"	cre_Theme_park

SELECT  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1	cre_Theme_park
SELECT  T1.Attraction_Type_Description FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1	cre_Theme_park
SELECT  T2.Name  FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code where Attraction_Type_Description  =  "gallery"	cre_Theme_park
SELECT count ( * )  FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code where Attraction_Type_Description  =  "gallery"	cre_Theme_park
SELECT Opening_Hours  FROM  Tourist_Attractions  where  Name = "haunted mansion"	cre_Theme_park

select count ( * )  from hotels WHERE price_range  >  10000	cre_Theme_park
select max ( star_rating_code )  from hotels WHERE price_range  >  10000	cre_Theme_park
SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range > 10000	cre_Theme_park

select Tourist_Attraction_ID,Location_ID,Name from Tourist_Attractions where How_to_Get_There = 'bus'	cre_Theme_park
select Location_ID from Tourist_Attractions	cre_Theme_park
select Location_ID,Attraction_Type_Code from Tourist_Attractions	cre_Theme_park

SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   "Vincent"	cre_Theme_park
SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   "Vincent"	cre_Theme_park
SELECT Visit_Date  FROM visits where visit_date < "2013-01-01 00:00:00"	cre_Theme_park
SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   "Toney"	cre_Theme_park
SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   "Graciela"	cre_Theme_park

SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT age FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT weight FROM Dogs WHERE age = 2 ORDER BY weight DESC LIMIT 1	dog_kennels

SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels

SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   desc limit 1	dog_kennels
SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by COUNT ( * )   limit 1	dog_kennels
select count ( * )  from  ( SELECT * FROM Professionals AS T1 JOIN Treatments AS T2 group by T2.professional_id having count ( * )  < =  3 ) 	dog_kennels

SELECT count ( * )  FROM Dogs	dog_kennels
SELECT age FROM Dogs where name  =  "Kacey"	dog_kennels
SELECT name FROM Dogs order by weight desc limit 1	dog_kennels
SELECT size_code FROM Dogs where breed_code  =  "BUL"	dog_kennels

SELECT count ( * )  FROM Owners	dog_kennels
SELECT age FROM Dogs ORDER BY age ASC LIMIT 1	dog_kennels
SELECT name FROM Dogs ORDER BY age ASC LIMIT 1	dog_kennels
SELECT T1.first_name, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T2.name  =  "Evangeline"	dog_kennels

SELECT count ( * )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT min ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT max ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels
SELECT avg ( age )  FROM Dogs WHERE dog_id IN  (  SELECT dog_id FROM Treatments  ) 	dog_kennels

SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code GROUP BY T1.breed_name ORDER BY count ( * )  DESC LIMIT 1	dog_kennels
SELECT count ( * )  FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code   =   T2.breed_code where T1.breed_name  =  "Bulldog"	dog_kennels

SELECT name,cost_of_treatment  FROM Dogs join Treatments	dog_kennels
SELECT name FROM Dogs WHERE dog_id NOT IN (  SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum ( cost_of_treatment )   <  1000  ) 	dog_kennels

SELECT first_name, last_name FROM professionals	dog_kennels
SELECT first_name, last_name FROM professionals  WHERE city LIKE '%West%'	dog_kennels
SELECT role_code , street , city , state FROM professionals WHERE first_name  =  "Taryn"	dog_kennels
SELECT first_name,state FROM professionals	dog_kennels
SELECT first_name FROM professionals WHERE state  =  "Indiana"	dog_kennels

SELECT professional_id  FROM Professionals	dog_kennels
SELECT professional_id, role_code  FROM Professionals	dog_kennels
SELECT professional_id , role_code , email_address FROM Professionals EXCEPT SELECT T1.professional_id , T1.role_code , T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id	dog_kennels

SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners	dog_kennels
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs	dog_kennels
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners UNION SELECT name FROM Dogs	dog_kennels

SELECT T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id order by count ( * )   desc limit 1	dog_kennels
SELECT T1.professional_id  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    > =    2	dog_kennels
select count ( * )  from  ( SELECT *  FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id GROUP BY T1.professional_id HAVING count ( * )    =  1 ) 	dog_kennels

SELECT T1.first_name , T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.owner_id   =  1	dog_kennels
SELECT name  FROM Dogs  WHERE age  =  6	dog_kennels
SELECT  name  FROM  Dogs WHERE age >5	dog_kennels
SELECT T2.name  FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id   =   T2.owner_id WHERE T1.state   = "Virginia"	dog_kennels

SELECT street FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"	dog_kennels
SELECT home_phone FROM Owners WHERE first_name  =  "Nora" and last_name  =  "Haley"	dog_kennels
SELECT email_address FROM Owners WHERE first_name  =  "Jaclyn" and last_name  =  "Stoltenberg"	dog_kennels
SELECT first_name FROM Owners WHERE last_name  =  "DuBuque"	dog_kennels

SELECT DISTINCT first_name FROM professionals	dog_kennels
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code	dog_kennels
SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code	dog_kennels

SELECT count ( distinct professional_id )  from professionals	dog_kennels
SELECT T1.professional_id, T1.first_name ,  T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code	dog_kennels
SELECT T1.professional_id, T1.first_name, T3.treatment_type_code FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id   =   T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code   =   T3.treatment_type_code order by T2.date_of_treatment desc limit 5	dog_kennels

SELECT headquarters FROM company WHERE main_industry   =   'Banking' GROUP BY headquarters HAVING count ( * )    > =    2	gas_company
SELECT company from company where main_industry  =  "Banking"	gas_company
SELECT company,headquarters from company where main_industry  =  "Banking"	gas_company

select avg ( market_value )  from company	gas_company
select Company from company order by assets_billion desc limit 1	gas_company
select avg ( sales_billion )  from company where rank  =  1 or rank  =  2 or rank  =  3	gas_company

SELECT Profits_billion FROM company where company  =  "ExxonMobil"	gas_company
SELECT Company FROM company where Market_Value  =  213.7	gas_company
SELECT Headquarters FROM company where Company  =  "General Electric"	gas_company

SELECT company  FROM company WHERE company_id = '1'	gas_company
SELECT company ,  main_industry FROM company WHERE company_id IN  ( SELECT company_id FROM station_company ) 	gas_company
SELECT company ,  main_industry FROM company WHERE company_id not IN  ( SELECT company_id FROM station_company ) 	gas_company

SELECT count ( * )  from gas_station where open_year > 2000	gas_company
SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1	gas_company
select location from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) 	gas_company
select location, vice_manager_name from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) 	gas_company
select location, open_year from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) 	gas_company

SELECT donator_name FROM endowment	school_finance
SELECT count ( distinct donator_name )  FROM endowment	school_finance

Select donator_name from endowment where amount > 8.5	school_finance
SELECT T2.School_id FROM endowment AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count ( * )   >  1	school_finance
SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count ( * )   >  1	school_finance

SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  DESC	school_finance
SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  DESC limit 1	school_finance
SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  asc limit 1	school_finance

SELECT location FROM school where school_id  =  1	school_finance
SELECT amount FROM endowment where donator_name  =  "Distrito Nacional"	school_finance

SELECT count ( * ) FROM school	school_finance
SELECT school_name FROM school	school_finance
SELECT location FROM school where school_name  =  "Bremen"	school_finance

SELECT avg ( enrollment )  FROM school	school_finance
SELECT max ( enrollment )  FROM school	school_finance
SELECT min ( enrollment )  FROM school	school_finance
SELECT School_name FROM school order by Enrollment desc limit 1	school_finance
SELECT School_name FROM school order by Enrollment  limit 1	school_finance

SELECT amount  FROM endowment ORDER BY amount DESC LIMIT 1	school_finance
SELECT donator_name FROM endowment ORDER BY amount DESC LIMIT 1	school_finance
SELECT donator_name FROM endowment ORDER BY amount ASC LIMIT 1	school_finance

SELECT mascot FROM school WHERE enrollment  >   ( SELECT avg ( enrollment )  FROM school ) 	school_finance
SELECT Location from School where School_name  =  "Glenn"	school_finance
SELECT Enrollment from School where School_name  =  "Culver Community"	school_finance

SELECT T3.course_name ,  count ( * )   FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id GROUP BY T2.course_id	student_assessment
SELECT T2.student_id  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id where T3.course_name  =  'statistics'	student_assessment
SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id where T3.course_name  =  'statistics'	student_assessment

SELECT count ( course_id )  FROM Student_Course_Registrations WHERE student_id  =  121	student_assessment
SELECT count ( * )  FROM Student_Course_Attendance WHERE  student_id  =  121	student_assessment
SELECT course_id FROM student_course_registrations WHERE student_id  =  121 UNION SELECT course_id FROM student_course_attendance WHERE student_id  =  121	student_assessment

SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1	student_assessment

select email_address from people	student_assessment
SELECT T2.candidate_id,T1.email_address FROM people AS T1 JOIN candidates AS T2 ON T1.person_id  =  T2.candidate_id	student_assessment
select T2.candidate_id, T1.email_address from people AS T1 JOIN Candidates as T2 ON T1.person_id  =  T2.candidate_id WHERE T1.email_address  =  'stanley.monahan@example.org'	student_assessment

SELECT course_name FROM courses WHERE course_id  =  301 or course_id  =  302	student_assessment
SELECT date_of_attendance FROM student_course_attendance WHERE student_id  =  111 or student_id  =  121	student_assessment
SELECT count ( * )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  "English"	student_assessment

SELECT T3.student_details, T1.city, T1.line_1 FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id  =  T2.address_id JOIN students AS T3 ON T2.person_id  =  T3.student_id ORDER BY  date_from DESC LIMIT 3	student_assessment

SELECT student_id FROM student_course_attendance WHERE course_id  =  301	student_assessment
SELECT student_id FROM student_course_attendance WHERE course_id  =  301 ORDER BY date_of_attendance LIMIT 1	student_assessment
SELECT student_id FROM student_course_attendance WHERE course_id  =  301 ORDER BY date_of_attendance DESC LIMIT 1	student_assessment

SELECT count ( * )  from students	student_assessment
SELECT distinct T1.student_id FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id	student_assessment
SELECT T1.student_id ,  count ( * )  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id	student_assessment

SELECT T3.first_name,T3.middle_name,T3.last_name FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T1.candidate_id  =  111	student_assessment
SELECT T3.email_address FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T3.login_name  =  "zops"	student_assessment
SELECT T2.assessment_date FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T2.candidate_id  =  121	student_assessment

SELECT * FROM student_course_registrations WHERE student_id NOT IN  ( SELECT student_id FROM student_course_attendance ) 	student_assessment
SELECT * FROM student_course_registrations WHERE student_id IN  ( SELECT student_id FROM student_course_attendance ) 	student_assessment
SELECT registration_date FROM student_course_registrations	student_assessment

SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )    > =    2	journal_committee
SELECT T1.Age FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )    > =    2	journal_committee
SELECT T2.work_type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID where T1.name  =  "Kamila Porczyk"	journal_committee
SELECT T1.name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID order by T1.age asc limit 1	journal_committee

SELECT avg ( T1.sales )  FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID   =   T2.journal_ID WHERE T2.work_type   =   'Photo'	journal_committee
SELECT t1.journal_id FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID   =   T2.journal_ID WHERE T2.work_type   =   'Photo'	journal_committee

SELECT Name FROM editor ORDER BY Age ASC LIMIT 1	journal_committee
SELECT age FROM editor ORDER BY Age ASC LIMIT 1	journal_committee
SELECT name FROM editor ORDER BY Age ASC LIMIT 1	journal_committee
SELECT name FROM editor ORDER BY Age desc LIMIT 1	journal_committee

SELECT name FROM singer	concert_singer
SELECT T2.name ,  count ( * )  FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id   =   T2.singer_id GROUP BY T2.singer_id	concert_singer

SELECT  count ( * )  FROM concert	concert_singer
SELECT T2.name , count ( * )  FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id	concert_singer
SELECT capacity from stadium where name  =  "Stark s Park"	concert_singer
SELECT concert_name from concert	concert_singer

SELECT year from concert where concert_name  =  "Auditions"	concert_singer
SELECT year from concert where concert_name  =  "Super bootcamp"	concert_singer
SELECT year from concert where concert_name  =  "Home Visits"	concert_singer
SELECT count ( * )  FROM concert WHERE YEAR   =   2014 OR YEAR   =   2015	concert_singer
SELECT count ( * )  FROM concert WHERE YEAR   =   2014	concert_singer
SELECT count ( * )  FROM concert WHERE YEAR   =   2015	concert_singer

SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id   =   T2.stadium_id WHERE T1.Year   =   2015	concert_singer
SELECT year from concert where concert_name like "%Super bootcamp%"	concert_singer
SELECT year from concert where concert_name like "%Auditions%"	concert_singer
SELECT T1.name from stadium as T1 join  concert as T2 on T1.stadium_id  =  T2.stadium_id where T2.concert_name like "%Auditions%"	concert_singer
SELECT T2.name , T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 or T1.Year  =  2015	concert_singer

SELECT country FROM singer WHERE age  >  40	concert_singer
SELECT DISTINCT ( country )  FROM singer WHERE age  < 30	concert_singer
SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30	concert_singer

SELECT T2.concert_name , T2.theme , count ( * )  FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id	concert_singer
SELECT Year FROM concert WHERE concert_Name  =  "Super bootcamp"	concert_singer
SELECT Stadium_ID FROM concert WHERE concert_Name  =  "Super bootcamp"	concert_singer

SELECT song_name FROM singer WHERE song_release_year  >   ( SELECT avg ( song_release_year )  FROM singer ) 	concert_singer
SELECT avg ( song_release_year )  FROM singer	concert_singer
SELECT song_name from singer order by song_release_year	concert_singer
SELECT song_name FROM singer WHERE age  >   ( SELECT avg ( age )  FROM singer ) 	concert_singer

SELECT Name FROM singer ORDER BY age LIMIT 1	concert_singer
SELECT Song_Name FROM singer where name  =  'Tribal King'	concert_singer
SELECT song_release_year FROM singer where name  =  'Tribal King'	concert_singer

SELECT count ( * )  FROM stadium WHERE average > 1000	concert_singer
SELECT name FROM stadium ORDER BY average LIMIT 1	concert_singer
SELECT name FROM stadium ORDER BY average DESC LIMIT 1	concert_singer

SELECT name FROM stadium WHERE stadium_id NOT IN  ( SELECT stadium_id FROM concert ) 	concert_singer
SELECT name FROM stadium ORDER BY Highest DESC LIMIT 1	concert_singer

SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1	concert_singer
SELECT song_name ,  song_release_year FROM singer ORDER BY age desc LIMIT 1	concert_singer
SELECT Name FROM singer ORDER BY age LIMIT 1	concert_singer
SELECT Name, age FROM singer ORDER BY age desc LIMIT 1	concert_singer
SELECT Country FROM singer ORDER BY age desc LIMIT 1	concert_singer
SELECT Name FROM singer where country  =  'United States'	concert_singer

SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Firefox'	browser_web
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Fasterfox'	browser_web
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'CACHEbox'	browser_web
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Fasterfox'	browser_web

SELECT name FROM web_client_accelerator WHERE client  =  'user'	browser_web
SELECT name FROM web_client_accelerator WHERE client  =  'user' and name LIKE "%Opera%"	browser_web
SELECT Operating_system FROM web_client_accelerator WHERE client  =  'End user, ISP'	browser_web

SELECT market_share FROM browser where name  =  "Internet Explorer"	browser_web
SELECT market_share FROM browser where name  =  "Firefox"	browser_web
SELECT market_share FROM browser where name  =  "Safari"	browser_web

SELECT Operating_system FROM Web_client_accelerator WHERE Connection  =  "Broadband, Satellite, Wireless, Fiber, DSL"	browser_web
SELECT market_share FROM browser WHERE name  =  "Safari"	browser_web
SELECT T2.compatible_since_year FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.accelerator_id WHERE T1.name  =  "CProxy"	browser_web
SELECT COUNT ( * )  FROM browser	browser_web
SELECT name  FROM browser	browser_web

SELECT T1.id  FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	browser_web
select name from browser where id  =  1	browser_web
select name from browser order by market_share limit 2	browser_web
select t1.name from browser as T1 join accelerator_compatible_browser as T2 on T1.id  =  T2.browser_id order by compatible_since_year asc limit 1	browser_web

SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT ( * )   >  1	musical
SELECT name FROM musical GROUP BY Nominee HAVING COUNT ( * )   > 1	musical
SELECT year FROM musical GROUP BY Nominee HAVING COUNT ( * )   > 1	musical
SELECT distinct nominee FROM musical where year  =  1986 and nominee ! =  "Bob Fosse"	musical
SELECT name FROM musical where year  =  1986 and nominee  =  "Cleavant Derricks"	musical
SELECT name, category FROM musical where year  =  1986 and nominee  =  "Cleavant Derricks"	musical

select name from musical where year  =  1986 and category  =  'Best Book of a Musical' and Result  =  'Nominated'	musical
SELECT count ( T1.Name )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE  t2.year  =  1986 and t2.category  =  'Best Book of a Musical' and t2.Result  =  'Nominated'	musical
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE t2.year  =  1986 and t2.category  =  'Best Book of a Musical' and t2.Result  =  'Nominated'	musical

SELECT DISTINCT Award FROM musical WHERE Nominee  =  "Bob Fosse"	musical
SELECT DISTINCT Award FROM musical WHERE Nominee  =  "Cleavant Derricks"	musical
SELECT Category FROM musical WHERE Nominee  =  "Cleavant Derricks" AND Result  =  "Won"	musical
SELECT Category FROM musical WHERE Nominee  =  "Cleavant Derricks" AND Result  =  "Nominated"	musical
SELECT Category FROM musical WHERE Nominee  =  "Bob Fosse" AND Result  =  "Won"	musical

SELECT count ( * )  FROM musical WHERE Nominee  =  "Bob Fosse"	musical

SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * )  desc limit 1	musical
SELECT T2.Year FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * )  desc limit 1	musical
SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID where T1.Character  =  "Lou Carpenter"	musical

SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * )    > =    3	musical
SELECT DISTINcT ( T2.Year )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE T2.musical_ID  =  6	musical
SELECT DISTINCT ( T2.Name )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE T2.musical_ID  =  6	musical

SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * )   >  3	musical

select Name from technician where Team = 'CLE' or team = 'CWS'	machine_repair
select Starting_Year from technician where Team = 'CLE' or team = 'CWS'	machine_repair
SELECT Starting_Year FROM technician WHERE Team  =  "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  "CWS"	machine_repair
select max ( Starting_Year ) ,min ( Starting_Year )  from technician	machine_repair

SELECT count ( * )  from technician	machine_repair
SELECT T2.Name ,  T1.machine_id FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID   =   T2.technician_ID	machine_repair
SELECT T2.Name ,  T1.machine_id,T2.starting_year,T2.age FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID   =   T2.technician_ID	machine_repair

SELECT name from technician where team  =  "CLE"	machine_repair
SELECT name from technician where team  =  "CWS"	machine_repair
SELECT Starting_Year FROM technician WHERE Team   =   "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team   =   "CWS"	machine_repair

SELECT Name FROM technician	machine_repair
SELECT machine_id FROM repair_assignment	machine_repair
SELECT technician_id, age FROM technician	machine_repair
SELECT Name FROM technician WHERE technician_id NOT IN  ( SELECT technician_id FROM repair_assignment ) 	machine_repair

select name from technician	machine_repair
SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID	machine_repair
SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  2	machine_repair
SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  2 order by quality_rank	machine_repair
SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  1 order by quality_rank	machine_repair
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID ORDER BY T2.quality_rank	machine_repair

SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city JOIN MATCH AS T3 ON T2.match_id  =  T3.match_id WHERE T1.city  =  "Hangzhou  (  Zhejiang  ) " AND T3.competition  =  "1994 FIFA World Cup qualification"	city_record
SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city JOIN MATCH AS T3 ON T2.match_id  =  T3.match_id WHERE T1.city  =  "Nanjing  (  Jiangsu  ) " AND T3.competition  =  "1994 FIFA World Cup qualification"	city_record
SELECT GDP FROM city WHERE city  =  "Shanghai"	city_record

SELECT count ( city )  FROM city WHERE regional_population  >  8000000	city_record
SELECT count ( city )  FROM city WHERE regional_population  <  5000000	city_record
SELECT city FROM city WHERE regional_population  <  5000000	city_record

SELECT distinct T1.city FROM city AS T1 JOIN hosting_city as T2 on T1.city_id  =  T2.host_city	city_record
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city	city_record

SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3	city_record
SELECT avg ( GDP )  FROM city	city_record

SELECT t1.city  FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city GROUP BY t2.Host_City HAVING count ( * )   >  1	city_record
SELECT distinct t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city where t1.city  =  'Nanjing  (  Jiangsu  ) '	city_record
SELECT t1.city ,t1.Hanzi FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city where t2.year =  2011	city_record

SELECT YEAR FROM hosting_city ORDER BY YEAR DESC LIMIT 1	city_record
SELECT MATCH_ID FROM hosting_city WHERE YEAR  =  2013	city_record
SELECT hOST_CITY FROM hosting_city WHERE YEAR  =  2013	city_record

SELECT T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city WHERE T2.match_id  =  1	city_record
SELECT gdp FROM city where city_id  =  2	city_record
SELECT Hanyu_Pinyin FROM city where city  =  "Nanjing  (  Jiangsu  ) "	city_record
SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  "Taizhou  (  Zhejiang  ) "	city_record

SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id order by Mar  limit  1	city_record
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar < T2.Jul	city_record
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE  T2.Mar > T2.Oct	city_record

SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T2.year  > 2009	city_record
SELECT count ( distinct City )   from city	city_record
SELECT avg ( GDP )  from city	city_record
SELECT max ( GDP )  from city	city_record

SELECT count ( distinct City )  from city	city_record
SELECT Regional_Population from city WHERE City  =  "Hangzhou  (  Zhejiang  ) "	city_record
SELECT City_ID from city WHERE City  =  "Nanjing  (  Jiangsu  ) "	city_record

SELECT T1.city FROM city AS T1 JOIN  hosting_city AS T4 ON T1.city_id   =   T4.host_city	city_record
SELECT city  FROM city  where  City_ID  not  in  (  select  Host_City from hosting_city ) 	city_record
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city	city_record
SELECT T2.Mar,T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T1.City = "Hangzhou  (  Zhejiang  ) "  or T1.City = "Nantong  (  Jiangsu  ) "	city_record

SELECT count ( * )  FROM Student WHERE city_code   =   "HKG" OR city_code   =   "CHI"	allergy_1

SELECT Major FROM Student group by Major  order by count ( * )  desc limit 1	allergy_1
SELECT LName,Fname FROM Student WHERE age   =    ( SELECT max ( age )  FROM Student ) 	allergy_1
SELECT StuID FROM Student WHERE age   =    ( SELECT max ( age )  FROM Student ) 	allergy_1

SELECT lname FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy   =   "Cat" ) 	allergy_1
SELECT lname ,  age FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy   =   "Cat" ) 	allergy_1

SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  DESC LIMIT 1	allergy_1
SELECT Allergy FROM Has_allergy where StuID  =  1001	allergy_1
SELECT Allergy FROM Has_allergy where StuID  =  1002	allergy_1

SELECT StuID FROM Has_allergy	allergy_1
SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "animal"	allergy_1
SELECT age FROM Student WHERE StuID IN  (  SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "animal" ) 	allergy_1
SELECT avg ( age )  FROM Student WHERE StuID IN  (  SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "animal" ) 	allergy_1

SELECT t2.fname ,  t2.lname FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID	allergy_1
SELECT count ( * )  FROM Student WHERE StuID NOT IN  ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID ) 	allergy_1
SELECT lname, fname FROM Student WHERE StuID NOT IN  ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID ) 	allergy_1

SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1	allergy_1
select avg ( age )  from student where major  =   ( SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) 	allergy_1
select sex from student where major  =   ( SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) 	allergy_1

select count ( Allergy )  from Allergy_Type where AllergyType  =  'food'	allergy_1
select count ( Allergy )  from Allergy_Type where AllergyType  =  'animal'	allergy_1
select count ( Allergy )  from Allergy_Type where AllergyType  =  'environmental'	allergy_1

SELECT count ( * )  FROM Student WHERE sex   =   "M" AND StuID IN  ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   "food" ) 	allergy_1
SELECT T3.Fname, T3.Lname,T2.Allergy FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student as T3 on T3.StuID = T1.StuID WHERE T2.allergytype  =  "food" and T3.sex = 'M'	allergy_1
SELECT count ( * )  FROM Has_allergy AS T1 JOIN Student as T2 on T2.StuID = T1.StuID WHERE T1.Allergy  =  "Cat" and T2.sex = 'F'	allergy_1

SELECT count ( distinct allergy )  FROM Has_allergy	allergy_1
SELECT  ALLERGY FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID  =  T2.STUID GROUP BY ALLERGY ORDER BY COUNT ( * )  DESC LIMIT 1	allergy_1
SELECT COUNT ( * )  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID  =  T2.STUID where ALLERGY  =  "Tree Pollen" and t1.sex  =  "M"	allergy_1
SELECT count ( * )  FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   "Soy" ) 	allergy_1
SELECT count ( * )  FROM Student WHERE StuID NOT IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   "Soy" ) 	allergy_1
SELECT fname ,  major FROM Student WHERE StuID NOT IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   "Soy" ) 	allergy_1

SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  DESC LIMIT 1	allergy_1
SELECT count ( StuID )  FROM Has_allergy where Allergy = 'Tree Pollen'	allergy_1
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  asc  LIMIT 1	allergy_1

SELECT T1.Allergy FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student AS T3 ON T3.StuID   =   T2.StuID WHERE T3.Fname   =   "Lisa"	allergy_1
SELECT T1.Allergy  FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student AS T3 ON T3.StuID   =   T2.StuID WHERE T3.Fname   =   "Lisa" AND T1.AllergyType  =  "food"	allergy_1

SELECT name FROM airport	flight_company
SELECT COUNT ( DISTINCT name )  FROM airport	flight_company
SELECT country FROM Airport WHERE name  =  "Akureyri Airport"	flight_company
SELECT City from airport where name  =  "Schiphol Airport"	flight_company

SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.country   =   'United States'	flight_company
SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.name  =  'Billund Airport'	flight_company
SELECT T2.pilot, T2.velocity FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.name  =  'Ted Stevens Airport'	flight_company

select Vehicle_Flight_number from flight order by Velocity limit 1	flight_company
select distinct Principal_activities from operate_company where name = 'Air Hong Kong'	flight_company
SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity < 200	flight_company
select type from operate_company where name = 'Air China'	flight_company

SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1	flight_company
SELECT count ( DISTINCT name )  FROM operate_company WHERE Type  =  'Subsidiary'	flight_company
SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * )  ASC LIMIT 1	flight_company

SELECT count ( * )  FROM airport WHERE id IN  (  SELECT airport_id FROM flight WHERE pilot   =   'Thompson'  ) 	flight_company
SELECT count ( * )  FROM airport as T1 JOIN flight as T2 on T1.id  =  T2.airport_id WHERE T2.pilot   =   'Thompson' and T2.date > 'August 16, 1963'	flight_company
SELECT Vehicle_Flight_number FROM flight WHERE pilot   =   'Thompson' and date  =  'March 1, 1963'	flight_company

SELECT distinct pilot FROM flight	flight_company
SELECT pilot FROM flight GROUP BY pilot ORDER BY count ( * )  DESC LIMIT 1	flight_company

SELECT count ( * )  FROM flight WHERE pilot   =   'Thompson'	flight_company
SELECT name FROM airport WHERE id NOT IN  (  SELECT airport_id FROM flight WHERE pilot   =   'Thompson'  ) 	flight_company

SELECT Date FROM flight ORDER BY Date LIMIT 1	flight_company
SELECT Pilot FROM flight ORDER BY Date LIMIT 1	flight_company
SELECT AVG ( Altitude )  FROM flight	flight_company

SELECT count ( * )  from singer	singer
SELECT citizenship from singer where name  =  "Alice Walton"	singer
SELECT Sales from song where song_id  =  3	singer

SELECT Name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949	singer
SELECT Citizenship FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949	singer
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1	singer
SELECT name,Net_Worth_Millions FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions desc limit 1	singer
SELECT name FROM singer WHERE Birth_Year   =   1948 OR Birth_Year   =   1949 order by Net_Worth_Millions limit 1	singer

SELECT Name FROM singer	singer

SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  DESC LIMIT 1	singer
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT ( * )  ASC LIMIT 1	singer
SELECT name FROM singer where Citizenship = 'Australia'	singer

SELECT * FROM singer WHERE Birth_Year  <  1945	singer
SELECT * FROM singer WHERE Birth_Year  >  1955	singer
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945	singer
SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 or Birth_Year  >  1955	singer
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States'	singer
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'United States' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'United States'	singer
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France'	singer
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'France' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'France'	singer
SELECT * FROM singer WHERE Birth_Year  <  1945 and Citizenship  =  'Chile' UNION SELECT * FROM singer WHERE Birth_Year  >  1955 and Citizenship  =  'Chile'	singer

SELECT avg ( loser_age )  FROM matches	wta_1
SELECT avg ( winner_age )  FROM matches	wta_1
SELECT avg ( minutes )  FROM matches	wta_1
SELECT max ( minutes )  FROM matches	wta_1
SELECT min ( minutes )  FROM matches	wta_1

SELECT distinct tourney_name FROM matches	wta_1

SELECT birth_date FROM players where player_id = 200002	wta_1
SELECT first_name FROM players where player_id = 200001	wta_1
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )  > 50	wta_1

SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  DESC LIMIT 1	wta_1
SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1	wta_1
SELECT YEAR, count ( * )  FROM matches GROUP BY YEAR ORDER BY count ( * )  LIMIT 1	wta_1
SELECT year, count ( * )  from matches where year  =  2016	wta_1
SELECT count ( * )  from matches where surface  =  "Hard"	wta_1

SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   >  50	wta_1
SELECT country_code FROM players GROUP BY country_code HAVING count ( * )   <  40	wta_1
SELECT first_name,last_name FROM players where country_code = 'AHO'	wta_1
SELECT player_id FROM players where country_code = 'AHO'	wta_1
SELECT hand FROM players where player_id = 206449	wta_1
SELECT count ( * )  FROM players where hand = 'U'	wta_1

SELECT count ( * )  FROM players	wta_1
SELECT first_name FROM players	wta_1
SELECT country_code FROM players  where first_name  =  "Mirjana"	wta_1
SELECT birth_date FROM players  where first_name  =  "Mirjana"	wta_1

SELECT winner_name  FROM matches ORDER BY winner_age LIMIT 3	wta_1
SELECT DISTINCT winner_name,  winner_rank FROM matches ORDER BY winner_age LIMIT 3	wta_1
SELECT loser_name FROM matches ORDER BY winner_age LIMIT 3	wta_1

SELECT first_name FROM players WHERE player_id  =  200001	wta_1
SELECT birth_date FROM players WHERE player_id  =  200001	wta_1
SELECT country_code FROM players WHERE player_id  =  200003	wta_1
SELECT last_name FROM players WHERE player_id  =  200003	wta_1

SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1	wta_1
SELECT score FROM matches ORDER BY minutes DESC LIMIT 1	wta_1

SELECT count ( * )  FROM matches WHERE YEAR   =   2013	wta_1
SELECT count ( * )  FROM matches WHERE YEAR   =   2016	wta_1
SELECT distinct loser_id  FROM  matches where loser_name   = "Petra Kvitova"	wta_1

SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   >  50	station_weather
SELECT t2.id ,  t2.network_name, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   >  50	station_weather
SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   <  10	station_weather
SELECT min ( precipitation )  FROM weekly_weather	station_weather
SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.precipitation  =  10	station_weather
SELECT t2.id,t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.precipitation  =  10	station_weather
SELECT t1.high_temperature,t1.wind_speed_mph FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.day_of_week  = 'Friday' and T2.network_name = 'Amersham'	station_weather

SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 1	station_weather
SELECT count ( * )  FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 1	station_weather
SELECT t2.station_id FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 3	station_weather

SELECT TIME  FROM train WHERE destination   =   'Chennai'	station_weather
SELECT name FROM train WHERE destination   =   'Chennai'	station_weather
SELECT origin FROM train WHERE name  =  "Ananthapuri Express"	station_weather

SELECT max ( t1.low_temperature )  FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id WHERE t2.network_name   =   "Amersham"	station_weather
SELECT t1.day_of_week FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id WHERE t2.network_name   =   "Amersham" order by low_temperature desc  limit 1	station_weather
SELECT avg ( t1.precipitation )  FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  "Amersham"	station_weather

SELECT  t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id ORDER BY avg ( high_temperature )  DESC LIMIT 1	station_weather
SELECT ID FROM station WHERE network_name  =  "Chorleywood"	station_weather
SELECT local_authority FROM station WHERE network_name  =  "Chorleywood"	station_weather

SELECT count ( * )   FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id	station_weather
SELECT t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id	station_weather
SELECT t1.network_name ,  t1.services,station_id FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id	station_weather

select low_temperature from weekly_weather	station_weather
select max ( low_temperature )  from weekly_weather	station_weather
select wind_speed_mph from weekly_weather	station_weather
select wind_speed_mph from weekly_weather order by wind_speed_mph	station_weather
select min ( wind_speed_mph ) , max ( wind_speed_mph )  from weekly_weather order by wind_speed_mph	station_weather
select day_of_week, min ( wind_speed_mph )  from weekly_weather order by wind_speed_mph	station_weather

SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * )    > =    2	company_employee
SELECT name FROM company where Headquarters  =  "China"	company_employee
SELECT industry FROM company where name  =  "PetroChina"	company_employee

select Name from company order by Sales_in_Billion desc limit 1	company_employee
select distinct Industry from company	company_employee

SELECT Nationality FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM employment ) 	company_employee
SELECT Graduation_college FROM people WHERE name  =  "Reggie Lewis"	company_employee

SELECT distinct  Headquarters FROM company WHERE Industry   =   "Banking"	company_employee
SELECT distinct Headquarters FROM company WHERE Industry  =  "Oil and gas"	company_employee
SELECT Headquarters FROM company WHERE Industry  =  "Banking" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  "Oil and gas"	company_employee

SELECT count ( distinct Headquarters )  FROM company	company_employee
SELECT Industry FROM company GROUP BY Industry ORDER BY COUNT ( * )  DESC LIMIT 1	company_employee
SELECT Name FROM company order  by Market_Value_in_Billion desc  limit 1	company_employee
SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT ( * )  DESC LIMIT 1	company_employee

SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID JOIN company AS T3 ON T1.Company_ID   =   T3.Company_ID WHERE T3.Sales_in_Billion  >  200	company_employee
SELECT avg ( T2.age )  FROM employment AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID JOIN company AS T3 ON T1.Company_ID   =   T3.Company_ID WHERE T3.Sales_in_Billion  >  200	company_employee

SELECT name FROM company WHERE Sales_in_Billion  >  200	company_employee
SELECT headquarters FROM company WHERE name  =  "BP"	company_employee
SELECT industry FROM company WHERE name  =  "BP"	company_employee

SELECT document_name, document_code FROM documents EXCEPT SELECT t1.document_name, t1.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id	document_management
SELECT count ( * )  FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id	document_management
SELECT document_type_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id	document_management

SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code	document_management
SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code HAVING count ( * )  > 4	document_management

SELECT count ( * )  FROM documents	document_management
SELECT document_name FROM documents ORDER BY access_count ASC LIMIT 1	document_management
SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1	document_management
SELECT  access_count FROM documents ORDER BY access_count DESC LIMIT 1	document_management
SELECT document_type_code FROM documents ORDER BY access_count DESC LIMIT 1	document_management

SELECT sum ( access_count )  FROM documents GROUP BY document_type_code ORDER BY count ( * )  DESC LIMIT 1	document_management
SELECT access_count FROM documents where document_type_code = 'Book'	document_management
SELECT access_count FROM documents where document_type_code = 'Paper'	document_management

SELECT count ( * )  FROM Document_Sections	document_management
SELECT access_count FROM Documents ORDER BY access_count DESC LIMIT 1	document_management
SELECT count ( DISTINCT section_title )  FROM Document_Sections	document_management

SELECT count ( t2.section_title )  FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   "David CV"	document_management
SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   "David CV"	document_management
SELECT t2.section_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   "David CV" and t2.section_title  =  "after"	document_management
SELECT t2.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   "David CV" and t2.section_title  =  "after"	document_management

SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1	document_management
SELECT role_code FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1	document_management
SELECT user_login FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1	document_management

SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.decision   =   'yes'	soccer_2
SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos  =  "goalie"	soccer_2
select state, enr from college where cName not in  ( SELECT DISTINCT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.decision  =  "yes" ) 	soccer_2

SELECT cName  FROM College WHERE enr  >  10000	soccer_2
SELECT * FROM College WHERE enr  >  10000 AND state  =  "LA"	soccer_2
SELECT enr FROM College WHERE enr  >  10000 AND state  =  "LA"	soccer_2

SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'goalie'	soccer_2
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'goalie'	soccer_2
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'striker'	soccer_2
SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'striker'	soccer_2
SELECT decision from Tryout WHERE pPos   =   'striker'	soccer_2

SELECT cName FROM tryout WHERE pPos   =   "goalie"	soccer_2
SELECT cName FROM tryout WHERE pPos  ! =   "goalie"	soccer_2

SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1	soccer_2
SELECT cName FROM tryout where pPos  =   ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1 ) 	soccer_2
SELECT decision FROM tryout where pPos  =   ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1 ) 	soccer_2
SELECT pPos FROM tryout where pPos ! =  "goalie"	soccer_2
SELECT cName FROM tryout where pPos ! =  "goalie"	soccer_2

SELECT max ( HS )  FROM Player	soccer_2
SELECT min ( HS )  FROM Player	soccer_2
SELECT avg ( HS )  FROM Player	soccer_2
SELECT pName from player order by HS limit 1	soccer_2
SELECT pName from player order by HS desc limit 1	soccer_2

SELECT count ( distinct pPos )  from tryout	soccer_2
SELECT * from player where hs > 1000	soccer_2
SELECT hs from player order by hs desc limit 1	soccer_2

SELECT count ( * )  FROM College WHERE enr  >  18000	soccer_2
SELECT cName FROM College WHERE enr  >  18000	soccer_2
SELECT enr FROM College WHERE cName  =  'OU'	soccer_2
SELECT enr FROM College WHERE cName  =  'LSU'	soccer_2
SELECT state FROM College WHERE cName  =  'LSU'	soccer_2
SELECT state FROM College WHERE cName  =  'OU'	soccer_2

SELECT pID,HS FROM Player	soccer_2
SELECT pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID GROUP BY T1.pPos order by min ( T2.HS )  limit 1	soccer_2
SELECT min ( T2.HS )  ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID where ppos  =  'mid' GROUP BY T1.pPos	soccer_2

SELECT count ( * ) FROM Player	soccer_2
SELECT  max ( HS )  FROM Player	soccer_2
SELECT  min ( HS )  FROM Player	soccer_2
SELECT avg ( HS )  FROM Player	soccer_2

SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName	soccer_2
SELECT cName  from Tryout  where  decision = "yes"	soccer_2
SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'	soccer_2

SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID WHERE T3.pName   =   'Charles'	soccer_2
SELECT T1.cName, T3.pID FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID	soccer_2
SELECT HS from Player where pName = 'Charles'	soccer_2
SELECT cName from College	soccer_2

SELECT cName FROM College WHERE state  =  'AZ'	soccer_2
SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName	soccer_2
SELECT cName FROM College WHERE enr = 22000	soccer_2
SELECT cName FROM College WHERE enr  >  12000  ORDER BY cName , state	soccer_2

SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'striker'	soccer_2
SELECT T1.pName,T2.decision FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'striker'	soccer_2
SELECT T1.pName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision  =  "no"	soccer_2
SELECT T1.pName,T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T1.HS > 700	soccer_2
SELECT T1.pName,T2.cName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T1.HS > 700	soccer_2

SELECT count ( * )  FROM  tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID WHERE T1.cName   =  "OU"	soccer_2
SELECT cName FROM college ORDER BY enr DESC LIMIT 1	soccer_2
SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID WHERE T1.cName   =   "OU"	soccer_2

SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'goalie'	soccer_2
SELECT hs FROM PLAYER WHERE pID  =  "10001"	soccer_2
SELECT T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.Pid   =   '10001'	soccer_2

SELECT cName FROM college	soccer_2
SELECT cName FROM college	soccer_2
SELECT cName, enr FROM college WHERE enr >  ( SELECT max ( enr )  FROM college WHERE state  =  'FL' ) 	soccer_2

SELECT COUNT ( * )  FROM  ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'mid'  ) 	soccer_2
SELECT COUNT ( * )  FROM  ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos ! =  'goalie'  ) 	soccer_2
SELECT cName from Tryout   where pPos = "goalie"	soccer_2

SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID and T1.pPos  =  'goalie' GROUP BY T1.pPos	soccer_2
SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID and T1.pPos  =  'striker' GROUP BY T1.pPos	soccer_2
SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID where T1.ppos  =  "mid" GROUP BY T1.pPos	soccer_2

SELECT pid FROM Player WHERE pName LIKE '%a%'	soccer_2
SELECT count ( * )  FROM Player WHERE pName LIKE '%a%' and yCard  =  "yes"	soccer_2
SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%' and yCard  =  "yes"	soccer_2

SELECT SUM ( enr )  FROM college WHERE state  =  'FL'	soccer_2
SELECT DISTINCT cName FROM college WHERE enr  >   ( SELECT min ( enr )  FROM college WHERE state   =   'FL' ) 	soccer_2
SELECT DISTINCT cName FROM college WHERE enr  >   ( SELECT min ( enr )  FROM college WHERE state   =   'OK' ) 	soccer_2
SELECT DISTINCT cName FROM college WHERE enr  <   ( SELECT max ( enr )  FROM college WHERE state   =   'OK' ) 	soccer_2
SELECT DISTINCT cName FROM college WHERE enr  <   ( SELECT max ( enr )  FROM college WHERE state   =   'FL' ) 	soccer_2

SELECT avg ( enr )  FROM college	soccer_2
SELECT DISTINCT state FROM college WHERE enr  >   ( SELECT avg ( enr )  FROM college ) 	soccer_2
SELECT count ( DISTINCT state )  FROM college WHERE enr  >   ( SELECT avg ( enr )  FROM college ) 	soccer_2

select * from Lots	tracking_share_transactions
SELECT lot_id FROM Lots EXCEPT SELECT T1.lot_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id   =   T2.lot_id	tracking_share_transactions
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id   =   T2.lot_id	tracking_share_transactions

SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100	tracking_share_transactions
SELECT date_of_transaction FROM TRANSACTIONS WHERE  amount_of_transaction  >  100	tracking_share_transactions
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100 OR amount_of_transaction  >  100	tracking_share_transactions

SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE T2.share_count  >  100	tracking_share_transactions
SELECT t2.transaction_id FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE T2.share_count  >  100	tracking_share_transactions
SELECT t2.transaction_type_code FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE t2.transaction_id  =  2	tracking_share_transactions

SELECT count ( * )  FROM TRANSACTIONS WHERE transaction_type_code   =   "PUR"	tracking_share_transactions
SELECT count ( * )  FROM TRANSACTIONS WHERE share_count  >50	tracking_share_transactions
SELECT min ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code   =   "PUR" AND share_count  >  50	tracking_share_transactions
SELECT count ( * )  FROM TRANSACTIONS WHERE transaction_type_code   =   "PUR" AND share_count  >  50	tracking_share_transactions

SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10	tracking_share_transactions
SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10	tracking_share_transactions
SELECT T2.amount_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10	tracking_share_transactions
SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count   > =    10	tracking_share_transactions
SELECT T2.date_of_transaction  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count   > =    10	tracking_share_transactions

SELECT * FROM TRANSACTIONS	tracking_share_transactions
SELECT count ( * )  FROM TRANSACTIONS	tracking_share_transactions
SELECT investor_id FROM TRANSACTIONS	tracking_share_transactions

SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )  DESC LIMIT 1	tracking_share_transactions
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )   LIMIT 1	tracking_share_transactions
SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code  =  "PUR"	tracking_share_transactions
SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code  =  "SALE"	tracking_share_transactions

SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  DESC LIMIT 3	tracking_share_transactions
SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  DESC LIMIT 3	tracking_share_transactions
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  ASC LIMIT 3	tracking_share_transactions
SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY T2.date_of_transaction ASC LIMIT 1	tracking_share_transactions

select count ( * )  from investors	tracking_share_transactions
select count ( * )  from  ( SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )    > =    2 ) 	tracking_share_transactions
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )    > =    2	tracking_share_transactions

SELECT count ( * )  from transactions WHERE share_count  >  10	tracking_share_transactions
SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10	tracking_share_transactions
SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10	tracking_share_transactions

select distinct transaction_type_code from Transactions	tracking_share_transactions
select distinct share_count from Transactions	tracking_share_transactions

SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS	tracking_share_transactions
SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id	tracking_share_transactions
SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction )  desc limit 1	tracking_share_transactions
SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction )  limit 1	tracking_share_transactions

SELECT sales_details FROM sales	tracking_share_transactions
SELECT purchase_details FROM Purchases	tracking_share_transactions
SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases	tracking_share_transactions
SELECT sales_transaction_id, sales_details FROM sales UNION SELECT purchase_transaction_id, purchase_details FROM purchases	tracking_share_transactions

SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id	tracking_share_transactions
SELECT transaction_id FROM Transactions_Lots WHERE lot_id  =  11	tracking_share_transactions
SELECT T1.investor_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id WHERE T2.transaction_id  =  3	tracking_share_transactions

SELECT transaction_type_code FROM TRANSACTIONS	tracking_share_transactions
SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS	tracking_share_transactions
SELECT share_count FROM TRANSACTIONS	tracking_share_transactions
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )  ASC LIMIT 1	tracking_share_transactions

SELECT share_count FROM TRANSACTIONS	tracking_share_transactions
SELECT share_count, amount_of_transaction FROM TRANSACTIONS	tracking_share_transactions
SELECT share_count, amount_of_transaction FROM TRANSACTIONS where share_count  > =   100 or amount_of_transaction  > =   100	tracking_share_transactions
SELECT date_of_transaction,share_count, amount_of_transaction FROM TRANSACTIONS where share_count  > =   100 or amount_of_transaction  > =   100	tracking_share_transactions
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100 OR amount_of_transaction   > =    100	tracking_share_transactions

SELECT T1.lot_id, T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50	tracking_share_transactions
SELECT Count ( T1.lot_id )  FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50	tracking_share_transactions

SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id   =   T2.transaction_id WHERE T2.amount_of_transaction  <  3000	tracking_share_transactions
SELECT T2.transaction_type_code FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id   =   T2.transaction_id WHERE T2.amount_of_transaction  <  3000	tracking_share_transactions

SELECT avg ( price )  FROM products	manufactory_1
SELECT avg ( price ) , manufacturer FROM products group by manufacturer	manufactory_1
Select name from manufacturers	manufactory_1
Select name, headquarter from manufacturers	manufactory_1

SELECT name FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) 	manufactory_1
SELECT Revenue FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) 	manufactory_1
SELECT name,Revenue FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) 	manufactory_1
SELECT name FROM manufacturers WHERE revenue  >   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) 	manufactory_1
SELECT name,revenue FROM manufacturers WHERE revenue  >   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) 	manufactory_1

SELECT founder from manufacturers where name  =  "Sony"	manufactory_1
SELECT name from manufacturers where headquarter  =  "Austin"	manufactory_1
SELECT revenue from manufacturers where name  =  "Hewlett-Packard"	manufactory_1
SELECT count ( * )  FROM manufacturers WHERE headquarter   =   'Tokyo' OR headquarter   =   'Beijing'	manufactory_1

SELECT avg ( revenue )  FROM manufacturers	manufactory_1
SELECT max ( revenue )  FROM manufacturers	manufactory_1
SELECT sum ( revenue )  FROM manufacturers	manufactory_1

select name from manufacturers	manufactory_1
SELECT T1.Name, T2.name  FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code	manufactory_1
SELECT T1.price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code	manufactory_1
select name from products order by price desc limit 1	manufactory_1
SELECT T1.Name ,  max ( T1.Price )  ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code GROUP BY T2.name	manufactory_1
SELECT T1.Name ,  min ( T1.Price )  ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code GROUP BY T2.name	manufactory_1

SELECT avg ( Price )  FROM products	manufactory_1
SELECT * FROM products where price  > =   150	manufactory_1
SELECT T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code where T1.price  > =   150	manufactory_1

SELECT Headquarter FROM manufacturers	manufactory_1
SELECT Founder FROM manufacturers	manufactory_1
SELECT avg ( Revenue )  FROM manufacturers	manufactory_1

SELECT name  FROM manufacturers ORDER BY revenue DESC LIMIT 1	manufactory_1
SELECT name  FROM manufacturers ORDER BY revenue asc LIMIT 2,1	manufactory_1
SELECT Founder FROM manufacturers where  name = "Creative Labs"	manufactory_1
SELECT avg ( Revenue )  FROM manufacturers	manufactory_1
SELECT founder FROM manufacturers ORDER BY revenue DESC LIMIT 1	manufactory_1

SELECT name FROM products WHERE price   > =    180 order by  name ASC	manufactory_1
SELECT name, price FROM products WHERE price   > =    180 order by price asc	manufactory_1
SELECT name, price, manufacturer FROM products WHERE price   > =    180 order by price asc	manufactory_1

SELECT count ( DISTINCT name )  FROM products WHERE name NOT IN  ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code WHERE T2.name   =   'Sony' ) 	manufactory_1
SELECT count ( DISTINCT name )  FROM products WHERE name IN  ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code WHERE T2.name   =   'Creative Labs' ) 	manufactory_1

SELECT price FROM Products where Name  =  'Memory' order by price limit 1	manufactory_1
SELECT Manufacturer FROM Products where Name  =  'ZIP drive'	manufactory_1
SELECT Manufacturer FROM Products where Name  =  'Hard drive'	manufactory_1

SELECT Headquarter  FROM manufacturers WHERE  Name = "Sony"	manufactory_1
SELECT Revenue   FROM manufacturers WHERE  Name = "Creative Labs"	manufactory_1
SELECT name   FROM manufacturers WHERE  Headquarter = "Los Angeles"	manufactory_1
SELECT name   FROM manufacturers   order  by  revenue limit 1	manufactory_1

SELECT Name FROM Products WHERE Code = 1	manufactory_1
SELECT Price FROM Products WHERE Code = 1	manufactory_1
SELECT count ( DISTINCT T1.name )  ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code GROUP BY T2.Headquarter	manufactory_1

SELECT customer_id FROM Payments GROUP BY customer_id ORDER BY sum ( amount_paid )  DESC LIMIT 1	products_for_hire
SELECT sum ( amount_paid )  FROM Payments WHERE customer_id  =  12	products_for_hire
SELECT payment_type_code FROM Payments WHERE customer_id  =  12	products_for_hire

SELECT daily_hire_cost FROM Products_for_Hire where product_id = 1	products_for_hire
SELECT status_date FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id   =   T2.product_id WHERE product_name  = "Book collection C"	products_for_hire
SELECT product_description  FROM Products_for_Hire where product_id = 3	products_for_hire
SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id   =   T2.product_id WHERE T1.available_yn   =   1	products_for_hire

SELECT max ( booked_amount )  FROM products_booked	products_for_hire
SELECT min ( booked_count )  FROM products_booked	products_for_hire
SELECT max ( booked_count )  FROM products_booked	products_for_hire
SELECT min ( booked_amount )  FROM products_booked	products_for_hire

SELECT COUNT ( product_id )  FROM products_for_hire WHERE product_type_code   =   'Cutlery'	products_for_hire
SELECT COUNT ( product_id )  FROM products_for_hire WHERE daily_hire_cost < 20	products_for_hire
SELECT count ( product_id )  FROM products_for_hire WHERE product_type_code   =   'Cutlery' AND daily_hire_cost  <  20	products_for_hire

SELECT T1.product_id, T2.booked_amount from Products_for_Hire as T1 join Products_Booked as T2 on T1.product_id  =  T2.product_id	products_for_hire
SELECT product_id FROM Products_for_hire WHERE product_id NOT IN  (  SELECT product_id FROM products_booked WHERE booked_amount > 200  ) 	products_for_hire

SELECT coupon_id, coupon_amount FROM Discount_Coupons	products_for_hire
SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.good_or_bad_customer   =   'good' INTERSECT SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.good_or_bad_customer   =   'bad'	products_for_hire
SELECT date_issued from discount_coupons where coupon_id in  ( SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad' ) 	products_for_hire

SELECT COUNT ( * )  FROM BOOKINGS	products_for_hire
SELECT COUNT ( distinct customer_id )  FROM BOOKINGS	products_for_hire
SELECT T1.customer_id ,  T1.first_name ,  count ( * )  FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id	products_for_hire

SELECT max ( booked_count )  FROM products_booked	products_for_hire
SELECT max ( booked_count )  ,  min ( booked_count )  FROM products_booked	products_for_hire
SELECT max ( booked_count )  ,  min ( booked_count )  ,  avg ( booked_count )  FROM products_booked	products_for_hire

SELECT COUNT ( DISTINCT product_id )  FROM Products_Booked	products_for_hire
SELECT MAX ( booked_amount )  FROM Products_Booked	products_for_hire
SELECT MIN ( booked_count )  FROM Products_Booked	products_for_hire
SELECT product_id FROM Products_Booked WHERE booked_count  =  5	products_for_hire

select product_id from products_booked where booked_amount  =  102.76	products_for_hire
SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76	products_for_hire

SELECT DISTINCT Hometown FROM people	gymnast
SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID WHERE T1.Total_Points  >  57.5	gymnast
SELECT name FROM people WHERE Hometown  =  "Santo Domingo" or Hometown  =  "Bonao"	gymnast

SELECT T1.Gymnast_ID, T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID	gymnast
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT ( * )  DESC LIMIT 1	gymnast
select name from people where hometown  =  "Santo Domingo"	gymnast

SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID GROUP BY T2.Hometown	gymnast
SELECT COUNT ( * )  FROM gymnast	gymnast
SELECT age FROM people WHERE name  =  "Paul Hamm"	gymnast

SELECT count ( * )  FROM TV_Channel	tvshow
SELECT language FROM TV_Channel where series_name = 'Sky Music'	tvshow
SELECT title FROM Cartoon where id = 2.0	tvshow

SELECT channel, id FROM cartoon	tvshow
SELECT series_name FROM TV_Channel EXCEPT SELECT series_name FROM TV_channel WHERE language  =  'Italian'	tvshow
SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'	tvshow

SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'	tvshow
SELECT title FROM cartoon  WHERE written_by   =   'Todd Casey'	tvshow
SELECT directed_by FROM cartoon WHERE title  =  "Enter the Outsiders!"	tvshow

SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id  =  T2.Channel WHERE T2.Episode  =  "A Love of a Lifetime"	tvshow
SELECT  Viewers_m FROM  TV_series  where Episode  =  "A Love of a Lifetime"	tvshow
SELECT  Weekly_Rank  FROM  TV_series  where Episode  =  "A Love of a Lifetime"	tvshow
SELECT  Air_Date  FROM  TV_series  where Episode  =  "A Love of a Lifetime"	tvshow

SELECT Title FROM cartoon ORDER BY original_air_date LIMIT 1	tvshow
SELECT Channel FROM cartoon ORDER BY original_air_date LIMIT 1	tvshow
SELECT production_code ,  channel, original_air_date FROM cartoon ORDER BY original_air_date desc LIMIT 1	tvshow

select * from Cartoon where Written_by  =  'Todd Casey'	tvshow
select Title from Cartoon where Written_by  =  'Todd Casey'	tvshow
SELECT T1.id FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by  =  'Todd Casey'	tvshow

SELECT title  FROM cartoon ORDER BY original_air_date LIMIT 1	tvshow
SELECT title  FROM cartoon ORDER BY original_air_date desc LIMIT 1	tvshow
SELECT channel FROM cartoon ORDER BY original_air_date desc LIMIT 1	tvshow
SELECT production_code FROM cartoon ORDER BY original_air_date desc LIMIT 1	tvshow

SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id  =  T2.Channel WHERE T2.written_by   =   'Todd Casey'	tvshow
SELECT directed_by from cartoon where title  =  "The Rise of the Blue Beetle!" and written_by  =  "Michael Jelenic"	tvshow
SELECT Package_Option from tv_channel where country  =  "Italy"	tvshow

SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   "Pass"	e_learning
SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   "Pass"	e_learning
SELECT count ( T1.student_id )  FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   "Pass"	e_learning

SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id order by T1.date_of_completion desc limit 1	e_learning
SELECT count ( distinct student_id )  from  student_course_enrolment	e_learning
SELECT count ( distinct T1.student_id )  FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   "Fail"	e_learning
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   "Fail"	e_learning

SELECT login_name FROM students	e_learning
SELECT password FROM students	e_learning

SELECT count ( * )  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id order by count ( * )  desc limit 1	e_learning
select count ( * )  from  ( SELECT *  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id having count ( * )   =  5 ) 	e_learning
SELECT T1.registration_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )    =  5	e_learning
SELECT student_id FROM Student_Course_Enrolment where registration_id  =  19	e_learning
SELECT personal_name FROM Students where student_id  =  15	e_learning

SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * )  DESC LIMIT 1	e_learning
select count ( * )  from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'French'	e_learning
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * )  LIMIT 1	e_learning
select count ( * )  from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'	e_learning
select student_id from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'	e_learning
select distinct course_name from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE student_id = '15' and course_name ! =  'Chinese Painting'	e_learning

SELECT course_name FROM Courses	e_learning
SELECT T1.course_name , COUNT ( * )  FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name	e_learning

SELECT count ( * )  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1	e_learning
SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1	e_learning
SELECT T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1	e_learning

SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.personal_name   =   "Karson"	e_learning
SELECT personal_name, middle_name, family_name FROM Students	e_learning

SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   "operating system" OR T2.course_name   =   "data structure"	e_learning
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   "operating system" OR T2.course_name   =   "data structure"	e_learning
SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   "advanced database"	e_learning

select author_id from Courses group by author_id having count ( author_id ) >1	e_learning
SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count ( * )   > =   2	e_learning
SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count ( * )   > =   1	e_learning

select subject_name from subjects	e_learning
select author_id from courses	e_learning
select course_id from courses	e_learning

SELECT T1.product_name ,  sum ( T2.order_quantity )  FROM products AS T1 JOIN order_items AS T2 ON T1.product_id   =   T2.product_id GROUP BY T1.product_id	customers_and_products_contacts
SELECT T1.product_name ,  sum ( T2.order_quantity ) ,T1.product_type_code FROM products AS T1 JOIN order_items AS T2 ON T1.product_id   =   T2.product_id GROUP BY T1.product_id	customers_and_products_contacts
SELECT avg ( product_price )  from products	customers_and_products_contacts
select product_name from products where product_price < ( SELECT avg ( product_price )  from products ) 	customers_and_products_contacts
select product_name from products where product_price> ( SELECT avg ( product_price )  from products ) 	customers_and_products_contacts

SELECT DISTINCT product_name FROM Products	customers_and_products_contacts
SELECT DISTINCT product_type_code FROM Products	customers_and_products_contacts
SELECT product_type_code FROM products GROUP BY product_type_code HAVING count ( * )    > =    2	customers_and_products_contacts

SELECT customer_id FROM Customer_Address_History	customers_and_products_contacts
SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id	customers_and_products_contacts
SELECT T2.customer_name From customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id JOIN addresses AS T3 ON T1.address_id   =   T3.address_id GROUP BY T2.customer_name having count ( * )  > 1	customers_and_products_contacts

SELECT customer_name from customers where payment_method_code  =  'Credit Card'	customers_and_products_contacts
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.payment_method_code   =   'Credit Card' GROUP BY T1.customer_id HAVING count ( * )   >  2	customers_and_products_contacts
SELECT  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.payment_method_code   =   'Credit Card' GROUP BY T1.customer_id HAVING count ( * )   >  2	customers_and_products_contacts

SELECT avg ( product_price )  FROM products	customers_and_products_contacts
SELECT product_name FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) 	customers_and_products_contacts
SELECT count ( * )  FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) 	customers_and_products_contacts

SELECT customer_name  FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) 	customers_and_products_contacts
SELECT customer_name ,customer_address FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) 	customers_and_products_contacts
SELECT customer_name  FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) 	customers_and_products_contacts

SELECT  T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id JOIN order_items AS T3 ON T3.order_id   =   T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity )  DESC LIMIT 1	customers_and_products_contacts
SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id JOIN order_items AS T3 ON T3.order_id   =   T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity )  DESC LIMIT 1	customers_and_products_contacts
SELECT customer_address FROM customers WHERE customer_name  =  "Cleo"	customers_and_products_contacts
SELECT customer_email FROM customers WHERE customer_name  =  "Cleo" AND customer_phone  =  "1-202-928-5395"	customers_and_products_contacts
SELECT customer_number FROM customers WHERE customer_name  =  "Cleo"	customers_and_products_contacts

SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'Study Room'	dorm_1
SELECT dormid from dorm where dorm_name  =  "Dorm-plex 2000"	dorm_1
SELECT student_capacity from dorm where dorm_name  =  "Dorm-plex 2000"	dorm_1
SELECT gender from dorm where dorm_name  =  "Dorm-plex 2000"	dorm_1

SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid   =   T1.dormid JOIN student AS T5 ON T5.stuid   =   T4.stuid WHERE T5.lname   =   'Smith'	dorm_1
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'	dorm_1
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Jones'	dorm_1
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.age  =   ( select max ( age )  from student ) 	dorm_1
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T1.dormid  =   ( select T1.dormid from dorm as T1 join lives_in as T4 on T1.dormid  =  T4.dormid join student as T5 on T4.stuid  =  T5.stuid where T5.sex  =  "F" group by T1.dormid order by count ( * )  desc limit 1 ) 	dorm_1
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid jOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid where T1.student_capacity  =   ( select min ( student_capacity )  from dorm ) 	dorm_1

SELECT count ( * )  ,  sex FROM Student GROUP BY sex	dorm_1

SELECT count ( * )  FROM student	dorm_1
SELECT city_code, count ( * )  FROM student group  by  city_code	dorm_1
SELECT city_code, count ( * )  FROM student group  by  city_code having count ( * ) >1	dorm_1

SELECT DISTINCT ( T1.student_capacity )  FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name  =  "Smith Hall"	dorm_1
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid GROUP BY T2.dormid ORDER BY count ( * )  LIMIT 1	dorm_1
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid GROUP BY T2.dormid ORDER BY count ( * )  DESC LIMIT 1	dorm_1
SELECT dorm_name FROM dorm WHERE student_capacity  =  355	dorm_1

SELECT avg ( age )  ,  max ( age )  ,  sex FROM student GROUP BY sex	dorm_1

SELECT student_capacity from dorm where dorm_name  =  "Smith Hall"	dorm_1
SELECT count ( * )  from dorm where gender  =  "F"	dorm_1
SELECT amenity_name from dorm_amenity	dorm_1
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid   =   T1.amenid JOIN dorm AS T3 ON T2.dormid   =   T3.dormid WHERE T3.dorm_name   =   'Anonymous Donor Hall' ORDER BY T1.amenity_name	dorm_1

SELECT fname ,  lname FROM student	dorm_1
SELECT Age FROM student	dorm_1
SELECT fname ,  lname FROM student WHERE age  <   ( SELECT avg ( age )  FROM student ) 	dorm_1

SELECT count ( * )  FROM student WHERE sex   =   'F' AND city_code   =   'BAL'	dorm_1
SELECT Lname FROM student WHERE sex   =   'F' AND city_code   =   'BAL'	dorm_1
SELECT Lname FROM student WHERE sex   =   'M' AND age < 20	dorm_1

SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid   =   T2.amenid GROUP BY T2.amenid ORDER BY count ( * )  DESC LIMIT 1	dorm_1
select dormid from has_amenity where amenid  =   ( SELECT T1.amenid FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid   =   T2.amenid GROUP BY T2.amenid ORDER BY count ( * )  DESC LIMIT 1 ) 	dorm_1
SELECT T1.amenid FROM dorm_amenity AS T1 where T1.amenity_name  =  'TV Lounge'	dorm_1

SELECT dorm_name FROM dorm	dorm_1
SELECT avg ( T1.age )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name	dorm_1
SELECT avg ( T1.age )  ,  T3.dorm_name, T3.student_capacity FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name	dorm_1

SELECT dorm_name FROM dorm WHERE student_capacity  >  300	dorm_1
SELECT dormid FROM dorm WHERE student_capacity  >  300	dorm_1
SELECT student_capacity FROM dorm WHERE student_capacity  >  300	dorm_1

SELECT count ( DISTINCT T2.amenid )  ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid	dorm_1

select count ( distinct home_team )  from game	game_injury
SELECT Player FROM injury_accident order by Number_of_matches desc limit 1	game_injury

SELECT Average_Attendance FROM stadium where name  =  "Cowboys Stadium"	game_injury
SELECT Total_Attendance FROM stadium where name  =  "Cowboys Stadium"	game_injury
SELECT Capacity_Percentage FROM stadium where name  =  "New Meadowlands Stadium"	game_injury

SELECT count ( * )  from game	game_injury
SELECT total_attendance from stadium where name  =  "FedExField"	game_injury

SELECT COUNT ( * )  FROM stadium	game_injury
SELECT name FROM stadium	game_injury
SELECT Average_Attendance FROM stadium WHERE name  =  "Cowboys Stadium"	game_injury
SELECT Capacity_Percentage FROM stadium WHERE name  =  "FedExField"	game_injury

SELECT count ( * )  FROM game	game_injury
SELECT count ( * )  FROM game WHERE id NOT IN  (  SELECT game_id FROM injury_accident  ) 	game_injury
SELECT count ( * )  FROM game WHERE id  IN  (  SELECT game_id FROM injury_accident  ) 	game_injury
SELECT stadium_id  FROM game WHERE id NOT IN (  SELECT game_id FROM injury_accident  ) 	game_injury

SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id   =   T1.id GROUP BY T1.id HAVING count ( * )   < =   2	game_injury
SELECT count ( distinct Competition )  FROM game	game_injury
SELECT count ( distinct Home_team )  FROM game	game_injury

SELECT count ( DISTINCT T1.injury )  FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id   =   T2.id WHERE T2.season  >  2010	game_injury
SELECT player from injury_accident where injury  =  "Hamstring muscle strain in his left thigh"	game_injury

SELECT count ( * )  from injury_accident	game_injury
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id	game_injury
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC	game_injury

SELECT  game_id FROM injury_accident where Player  =  'Walter Samuel'	game_injury

SELECT count ( t2.f1 )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   "Mary"	twitter_1
SELECT count ( t2.f1 )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   "Susan"	twitter_1
SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   "Susan"	twitter_1
SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   "Susan" or T1.name   =   "Mary"	twitter_1

SELECT uid, name FROM user_profiles	twitter_1
SELECT name, followers FROM user_profiles	twitter_1
SELECT max ( followers )  FROM user_profiles	twitter_1
SELECT sum ( followers )  FROM user_profiles	twitter_1

SELECT sum ( followers )  FROM user_profiles	twitter_1
SELECT min ( followers )  FROM user_profiles	twitter_1
select name from user_profiles where followers  =   (  SELECT max ( followers )  FROM user_profiles  ) 	twitter_1

SELECT count ( * )  FROM user_profiles WHERE UID NOT IN  ( SELECT UID FROM tweets ) 	twitter_1
SELECT avg ( followers )  FROM user_profiles	twitter_1
SELECT avg ( followers )  FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) 	twitter_1
SELECT avg ( followers )  FROM user_profiles WHERE UID NOT IN  ( SELECT UID FROM tweets ) 	twitter_1

SELECT name FROM user_profiles	twitter_1
SELECT * FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid	twitter_1
SELECT T1.name ,  count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid	twitter_1

SELECT count ( * )  FROM tweets WHERE text LIKE '%intern%'	twitter_1
SELECT * FROM tweets order by createdate desc limit 1	twitter_1
SELECT * FROM tweets order by createdate limit 1	twitter_1

SELECT email FROM user_profiles WHERE name LIKE '%Swift%'	twitter_1
SELECT name FROM user_profiles WHERE name LIKE '%Swift%'	twitter_1

SELECT count ( * )  FROM user_profiles	twitter_1
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1	twitter_1
SELECT sum ( followers )  FROM user_profiles	twitter_1
SELECT followers FROM user_profiles WHERE name ! = "Tyler Swift"	twitter_1

SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1	candidate_poll
SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1	candidate_poll
SELECT poll_source FROM candidate ORDER BY oppose_rate LIMIT 1	candidate_poll

SELECT count ( Poll_Source )  from candidate	candidate_poll
SELECT count ( people_id )  from people	candidate_poll
SELECT count ( * )  from people where sex = 'F'	candidate_poll
SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex = 'F'	candidate_poll
SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex = 'M'	candidate_poll

SELECT height FROM people WHERE Name  =  'Hubert Henno'	candidate_poll
SELECT count ( * )  FROM people WHERE Sex  =  'M'	candidate_poll
SELECT name FROM people WHERE Sex  =  'M' ORDER BY Height DESC LIMIT 1	candidate_poll

SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id ORDER BY t2.support_rate DESC LIMIT 1	candidate_poll
SELECT t2.support_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.name  =  "Vincent Montméat"	candidate_poll
SELECT t2.oppose_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.name  =  "Vincent Montméat"	candidate_poll

SELECT count ( * )  from people where sex  =  "F"	candidate_poll
SELECT count ( * )  from people where sex  =  "M"	candidate_poll
SELECT min ( oppose_rate )  FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  "M"	candidate_poll
SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  "M" and oppose_rate  =  0.32	candidate_poll
SELECT min ( oppose_rate )  FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  "F"	candidate_poll
SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  "F" order by oppose_rate asc limit 1	candidate_poll

SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll
SELECT Poll_Source FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll
SELECT Date FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll
SELECT Unsure_rate FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll
SELECT Consider_rate FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll
SELECT Oppose_rate FROM candidate ORDER BY support_rate DESC LIMIT 3	candidate_poll

SELECT count ( * )   FROM people WHERE weight  >  85	candidate_poll
SELECT count ( * )   FROM people WHERE weight  >  85 AND Sex  =  "F"	candidate_poll
SELECT count ( * )   FROM people WHERE weight  >  85 AND Sex  =  "M"	candidate_poll

SELECT distinct Nationality FROM HOST WHERE Age  >  45	party_host
SELECT distinct Nationality FROM HOST WHERE Age < 35	party_host
SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35	party_host

SELECT avg ( age )  FROM HOST	party_host
SELECT count ( * )  FROM HOST where Nationality  =  "United States" and age < 40	party_host

SELECT avg ( age )  FROM HOST	party_host
SELECT name FROM HOST order by age limit 1	party_host
SELECT Nationality FROM HOST group by Nationality order by count ( * )  desc limit 1	party_host

SELECT building FROM Faculty	activity_1
select * from Faculty	activity_1
SELECT building FROM Faculty WHERE rank   =   "Professor" GROUP BY building HAVING count ( * )    > =    10	activity_1

SELECT count ( * )  FROM Faculty WHERE Rank   =   "Professor"	activity_1
SELECT count ( distinct building )  FROM Faculty	activity_1
SELECT count ( * )  FROM Faculty WHERE Rank   =   "Professor" AND building   =   "NEB"	activity_1

select  actid  from Faculty_Participates_in  where FacID = 1082	activity_1
select  Rank  from Faculty  where Fname = "Mark"	activity_1

SELECT COUNT ( * )  FROM Faculty WHERE Rank  =  "Professor"	activity_1
SELECT COUNT ( * )  FROM Faculty WHERE Rank  =  "AsstProf"	activity_1
SELECT count ( * )  FROM Faculty WHERE rank  =  "AsstProf" AND Sex  =  "F"	activity_1

SELECT count ( * )  from student	activity_1
SELECT count ( * )  from student where sex  =  "M"	activity_1
SELECT count ( * )  from student where age  =  18	activity_1

SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid   =   T2.actid WHERE T2.activity_name   =   'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid   =   T2.actid WHERE T2.activity_name   =   'Kayaking'	activity_1
SELECT activity_name FROM Activity WHERE actid  =  770	activity_1

SELECT Lname, Fname FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in	activity_1
SELECT T2.Lname, T2.Fname FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid	activity_1
SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid where T2.Lname = "Goodrich" and T2.Fname = "Michael" UNION SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid where T2.Lname = "Masson" and T2.Fname = "Gerald"	activity_1
select count ( * )  from faculty	activity_1

SELECT count ( * )  FROM Faculty WHERE Rank   =   "Professor" AND building   =   "NEB"	activity_1
SELECT count ( * )  FROM Faculty WHERE Rank   =   "Instructor" AND building   =   "NEB"	activity_1
SELECT count ( * )  FROM Faculty WHERE building   =   "NEB"	activity_1

SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Kayaking'	activity_1
SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Mountain Climbing'	activity_1
SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Mountain Climbing' INTERSECT SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Kayaking'	activity_1

SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN Activity AS T3 ON T3.actid   =   T2.actid WHERE T1.fname   =   "Mark" AND T1.lname   =   "Giuliano"	activity_1
SELECT Rank from faculty where Lname  =  'Giuliano' and fname  =  'Mark'	activity_1
SELECT fname from faculty order by fname asc	activity_1

SELECT  T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.FacID ORDER BY count ( * )  DESC LIMIT 1	activity_1
SELECT  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.FacID ORDER BY count ( * )  DESC LIMIT 1	activity_1
SELECT  rank from faculty where fname  =  "Mark"	activity_1

SELECT FacID FROM Faculty	activity_1
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID   =   T2.advisor GROUP BY T1.FacID HAVING count ( * )    > =    2	activity_1
SELECT T2.major FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID   =   T2.advisor GROUP BY T1.FacID HAVING count ( * )    > =    2	activity_1

SELECT activity_name FROM Activity	activity_1
SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID ORDER BY count ( * )  DESC LIMIT 1	activity_1
SELECT count ( distinct T2.stuid  )  FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID   =   T2.actID where T1.activity_name = 'Soccer'	activity_1

SELECT phone FROM Faculty WHERE Fname   =   "Jerry" AND Lname   =   "Prince"	activity_1
SELECT room FROM Faculty WHERE Fname   =   "Jerry" AND Lname   =   "Prince"	activity_1
SELECT building  FROM Faculty WHERE Fname   =   "Jerry" AND Lname   =   "Prince"	activity_1

SELECT T1.FacID , count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID	activity_1
select count ( * )  from Faculty	activity_1
select count ( * )  from Faculty where Sex = 'M'	activity_1

SELECT rank ,  sex ,  count ( * )  FROM Faculty WHERE sex  =  "M" GROUP BY rank ,  sex	activity_1
SELECT rank ,  sex ,  count ( * )  FROM Faculty GROUP BY rank ,  sex	activity_1

SELECT T1.activity_name ,  count ( * )  FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID	activity_1
SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID order by count ( * )  desc limit 1	activity_1

SELECT count ( * )  from screen_mode	phone_1
SELECT count ( * )  from phone	phone_1
SELECT Company_name from phone WHERE Hardware_Model_name  =  "XPERIA T, XPERIA J"	phone_1

SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * )   >  1	phone_1
SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * )    =   1	phone_1
SELECT Hardware_Model_name FROM phone where Company_name  =  "Nokia Corporation"	phone_1

SELECT count ( * )  FROM phone	phone_1
SELECT count ( * )  FROM chip_model	phone_1
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type   =   'Full'	phone_1
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type   =   'Full'	phone_1

SELECT COUNT ( * )  FROM phone	phone_1
SELECT Company_name FROM phone	phone_1
SELECT Hardware_Model_name FROM phone	phone_1
SELECT chip_model FROM phone WHERE Hardware_Model_name  =  "XPERIA T, XPERIA J"	phone_1

SELECT chip_model, Company_name FROM phone where screen_mode>2	phone_1
SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count ( * )   >  3	phone_1

SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id where Customer_name = "America Jaskolski"	insurance_fnol
SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id where Customer_name = "Mrs. Hanna Willms"	insurance_fnol
SELECT count ( Policy_ID )  FROM Customers_Policies	insurance_fnol
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1	insurance_fnol

SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   "Dayana Robel"	insurance_fnol
SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   "America Jaskolski"	insurance_fnol
SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   "Ellsworth Paucek"	insurance_fnol

SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   "Dayana Robel"	insurance_fnol
SELECT DISTINCT Customer_Phone FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   "Dayana Robel"	insurance_fnol
SELECT t2.date_opened FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   "Dayana Robel"	insurance_fnol

SELECT service_name FROM services	insurance_fnol
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING count ( * )   >  1	insurance_fnol
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING count ( * )   >  2	insurance_fnol
SELECT t2.service_name, count ( * )  FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING Service_name  =  "New policy application"	insurance_fnol

SELECT Settlement_ID, settlement_amount FROM settlements	insurance_fnol
SELECT sum ( settlement_amount )  ,  avg ( settlement_amount )  FROM settlements	insurance_fnol
SELECT Effective_Date FROM settlements order by Effective_Date limit 1	insurance_fnol

SELECT distinct policy_type_code FROM available_policies	insurance_fnol
SELECT policy_type_code FROM available_policies where  Policy_ID =  257	insurance_fnol
SELECT Policy_ID FROM available_policies where policy_type_code =  "Life Insurance"	insurance_fnol
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count ( * )  DESC LIMIT 1	insurance_fnol

SELECT distinct ( Country )  FROM member	decoration_competition
SELECT Country FROM member GROUP BY Country order by COUNT ( * )  desc limit 1	decoration_competition
SELECT Country FROM member GROUP BY Country HAVING COUNT ( * )   >  2	decoration_competition

SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC	decoration_competition
SELECT T1.Name ,t1.Member_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC	decoration_competition
SELECT T1.Name ,t1.Member_ID,T1.College_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC	decoration_competition

SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID WHERE T1.Name  =  'Saskatchewan School'	decoration_competition
SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID	decoration_competition
SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID ORDER BY T2.Name ASC	decoration_competition

SELECT count ( DISTINCT t3.characteristic_name )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   "cumin"	products_gen_characteristics
SELECT count ( DISTINCT t3.characteristic_name )  FROM Products AS t1 JOIN Product_Characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN Characteristics AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   "basil"	products_gen_characteristics
SELECT typical_selling_price FROM Products WHERE product_name  =  "cumin"	products_gen_characteristics

SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  "cumin"	products_gen_characteristics
SELECT t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  "cumin"	products_gen_characteristics
select product_id from Products where product_name = 'cumin'	products_gen_characteristics
select product_category_code from Products where product_id = '1'	products_gen_characteristics
select typical_selling_price from Products where product_id = '1'	products_gen_characteristics

SELECT count ( * )  FROM Ref_colors	products_gen_characteristics
SELECT product_name FROM products	products_gen_characteristics
SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 on T1.color_code  =  T2.color_code  WHERE product_id  =  "2"	products_gen_characteristics
SELECT COUNT ( * )  FROM Products WHERE product_category_code  =  "Herbs"	products_gen_characteristics

select color_code from Ref_Colors where color_description = 'white'	products_gen_characteristics
select product_id,product_category_code from Products where color_code = '2'	products_gen_characteristics
select unit_of_measure from Ref_Product_Categories where  product_category_code = 'Herbs' or product_category_code = 'Spices'	products_gen_characteristics
select product_name from Products where product_id = '2'	products_gen_characteristics

SELECT product_name,color_code,product_id from Products	products_gen_characteristics
SELECT t1.product_name , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code	products_gen_characteristics
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   "catnip"	products_gen_characteristics

SELECT distinct product_name from Products	products_gen_characteristics
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * )  LIMIT 1	products_gen_characteristics
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * )  DESC LIMIT 1	products_gen_characteristics

select count ( * )  from Products	products_gen_characteristics
select product_name from Products where color_code  =  2	products_gen_characteristics
select characteristic_data_type from Characteristics where characteristic_id  =  1	products_gen_characteristics

SELECT color_code from products where product_name = 'basil'	products_gen_characteristics
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code GROUP BY t2.color_description ORDER BY count ( * )  ASC LIMIT 1	products_gen_characteristics
SELECT product_name FROM products where color_code = 4	products_gen_characteristics
SELECT typical_selling_price FROM products where product_name = 'peper'	products_gen_characteristics

SELECT count ( DISTINCT t1.product_name )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   "warm"	products_gen_characteristics
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   "warm"	products_gen_characteristics
SELECT product_name from products where typical_buying_price  =  352447.2874677	products_gen_characteristics
SELECT color_code from products where typical_buying_price  =  352447.2874677	products_gen_characteristics

SELECT product_description FROM products  WHERE product_name   =   "chervil"	products_gen_characteristics
SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  "chervil"	products_gen_characteristics
SELECT typical_buying_price FROM products WHERE product_name  =  "chervil"	products_gen_characteristics
SELECT other_product_details FROM products WHERE product_name  =  "chervil"	products_gen_characteristics

SELECT t2.characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   "sesame"	products_gen_characteristics
SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   "sesame"	products_gen_characteristics
select product_category_code from Products where product_name  =  'sesame'	products_gen_characteristics
SELECT t2.product_characteristic_value FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   "sesame"	products_gen_characteristics

SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   "sesame"	products_gen_characteristics
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   "sesame" AND t3.characteristic_type_code  =  "Grade"	products_gen_characteristics
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id  order by t1.typical_selling_price desc limit 1	products_gen_characteristics

SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   "white"	products_gen_characteristics
SELECT t1.product_name,t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   "white"	products_gen_characteristics
select product_category_code, avg ( typical_buying_price )  from Products group by product_category_code	products_gen_characteristics

SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t4.color_description   =   "red"	products_gen_characteristics
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE  t3.characteristic_name   =   "fast"	products_gen_characteristics
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t4.color_description   =   "red" AND t3.characteristic_name   =   "fast"	products_gen_characteristics
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t3.characteristic_name   =   "slow"	products_gen_characteristics
SELECT t4.color_description FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t3.characteristic_name   =   "slow"	products_gen_characteristics

SELECT t1.color_code FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   "chervil"	products_gen_characteristics
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   "chervil"	products_gen_characteristics
SELECT t1.product_id FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   "chervil"	products_gen_characteristics

SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   "Herbs"	products_gen_characteristics
SELECT T1.product_name ,  T2.color_description  FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   "Herbs"	products_gen_characteristics
SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   "Herbs"	products_gen_characteristics
SELECT T1.typical_selling_price FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   "Herbs"	products_gen_characteristics
SELECT avg ( typical_buying_price )  FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   "Herbs"	products_gen_characteristics

SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   "catnip"	products_gen_characteristics
SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   "red"	products_gen_characteristics
SELECT t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   "green"	products_gen_characteristics
SELECT t1.product_name, t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   "green"	products_gen_characteristics

SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code	products_gen_characteristics
SELECT t1.product_id,t1.product_name,t1.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code where t1.product_id  = 11	products_gen_characteristics
SELECT t2.product_category_code,t2.product_category_description, t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code where t1.product_id  = 11	products_gen_characteristics

SELECT COUNT ( DISTINCT color_description )  FROM Ref_Colors	products_gen_characteristics
SELECT product_name FROM Products	products_gen_characteristics
SELECT typical_selling_price FROM Products WHERE product_name  =  "cumin"	products_gen_characteristics

SELECT COUNT ( * )  FROM Participants	local_govt_in_alabama
SELECT Participant_Type_Code FROM Participants WHERE Participant_Details  =  "Karlee Batz"	local_govt_in_alabama
SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count ( * )  DESC LIMIT 1	local_govt_in_alabama
SELECT participant_id FROM participants WHERE Participant_Details  =  "Lupe Deckow"	local_govt_in_alabama

SELECT count ( * )  FROM participants	local_govt_in_alabama
SELECT count ( DISTINCT event_id )  FROM participants_in_events	local_govt_in_alabama
SELECT T2.event_id FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'	local_govt_in_alabama
SELECT T2.event_id, T1.Participant_Details  FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID	local_govt_in_alabama

SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'	local_govt_in_alabama
SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Karlee Batz'	local_govt_in_alabama
select T1.Event_ID from Events AS T1 JOIN Participants_in_Events AS T2 JOIN Participants AS T3 where Participant_Details = 'Kenyatta Kuhn'	local_govt_in_alabama
select count ( * )  from Events where Event_Details = 'Fail'	local_govt_in_alabama

SELECT count ( distinct Event_ID )  FROM Participants_in_Events	local_govt_in_alabama
SELECT count ( * )  FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'	local_govt_in_alabama
SELECT Participant_Details FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'	local_govt_in_alabama

SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID   =   T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * )   >  1	local_govt_in_alabama

SELECT district FROM shop ORDER BY number_products DESC LIMIT 1	employee_hire_evaluation
SELECT manager_name FROM shop ORDER BY number_products DESC LIMIT 1	employee_hire_evaluation
SELECT number_products FROM shop ORDER BY number_products DESC LIMIT 1	employee_hire_evaluation
SELECT location FROM shop ORDER BY number_products DESC LIMIT 1	employee_hire_evaluation
SELECT shop_ID FROM shop ORDER BY number_products DESC LIMIT 1	employee_hire_evaluation

SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count ( * )   >  1	employee_hire_evaluation
SELECT city FROM employee WHERE age  >  30 GROUP BY city HAVING count ( * )   >  1	employee_hire_evaluation
SELECT Name, Age FROM employee WHERE age  >  30	employee_hire_evaluation
SELECT Name, Age FROM employee WHERE age  <  30	employee_hire_evaluation
SELECT City FROM employee WHERE age  <  29	employee_hire_evaluation

select avg ( Number_products )  from shop	employee_hire_evaluation
select Name from shop where Number_products > 6685	employee_hire_evaluation
select count ( * )  from shop	employee_hire_evaluation

SELECT count ( * )  FROM shop	employee_hire_evaluation
SELECT name FROM shop	employee_hire_evaluation
SELECT location FROM shop where name  =  "FC Haka"	employee_hire_evaluation
SELECT Number_products FROM shop where name  =  "HJK"	employee_hire_evaluation

select age from employee where name  =  "George Chuter"	employee_hire_evaluation
select city from employee where name  =  "Lee Mears"	employee_hire_evaluation

SELECT count ( * )  FROM Draft_Copies	cre_Doc_Control_Systems
SELECT count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  LIMIT 1	cre_Doc_Control_Systems
SELECT count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1	cre_Doc_Control_Systems
SELECT document_id FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1	cre_Doc_Control_Systems
SELECT document_id , count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1	cre_Doc_Control_Systems

SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id group by t1.employee_name order by count ( * )  desc limit 1	cre_Doc_Control_Systems
SELECT t1.employee_name, sum ( t2.draft_number )  FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * )  DESC LIMIT 1	cre_Doc_Control_Systems
SELECT sum ( t2.copy_number )  FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * )  DESC LIMIT 1	cre_Doc_Control_Systems

SELECT Length FROM roller_coaster WHERE Park  =  "Kemah Boardwalk"	roller_coaster
SELECT Status FROM roller_coaster WHERE Park  =  "Happy Valley"	roller_coaster
SELECT Country_ID FROM roller_coaster WHERE Name  =  "Hades 360"	roller_coaster
SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1	roller_coaster

SELECT max ( height )  FROM roller_coaster	roller_coaster
select park from roller_coaster where height  =   ( SELECT max ( height )  FROM roller_coaster ) 	roller_coaster
select T2.name from roller_coaster as T1 join country as T2 on T1.country_id  =  T2.country_id where T1.height  =   ( SELECT max ( height )  FROM roller_coaster ) 	roller_coaster
select T2.name, T2.population from roller_coaster as T1 join country as T2 on T1.country_id  =  T2.country_id where T1.height  =   ( SELECT max ( height )  FROM roller_coaster ) 	roller_coaster

SELECT count ( * )  FROM country WHERE country_id NOT IN  (  SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000  ) 	roller_coaster
select T2.Name from roller_coaster as T1 JOIN country as T2 ON T1.Country_ID  =  T2.Country_ID where T1.Length > 5000	roller_coaster
select max ( Length )  from roller_coaster	roller_coaster
select Park from roller_coaster order by Speed desc limit 1	roller_coaster

SELECT name FROM roller_coaster order BY speed desc limit 1	roller_coaster
SELECT height FROM roller_coaster order BY speed desc limit 1	roller_coaster
SELECT status FROM roller_coaster order BY speed desc limit 1	roller_coaster
SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT ( * )   >  2	roller_coaster

SELECT Name from  country	roller_coaster
SELECT T1.Name ,  avg ( T2.Speed )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name	roller_coaster
SELECT T2.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name = 'Sweden'	roller_coaster

SELECT T2.Speed FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria"	roller_coaster
SELECT T2.opened FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria" order by T2.speed desc limit 1	roller_coaster
SELECT T2.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria" order by T2.speed desc limit 1	roller_coaster
SELECT T2.Park FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria" order by T2.speed desc limit 1	roller_coaster
SELECT T2.Height FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria" order by T2.speed desc limit 1	roller_coaster
SELECT T2.length FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  "Austria" order by T2.speed desc limit 1	roller_coaster

SELECT max ( Length )  FROM roller_coaster	roller_coaster
SELECT * FROM roller_coaster order by Speed desc limit 1	roller_coaster
SELECT Height FROM roller_coaster where Name = 'Boardwalk Bullet'	roller_coaster

SELECT T1.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed < 55	roller_coaster
SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed < 55	roller_coaster

SELECT T1.Investor FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  "Leonardo Binchi"	entrepreneur
SELECT sum ( T1.Money_Requested )  FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  "Francesco Postiglione" or  T2.Name = "Leonardo Binchi" or  T2.Name =  "Fabrizio Buonocore"	entrepreneur
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  "Fabrizio Buonocore"	entrepreneur
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Investor! =  "Rachel Elnaugh"	entrepreneur

SELECT weight from people order by weight desc limit 1	entrepreneur
SELECT people_id, weight from people order by weight desc limit 1	entrepreneur
SELECT people_id, name, weight from people order by weight desc limit 1	entrepreneur

SELECT distinct Investor FROM entrepreneur	entrepreneur
SELECT Investor FROM entrepreneur group by investor having count ( * )  > 1	entrepreneur
Select investor from entrepreneur where investor in  (  SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000 )  group by investor having count ( * )  > 1	entrepreneur

SELECT Name, people_id FROM people	entrepreneur
SELECT Name, people_id FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM entrepreneur ) 	entrepreneur
SELECT sum ( money_requested )  from entrepreneur	entrepreneur

SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID	entrepreneur
SELECT T2.Name, T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID	entrepreneur
SELECT T1.company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID	entrepreneur
SELECT T2.name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID order by T2.weight desc limit 1	entrepreneur

SELECT * FROM Player_Attributes WHERE overall_rating  >  80	soccer_1
SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'right'	soccer_1
SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'left'	soccer_1
SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'right'	soccer_1
SELECT preferred_foot , count ( * )  FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot	soccer_1

SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating   > =    85 AND T2.overall_rating  < =   90	soccer_1
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.preferred_foot   =   "left" AND T2.overall_rating   > =    85 AND T2.overall_rating  < =   90	soccer_1
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.preferred_foot   =   "right"	soccer_1

SELECT distinct T1.player_name  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5	soccer_1
SELECT distinct T1.birthday  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5	soccer_1
SELECT distinct T1.weight  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5	soccer_1

SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY overall_rating DESC LIMIT 3	soccer_1
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY dribbling DESC LIMIT 1	soccer_1
SELECT birthday from Player where player_name  =  "Cristiano Ronaldo"	soccer_1

SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989	culture_company
select Book_Title from book_club where Publisher = 'Alyson'	culture_company
select Book_Title,Year,Category from book_club where Publisher = 'Alyson'	culture_company

SELECT publisher FROM book_club WHERE YEAR   =   1989	culture_company
SELECT publisher FROM book_club WHERE YEAR   =   1990	culture_company
SELECT publisher FROM book_club WHERE YEAR   =   1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR   =   1990	culture_company

SELECT avg ( budget_million )  FROM movie	culture_company
SELECT avg ( budget_million )  FROM movie where year < 2000	culture_company
SELECT avg ( budget_million )  ,  max ( budget_million )  ,  min ( budget_million )  FROM movie WHERE YEAR  <  2000	culture_company

SELECT distinct Director FROM movie group by Director	culture_company
SELECT Budget_million FROM movie where Title  =  'The Boondock Saints'	culture_company
SELECT Budget_million FROM movie order by Budget_million desc limit 1	culture_company

SELECT count ( * )  FROM STUDENT	voter_2
SELECT city_code FROM STUDENT WHERE StuID  =  1001	voter_2
SELECT age FROM STUDENT WHERE StuID  =  1003	voter_2

SELECT avg ( age )  FROM STUDENT	voter_2
select fname from student where age >  (  SELECT avg ( age )  FROM STUDENT ) 	voter_2
select count ( fname )  from student where age >  (  SELECT avg ( age )  FROM STUDENT ) 	voter_2
select count ( fname )  from student where age <  (  SELECT avg ( age )  FROM STUDENT ) 	voter_2
select count ( fname )  from student	voter_2

SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1	voter_2
SELECT count ( * )  FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1	voter_2
select LName,Fname from student where major in  ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) 	voter_2
select advisor from student where major  =   ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) 	voter_2
select advisor from student where major in  ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 2 )  and major ! =   ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) 	voter_2

SELECT COUNT ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T2.Election_Cycle  =  "Spring"	voter_2
SELECT COUNT ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  "F" AND T2.Election_Cycle  =  "Spring"	voter_2
SELECT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T2.Election_Cycle  =  "Spring"	voter_2

SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )  DESC LIMIT 1	voter_2

SELECT lname, fname FROM STUDENT	voter_2
SELECT count ( distinct T1.StuID )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   SECRETARY_Vote WHERE T1.city_code   =   "NYC" AND T2.Election_Cycle   =   "Spring"	voter_2
SELECT T1.lname, T1.fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   SECRETARY_Vote WHERE T1.city_code   =   "NYC" AND T2.Election_Cycle   =   "Spring"	voter_2

SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )  DESC LIMIT 1	voter_2
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )   LIMIT 1	voter_2
SELECT avg ( Age )  FROM STUDENT	voter_2
SELECT Major FROM STUDENT where sex  =  "F"	voter_2

SELECT count ( DISTINCT Policy_Type_Code )  FROM Customer_Policies	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code	insurance_policies
SELECT count ( * )  FROM Customer_Policies  WHERE Policy_type_code  =  "Life"	insurance_policies
SELECT count ( * ) , Policy_type_code FROM Customer_Policies  GROUP BY  Policy_type_code having policy_type_code  =  "Life" or policy_type_code  =  "Car"	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )   LIMIT 1	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1	insurance_policies

SELECT Policy_ID FROM Claims where Claim_ID  =  "143"	insurance_policies
SELECT Date_Claim_Settled FROM Claims  ORDER BY Date_Claim_Settled DESC LIMIT 1	insurance_policies
SELECT Amount_Claimed FROM Claims where Date_Claim_Settled  =  "2018-03-09"	insurance_policies

SELECT count ( * )  FROM Claims	insurance_policies
SELECT T1.Claim_id ,  count ( * )  FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id	insurance_policies
SELECT avg ( Date_Claim_Settled - Date_Claim_Made )  from Claims	insurance_policies
SELECT T2.settlement_id,T2.amount_claimed,T2.amount_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id where T1.claim_id = 801	insurance_policies

SELECT count ( * )  FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id WHERE T1.customer_details  =  "Ellsworth Paucek"	insurance_policies
SELECT count ( * )  FROM  ( SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id GROUP BY T1.customer_id HAVING count ( * )   >  1 ) 	insurance_policies
SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id GROUP BY T1.customer_id HAVING count ( * )   >  1	insurance_policies

SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  LIMIT 1	insurance_policies
SELECT Policy_Type_Code FROM Customer_Policies where Customer_ID = '3'	insurance_policies
SELECT Start_Date FROM Customer_Policies where Policy_ID = '143'	insurance_policies
SELECT Policy_ID FROM Customer_Policies where Policy_Type_Code = 'Life'	insurance_policies

SELECT T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * )  DESC LIMIT 1	insurance_policies
SELECT T2.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * )  DESC LIMIT 1	insurance_policies

SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id GROUP BY T1.Claim_id HAVING count ( * )   >  2	insurance_policies
SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1	insurance_policies
SELECT T1.Date_Claim_made FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1	insurance_policies
SELECT T1.Date_Claim_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1	insurance_policies

SELECT Date_Claim_Made FROM Claims	insurance_policies
SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1	insurance_policies
SELECT Claim_ID FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1	insurance_policies

SELECT avg ( Population )  FROM city	world_1
SELECT District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city ) 	world_1
SELECT count ( * )  ,  District FROM city WHERE Population  >   ( SELECT avg ( Population )  FROM city )  GROUP BY District	world_1

select name from country where code not in  ( SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 	world_1
select name from country where code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 	world_1

SELECT Name FROM country ORDER BY Population ASC LIMIT 3	world_1
SELECT Name FROM country ORDER BY surfacearea desc LIMIT 1	world_1
SELECT population from country where name  =  "Antarctica"	world_1

SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Kabul"	world_1
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Herat"	world_1
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Name   =   "Qandahar"	world_1

select avg ( percentage )  from countrylanguage	world_1
select countrycode from countrylanguage where language  =  "Dutch" order by percentage desc limit 1	world_1
select avg ( percentage )  from countrylanguage where language  =  "Papiamento"	world_1

SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode GROUP BY T1.Name ORDER BY COUNT ( * )  DESC LIMIT 1	world_1
SELECT count ( * )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"	world_1
SELECT T2.language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode where T1.name  =  "Canada"	world_1
SELECT count ( distinct CountryCode )  FROM countrylanguage WHERE Language  =  "Chinese"	world_1
SELECT NAME FROM country WHERE Continent  =  "North America"	world_1
SELECT LANGUAGE FROM countrylanguage WHERE countrycode in  ( SELECT Code FROM country WHERE Continent  =  "North America" )  and IsOfficial  =  "T"	world_1
SELECT LifeExpectancy FROM country WHERE name  =  "Canada"	world_1

select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Asia" group by region ) 	world_1
select count ( * )  from  ( SELECT region FROM country WHERE Continent   =   "Europe" group by region ) 	world_1
SELECT sum ( SurfaceArea )  FROM country WHERE Continent   =   "Asia" OR Continent   =   "Europe"	world_1

SELECT GovernmentForm, avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm	world_1
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1

SELECT Name FROM country WHERE Continent   =   "Africa"  AND population  <   ( SELECT max ( population )  FROM country WHERE Continent   =   "Asia" ) 	world_1
SELECT continent FROM country WHERE name  =  "Aruba"	world_1
SELECT localname FROM country WHERE name  =  "Angola"	world_1
SELECT SurfaceArea FROM country WHERE name  =  "Afghanistan"	world_1
SELECT Code FROM country WHERE name  =  "Aruba"	world_1

SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND IsOfficial   =   "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch" AND IsOfficial   =   "T"	world_1
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Belgium" and T2.isofficial  =  "T"	world_1
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.language  =  "Arabic"	world_1
SELECT T2.language FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T1.name  =  "Egypt"	world_1
SELECT count ( T1.name )  FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"	world_1
SELECT T1.name FROM country as T1 join countrylanguage as T2 on T1.code  =  T2.countrycode where T2.Language  =  "Arabic" and T2.isOfficial  =  "T"	world_1

SELECT count ( distinct language )  from countrylanguage	world_1
SELECT population from country where name  =  "Aruba"	world_1
SELECT GNPOLD from country where name  =  "Afghanistan"	world_1

SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English"	world_1
SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"	world_1
SELECT DISTINCT T1.LifeExpectancy FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "Dutch"	world_1

SELECT count ( * )  FROM country	world_1
SELECT count ( * )  FROM city	world_1
SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"	world_1
SELECT count ( T2.name )  FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.region  =  "Southern and Central Asia"	world_1

SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  ! =   "English"	world_1
SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English"	world_1
select countrycode, language from countrylanguage where countrycode in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 	world_1
select code from country where continent  =  "North America" and code in  ( SELECT Code FROM country WHERE GovernmentForm ! =  "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE   =   "English" ) 	world_1

SELECT sum ( Population )  FROM country where Continent  =  'Asia'	world_1
SELECT Language FROM countrylanguage where Percentage  =  9.5	world_1
SELECT LifeExpectancy FROM country where LocalName  =  'Angola'	world_1
SELECT GNP FROM country where LocalName  =  'Angola'	world_1
SELECT GNPOld FROM country where Name  =  'Afghanistan'	world_1

SELECT Population FROM country ORDER BY SurfaceArea DESC LIMIT 1	world_1
SELECT HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1	world_1
SELECT Continent FROM country ORDER BY SurfaceArea DESC LIMIT 1	world_1

SELECT Name FROM country	world_1
SELECT GovernmentForm FROM country	world_1
SELECT SurfaceArea FROM country	world_1

SELECT count ( GovernmentForm )  FROM country	world_1
SELECT GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1
SELECT avg ( LifeExpectancy )  FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1
SELECT sum ( Population )  ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg ( LifeExpectancy )   >  72	world_1

SELECT name FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 	world_1
SELECT avg ( LifeExpectancy )  FROM country WHERE Name NOT IN  ( SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T" ) 	world_1
SELECT avg ( LifeExpectancy )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE T2.Language   =   "English" AND T2.IsOfficial   =   "T"	world_1

SELECT Name FROM country WHERE Continent  =  "Africa" order by population desc limit 1	world_1
select population from country where Name  =  'Nigeria'	world_1
SELECT Name FROM country WHERE Continent   =   "Asia"  order by population desc limit 1	world_1
SELECT population from country where name  =  'China'	world_1
SELECT count ( Name )  FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 	world_1
SELECT Name FROM country WHERE Continent   =   "Asia"  AND population >  ( SELECT population FROM country WHERE name  =  'Nigeria' ) 	world_1

SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Continent   =   "Asia"	world_1
SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T3.Population >200000	world_1
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T1.Name  =  "China"	world_1
SELECT avg ( T3.Population )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode JOIN city AS T3 ON T1.Code   =   T3.CountryCode WHERE T2.Language  =  "Dutch"	world_1

select count ( * )  from Country	world_1
select count ( distinct Language )  from countrylanguage	world_1
select SurfaceArea from Country where Code  =  'AFG'	world_1

SELECT sum ( Population )  FROM country WHERE Region  =  "Caribbean"	world_1
SELECT Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72	world_1
SELECT sum ( Population ) ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72	world_1
SELECT avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72	world_1
SELECT sum ( Population )  ,  avg ( LifeExpectancy )  ,  Continent FROM country GROUP BY Continent HAVING avg ( LifeExpectancy )   <  72	world_1

SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"	world_1
SELECT count ( DISTINCT T2.Language )  FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code   =   T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial   =   "T"	world_1

select count ( * )  from  ( SELECT * FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count ( * )  DESC LIMIT 3 ) 	college_3
SELECT T2.Fname, T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count ( * )  DESC LIMIT 3	college_3

SELECT DNO from Department where DNO not in  ( select DNO from Minor_in ) 	college_3
SELECT DName from Department where DNO not in  ( select DNO from Minor_in ) 	college_3
SELECT DName from Department where DNO not in  ( select DNO from Minor_in )  order by DName	college_3

SELECT Room FROM Faculty where Rank = "Instructor"	college_3
SELECT T2.Fname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor  ORDER BY count ( * )  LIMIT 1	college_3

SELECT T2.Fname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID   =   T2.StuID WHERE T1.DNO   =   140	college_3
SELECT T2.Lname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID   =   T2.StuID WHERE T1.DNO   =   140	college_3
SELECT age from Student where LName  =  'Lee'	college_3
SELECT StuID from Student where LName  =  'Smith'	college_3

SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO   =   T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID   =   T3.FacID WHERE T1.DName   =   "Computer Science"	college_3
select rank from faculty where lname  =  "Goodrich"	college_3

SELECT count ( * )  FROM STUDENT	college_3
SELECT LName, Fname FROM STUDENT	college_3
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'	college_3

SELECT T1.cID, COUNT ( * )  FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID	college_3
SELECT * FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID HAVING COUNT ( * )    > =    5	college_3
SELECT T1.cid FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID HAVING COUNT ( * )    > =    5	college_3

SELECT count ( distinct instructor )  from Course	college_3
SELECT instructor from Course group by instructor order by count ( * )  desc limit 1	college_3

SELECT DISTINCT T2.lettergrade FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID order by T2.gradepoint limit 1	college_3

SELECT count ( * )  FROM STUDENT	college_3
SELECT Fname FROM STUDENT	college_3
SELECT Fname FROM STUDENT WHERE Fname LIKE "%a%"	college_3

SELECT Fname ,  Lname, building FROM FACULTY WHERE sex   =   "M"	college_3
SELECT Fname ,  Lname FROM FACULTY WHERE sex   =   "M" AND Building   =   "NEB"	college_3
SELECT Fname ,  Lname, room FROM FACULTY WHERE sex   =   "M" AND Building   =   "NEB"	college_3

SELECT COUNT ( * )  FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) 	college_3
SELECT Fname FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) 	college_3
SELECT T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN Enrolled_in AS T2 ON T1.STUID  =  T2.STUID WHERE T2.GRADE  =  "A"	college_3
SELECT Stuid FROM enrolled_in WHERE Grade  =  "A"	college_3

SELECT COUNT ( * )  FROM FACULTY WHERE sex   =   "M" AND Building   =   "NEB"	college_3
SELECT rank FROM FACULTY WHERE fname   =   "Mark" AND lname   =   "Giuliano"	college_3
SELECT COUNT ( * )  FROM FACULTY WHERE rank  =  "Professor"	college_3

SELECT count ( * )  FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) 	college_3
SELECT Fname FROM STUDENT WHERE StuID IN  ( SELECT StuID FROM ENROLLED_IN ) 	college_3

SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   "INTRODUCTION TO COMPUTER SCIENCE"	college_3
SELECT Instructor FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   "INTRODUCTION TO COMPUTER SCIENCE"	college_3
SELECT Days FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   "INTRODUCTION TO COMPUTER SCIENCE"	college_3
SELECT Hours FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   "INTRODUCTION TO COMPUTER SCIENCE"	college_3
SELECT Credits FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   "INTRODUCTION TO COMPUTER SCIENCE"	college_3

SELECT Building FROM DEPARTMENT WHERE Division   =   "AS"	college_3
SELECT Room  FROM DEPARTMENT WHERE DName   =   "Chemistry"	college_3
SELECT DPhone  FROM DEPARTMENT WHERE DName  =  "Biology"	college_3
SELECT Room  FROM DEPARTMENT WHERE DName  =  "Biology"	college_3

SELECT min ( age )  FROM people	wedding
SELECT max ( age )  FROM people	wedding
SELECT avg ( age )  FROM people	wedding
SELECT min ( age )  ,  max ( age )  ,  avg ( age )  FROM people	wedding

SELECT Church_id, name FROM church	wedding
SELECT T1.name, T1.church_id FROM church AS T1 JOIN wedding AS T2 ON T1.church_id   =   T2.church_id GROUP BY T1.church_id HAVING count ( * )    > =    2	wedding

select * from wedding where year > 2014	wedding
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id WHERE T1.year  >  2014	wedding
SELECT T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id WHERE T1.year  >  2014	wedding

SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3	wedding
SELECT name ,  open_date FROM church ORDER BY open_date Asc LIMIT 3	wedding
SELECT Organized_by FROM church ORDER BY open_date Asc LIMIT 3	wedding

SELECT distinct country FROM people WHERE age<30	wedding
SELECT distinct country FROM people WHERE age>30	wedding
SELECT count ( * )  FROM people WHERE age > =  30 and Is_Male = 'T' and country = 'Canada'	wedding

SELECT name from church	wedding
SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id JOIN church AS T4 ON T4.church_id   =   T1.church_id WHERE T2.age  >  30 OR T3.age  >  30	wedding
SELECT T4.name, T4.Open_Date FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id JOIN church AS T4 ON T4.church_id   =   T1.church_id WHERE T2.age  >  30 OR T3.age  >  30	wedding

SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id GROUP BY T1.id HAVING count ( * )    > =    2	medicine_enzyme_interaction
SELECT COUNT ( DISTINCT T2.enzyme_id )  FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE name  =  "Aripiprazole"	medicine_enzyme_interaction
SELECT COUNT ( DISTINCT T2.enzyme_id )  FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE name  =  "Asenapine"	medicine_enzyme_interaction

SELECT DISTINCT interaction_type from medicine_enzyme_interaction	medicine_enzyme_interaction
SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id   =   T1.id WHERE T2.interaction_type   =   'inhibitor'	medicine_enzyme_interaction
SELECT DISTINCT T1.name ,  T1.location ,  T1.product, T1.chromosome FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id   =   T1.id WHERE T2.interaction_type   =   'inhibitor'	medicine_enzyme_interaction

SELECT name ,  trade_name FROM medicine	medicine_enzyme_interaction

SELECT distinct interaction_type FROM medicine_enzyme_interaction	medicine_enzyme_interaction
SELECT interaction_type FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count ( * )  DESC LIMIT 1	medicine_enzyme_interaction
SELECT count ( distinct interaction_type )  FROM medicine_enzyme_interaction	medicine_enzyme_interaction

SELECT count ( * )  FROM enzyme 	medicine_enzyme_interaction
SELECT count ( distinct enzyme_id )  FROM medicine_enzyme_interaction	medicine_enzyme_interaction

SELECT name FROM enzyme WHERE name LIKE "%PBG%"	medicine_enzyme_interaction
SELECT Product FROM enzyme WHERE name = "ALA synthase"	medicine_enzyme_interaction

SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id WHERE name  =  "ALA synthase"	medicine_enzyme_interaction
SELECT product FROM enzyme where  id  =  1	medicine_enzyme_interaction
SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id WHERE T2.interaction_type   =   'activitor' GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1	medicine_enzyme_interaction

SELECT count ( * )  FROM enzyme WHERE id NOT IN  (  SELECT enzyme_id FROM medicine_enzyme_interaction  ) 	medicine_enzyme_interaction
select name from enzyme order by name	medicine_enzyme_interaction
select distinct name from enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE interaction_type = 'inhibitor'	medicine_enzyme_interaction

SELECT count ( * )  FROM AIRLINES	flight_2
SELECT Airline FROM AIRLINES WHERE Airline = "United Airlines"	flight_2
SELECT Abbreviation FROM AIRLINES WHERE Airline = "US Airways"	flight_2

SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city  like  "%Aberdeen%" OR T2.city  like  "%Abilene%"	flight_2

SELECT T1.SourceAirport FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"	flight_2
SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid   =   T1.Airline WHERE T2.Airline   =   "United Airlines"	flight_2
SELECT DestAirport FROM flights WHERE FlightNo  =  28	flight_2
SELECT DestAirport FROM flights WHERE FlightNo  =  29	flight_2

SELECT airportname FROM airports	flight_2
SELECT COUNT ( DISTINCT Flightno )  FROM flights	flight_2
SELECT COUNT ( DISTINCT country )  FROM airports	flight_2

SELECT SourceAirport FROM Flights WHERE FlightNo = '28'	flight_2
select city from airports where airportcode = 'APG'	flight_2
SELECT AirportName FROM Airports WHERE AirportCode NOT IN  ( SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights ) 	flight_2

SELECT count ( * )  from airports	flight_2
SELECT count ( distinct sourceairport )  from flights	flight_2
SELECT count ( * )  from flights where destairport like "%ASY%"	flight_2
SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%APG%" UNION SELECT count ( * )  from flights where destairport like "%ASY%" and sourceairport like "%ABR%"	flight_2

SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"	flight_2
SELECT count ( distinct T2.DestAirport )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines"	flight_2
SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"	flight_2

SELECT FlightNo FROM Flights	flight_2
SELECT FlightNo,DestAirport FROM Flights	flight_2
SELECT count ( * )  FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.city   =   "Aberdeen" OR T2.city   =   "Abilene"	flight_2
SELECT DESTAIRPORT FROM Flights GROUP BY DESTAIRPORT order by count ( * )  desc limit 1	flight_2

SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"	flight_2
SELECT count ( * )  FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.sourceAirport   =   T2.AirportCode WHERE T2.City   =   "Aberdeen"	flight_2

SELECT count ( * )  FROM flights	flight_2
SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode   =   T2.SourceAirport GROUP BY T1.City ORDER BY count ( * )  ASC LIMIT 1	flight_2
SELECT FlightNo FROM flights WHERE SourceAirport = "APG"	flight_2
SELECT AirportName FROM airports WHERE AirportCode = "DYS"	flight_2
SELECT CITY FROM airports WHERE AirportCode = "ABR"	flight_2

SELECT count ( * )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline   =   T1.uid WHERE T1.Airline   =   "United Airlines" AND T2.DestAirport   =   "ASY"	flight_2
select uid from airlines where airline  =  "United Airlines"	flight_2
SELECT count ( * )  FROM FLIGHTS WHERE airline  =  1 and DestAirport   =   " ASY"	flight_2

SELECT T2.DestAirport FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "United Airlines"	flight_2
SELECT COUNT ( T1.Airline )  FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.sourceAirport like "%APG%"	flight_2
SELECT T2.FlightNo FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T1.Airline  =  "Delta Airlines"	flight_2

SELECT DestAirport FROM flights WHERE airline   =   "1"	flight_2
SELECT COUNTRY FROM AIRLINES WHERE AIRLINE   =   "United Airlines"	flight_2
SELECT SourceAirport FROM flights WHERE DestAirport   =   "ASY"	flight_2
SELECT country FROM Airlines WHERE Airline   =   "US Airways"	flight_2
SELECT Airline FROM Airlines WHERE country   =   "USA"	flight_2

select Location from festival_detail where Festival_Name  =  'Flower Awards'	entertainment_awards
select Festival_Name from festival_detail order by Num_of_Audience limit 1	entertainment_awards
select Name from artwork where Artwork_ID  =  2	entertainment_awards

SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT ( * )   >  1	entertainment_awards
SELECT Festival_Name FROM festival_detail WHERE YEAR  =  "2007"	entertainment_awards
SELECT YEAR FROM festival_detail WHERE Festival_Name  =  "Cherry Awards"	entertainment_awards

SELECT COUNT ( artwork_id )  FROM nomination	entertainment_awards
SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID	entertainment_awards
SELECT T2.Name ,  T3.Festival_Name, T3.YEAR FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID	entertainment_awards

SELECT Num_of_Audience FROM festival_detail WHERE YEAR   =   2008 OR YEAR   =   2010	entertainment_awards
SELECT Chair_Name FROM festival_detail WHERE YEAR   =   2008 OR YEAR   =   2010	entertainment_awards

select Festival_Name,Location from festival_detail ORDER BY YEAR DESC LIMIT 3	entertainment_awards
select Chair_Name from festival_detail where festival_name  =  "LA Awards"	entertainment_awards
select Num_of_Audience from festival_detail where Festival_Name  = 'LA Awards' and Year  =  2010	entertainment_awards

SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )   >  1	loan_1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )    =   1	loan_1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )    =   0	loan_1
select loan_ID from loan where loan_type = 'Mortgages'	loan_1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id where loan_type = 'Mortgages'	loan_1

select count ( * )  from  ( SELECT * FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000 ) 	loan_1
SELECT cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000	loan_1
SELECT T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000	loan_1

SELECT T2.loan_type, T1.bname, T2.branch_ID, T2.amount FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id GROUP BY T1.bname	loan_1
SELECT branch_ID, bname, no_of_customers from bank	loan_1
SELECT sum ( amount )  ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id GROUP BY T1.bname	loan_1

SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )    > =    5000	loan_1
SELECT T1.cust_id,T1.cust_name,T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )    > =    5000	loan_1
SELECT T1.credit_score,count ( * )  FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id where T1.cust_name  =  "Owen"	loan_1

SELECT cust_name FROM customer	loan_1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Mortgages'	loan_1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Auto'	loan_1

SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type   =   'saving'	loan_1
SELECT acc_type FROM customer where acc_type ! =  "saving"	loan_1
select cust_name from customer order by credit_score desc limit 1	loan_1

SELECT sum ( acc_bal )  FROM customer WHERE credit_score  >  100 GROUP BY state	loan_1
SELECT acc_type from customer	loan_1
SELECT credit_score from customer where cust_name  =  "Mary"	loan_1

SELECT T2.bname, max ( T1.amount )  FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id   =   T2.branch_id JOIN customer AS T3 ON T1.cust_id   =   T3.cust_id GROUP BY T2.bname	loan_1
SELECT T2.credit_score FROM loan AS T1 JOIN customer AS T2 ON T1.cust_id   =   T2.cust_id ORDER BY T1.amount DESC limit 1	loan_1
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id   =   T2.branch_id JOIN customer AS T3 ON T1.cust_id   =   T3.cust_id GROUP BY T2.bname ORDER BY sum ( T1.amount )  DESC limit 1	loan_1

SELECT t2.amount FROM loan AS T2 JOIN customer AS T1 ON T1.cust_id   =   T2.cust_id WHERE t1.cust_name  =  "Owen"	loan_1

SELECT avg ( acc_bal )  FROM customer	loan_1
SELECT distinct acc_type FROM customer	loan_1
SELECT avg ( credit_score )  FROM customer	loan_1
SELECT sum ( acc_bal )  FROM customer WHERE state   =   'Utah' OR state   =   'Texas'	loan_1

select count ( distinct market_id )  from phone_market	phone_market
select count ( distinct name )  from phone	phone_market
select T1.name from phone as T1 join phone_market as T2 on T1.phone_id  =  T2.phone_id group by T1.phone_id order by count ( * )  desc limit 1	phone_market
SELECT count ( Name )  FROM phone WHERE Phone_id NOT IN  ( SELECT Phone_ID FROM phone_market ) 	phone_market
SELECT Name FROM phone WHERE Phone_id NOT IN  ( SELECT Phone_ID FROM phone_market ) 	phone_market

SELECT market_id, district from market	phone_market
SELECT t1.market_id,t1.district,t2.phone_id from market as t1 join phone_market as t2 on t1.market_id  =  t2.market_id	phone_market
SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID	phone_market
SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID order by t1.phone_id	phone_market

SELECT Carrier FROM phone WHERE Memory_in_G  <  32	phone_market
SELECT Carrier FROM phone WHERE Memory_in_G  >  64	phone_market
SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64	phone_market

SELECT count ( * )  from phone	phone_market
SELECT count ( distinct carrier )  from phone	phone_market
select phone_id from phone where Carrier  =  'Sprint' or Carrier  =  'TMobile'	phone_market
select phone_id, Name from phone where Carrier  =  'Sprint' or Carrier  =  'TMobile'	phone_market

SELECT Name FROM ship WHERE Nationality   =   "United States"	ship_mission
SELECT Name FROM ship WHERE Nationality   =   "United Kingdom"	ship_mission
SELECT type FROM ship WHERE name   =   "Corbridge"	ship_mission
SELECT tonnage FROM ship WHERE name   =   "Corbridge"	ship_mission
SELECT name FROM ship WHERE tonnage   =   "3146"	ship_mission
SELECT name FROM ship order by  tonnage desc limit 1	ship_mission
SELECT count ( distinct type )  FROM ship	ship_mission

SELECT count ( * )  FROM mission	ship_mission
SELECT  T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T2.Nationality   =   "United States"	ship_mission
SELECT  T1.Fate, T1.mission_id FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T2.Nationality   =   "United States"	ship_mission

SELECT count ( * )  FROM ship	ship_mission
SELECT Nationality FROM ship	ship_mission
SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1	ship_mission

SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Launched_Year  >  1928	ship_mission
SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Fate Like "%Lost%"	ship_mission
SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Fate Like "%Lost%" order by T2.tonnage desc limit 1	ship_mission

SELECT COUNT ( * )  FROM  ( SELECT * FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2 ) 	customers_and_invoices
SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2	customers_and_invoices
SELECT t2.customer_id FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2	customers_and_invoices

SELECT count ( * )  from invoices	customers_and_invoices
SELECT count ( * )  from orders	customers_and_invoices
SELECT customer_id from orders where order_id  =  3	customers_and_invoices

SELECT count ( * )  FROM Financial_transactions	customers_and_invoices
SELECT * from Accounts where account_name  =  "337"	customers_and_invoices
SELECT count ( * )  FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id   =   T2.account_id WHERE T2.account_name   =   "337"	customers_and_invoices

SELECT T2.customer_first_name, count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id	customers_and_invoices
SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    2	customers_and_invoices

SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   "900"	customers_and_invoices
SELECT T2.customer_first_name ,  T2.customer_last_name, T2.email_address, T2.phone_number FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   "900"	customers_and_invoices
SELECT DISTINCT T2.customer_first_name ,  T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.other_account_details   =    ( SELECT other_account_details FROM Accounts WHERE account_name  =  900 ) 	customers_and_invoices

select count ( distinct account_id )  from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'John'	customers_and_invoices
select count ( distinct account_id )  from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan' or customer_first_name = 'Jessica'	customers_and_invoices
select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan'	customers_and_invoices
select account_id from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Meaghan'	customers_and_invoices
select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Jessica'	customers_and_invoices

SELECT customer_first_name ,  customer_last_name FROM Customers	customers_and_invoices
SELECT customer_id FROM Customers	customers_and_invoices
SELECT count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id	customers_and_invoices
SELECT distinct other_account_details FROM Accounts	customers_and_invoices

SELECT T1.customer_id  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1	customers_and_invoices
SELECT T2.customer_first_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1	customers_and_invoices
SELECT T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1	customers_and_invoices

SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'	department_management
SELECT name FROM head WHERE head_id  =  1	department_management
SELECT born_state FROM head where name  =  "Tiger Woods"	department_management
SELECT age  FROM head where name  =  "Tiger Woods"	department_management
SELECT *  FROM head order by age desc limit 1	department_management
SELECT count ( * )   FROM head where born_state  =  "Alabama"	department_management

SELECT name FROM head WHERE head_ID  =  1	department_management
SELECT born_state, age FROM head WHERE head_ID  =  3	department_management
SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'	department_management

SELECT count ( * )  FROM department	department_management
SELECT Num_Employees FROM department WHERE department_id  =  2	department_management
SELECT Name FROM department WHERE department_id  =  3	department_management

SELECT born_state from head where name  =  "Sergio García"	department_management
SELECT max ( head_ID )  from head	department_management
SELECT T1.age from head as T1 Join management as t2 on t1.head_id  =  t2.head_id	department_management

SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'	department_management
SELECT Budget_in_Billions FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'	department_management
SELECT Creation, Name FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'	department_management
SELECT count ( * )  from management WHERE temporary_acting   =   'No'	department_management

SELECT name ,  num_employees FROM department where name  =  "Treasury"	department_management
SELECT name ,  num_employees FROM department where name  =  "Homeland Security"	department_management

SELECT T1.department_id ,  T1.name ,  count ( * )  FROM management AS T2 JOIN department AS T1 ON T1.department_id   =   T2.department_id GROUP BY T1.department_id HAVING count ( * )   >  1	department_management
SELECT  ranking, creation from department where num_employees  =   ( select max ( num_employees )  from department ) 	department_management
SELECT ranking, creation from department where num_employees  =   ( select min ( num_employees )  from department ) 	department_management
SELECT ranking, creation from department where Budget_in_Billions  =   ( select max ( Budget_in_Billions )  from department ) 	department_management

SELECT creation FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1	department_management
SELECT count ( * )  FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1	department_management
SELECT name FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1	department_management
SELECT Num_Employees FROM department where name  =  "Treasury"	department_management
SELECT Budget_in_Billions FROM department where name  =  "Treasury"	department_management

SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id JOIN head AS T3 ON T2.head_id   =   T3.head_id WHERE T1.name   =   'Treasury'	department_management
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id JOIN head AS T3 ON T2.head_id   =   T3.head_id WHERE T1.name   =   'Homeland Security'	department_management
select * from department where num_employees > 100000	department_management

SELECT Major FROM student WHERE StuID  =  1008	club_1
SELECT sex FROM student WHERE StuID  =  1008	club_1
SELECT Age FROM student WHERE StuID  =  1008	club_1

SELECT avg ( t3.age )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Tennis Club"	club_1
SELECT t3.Fname, t3.Lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Tennis Club"	club_1
SELECT t3.city_code FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Tennis Club"	club_1
SELECT t2.Position FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Tennis Club"	club_1

select count ( stuid )  from student where major  =  600	club_1
select stuid from student where major  =  600	club_1
SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.major   =   "600" GROUP BY t1.clubname	club_1
SELECT t1.clubname,count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.major   =   "600" GROUP BY t1.clubname ORDER BY count ( * ) 	club_1

SELECT ClubDesc FROM club where ClubID = 1	club_1
SELECT city_code FROM Student where StuID = 1001	club_1
SELECT count ( DISTINCT t1.clubname )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.fname   =   "Eric" AND t3.lname   =   "Tai"	club_1

SELECT T1.clubname from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1	club_1
SELECT count ( * )  from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1	club_1
select count ( position )  from member_of_club where clubid  =   ( SELECT T2.clubid from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1 ) 	club_1

SELECT t3.major FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Bootup Baltimore"	club_1
SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid	club_1
SELECT * FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid	club_1
SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.sex = "F"	club_1

SELECT count ( * )  from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid where T1.clubname  =  "Bootup Baltimore"	club_1
SELECT T3.age from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  "Bootup Baltimore"	club_1
SELECT avg ( T3.age )  from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  "Bootup Baltimore"	club_1
SELECT T3.fname, T3.lname from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  "Bootup Baltimore" and T2.position  =  "President"	club_1
SELECT clublocation from club where clubname  =  "Bootup Baltimore"	club_1

SELECT ClubLocation FROM Club WHERE ClubName =  "Hopkins Student Enterprises"	club_1
SELECT t3.fname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Hopkins Student Enterprises" AND t2.position   =   "CTO"	club_1
SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Hopkins Student Enterprises" AND t2.position   =   "CTO"	club_1

SELECT avg ( Age )  from Student	club_1
SELECT sex,avg ( Age )  FROM student group by Sex	club_1
SELECT count ( StuID )  FROM student where Age<17	club_1
select count ( StuID )  from student where Fname in  ( SELECT Fname FROM student group by Fname having count ( * ) >1 ) 	club_1
select count ( ClubID )  from Club where ClubLocation = 'AKW'	club_1
select count ( ClubID )  from Club where ClubLocation = 'HHH'	club_1

SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid	club_1
SELECT Fname  from Student  where LName = "Smith"	club_1

SELECT avg ( t3.age )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Bootup Baltimore"	club_1
SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Bootup Baltimore"	club_1
SELECT T3.FName, T3.LName FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   "Bootup Baltimore" AND t2.Position  =  "President"	club_1

SELECT count ( DISTINCT t1.clubname )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.fname   =   "Eric" AND t3.lname   =   "Tai"	club_1
select count ( * )  from student where stuid not in  ( SELECT t3.stuid FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid ) 	club_1
select count ( * )  from  ( select stuid from member_of_club group by stuid having count ( * )   =  1 ) 	club_1
select lname,fname from student where stuid in  ( select stuid from member_of_club group by stuid having count ( * )   =  1 ) 	club_1
select clubName from club where clubid in  ( select distinct clubid from member_of_club group by stuid having count ( * )   =  1 ) 	club_1

SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank )  DESC LIMIT 1	epinions_1
SELECT i_id FROM item where title  =  "cup"	epinions_1
SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank )  DESC LIMIT 1	epinions_1

SELECT i_id, title FROM item	epinions_1
SELECT T1.title, T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rank  >  3	epinions_1
SELECT T1.title, T1.i_id, rating FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rank  >  3	epinions_1

SELECT name from useracct	epinions_1
SELECT target_u_id from trust	epinions_1

SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) 	epinions_1
SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) 	epinions_1
SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) 	epinions_1
SELECT count ( * )  FROM review	epinions_1
SELECT count ( * )  FROM review WHERE rating  > =   5	epinions_1

SELECT T1.title  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1	epinions_1
SELECT i_id from item where title =  'cup'	epinions_1

SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1	epinions_1
SELECT T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1	epinions_1
SELECT T1.title  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  LIMIT 1	epinions_1
SELECT T1.i_id  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  LIMIT 1	epinions_1
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id where rating  =  5	epinions_1

SELECT i_id FROM review ORDER BY rating LIMIT 1	epinions_1
SELECT T1.name ,  count ( * )  FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id	epinions_1
SELECT u_id FROM review ORDER BY rank LIMIT 1	epinions_1
SELECT name FROM useracct WHERE u_id  =  2	epinions_1

SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id order by rating desc limit 1	epinions_1
SELECT avg ( rating )  FROM review	epinions_1
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rating  > 7	epinions_1
SELECT i_id FROM item where title = 'cup'	epinions_1
SELECT title FROM item where i_id = 4	epinions_1
SELECT * FROM item	epinions_1
SELECT T1.title, T2.rating FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id order by T2.rating	epinions_1

SELECT name FROM storm WHERE storm_id NOT IN  ( SELECT storm_id FROM affected_region ) 	storm_record
SELECT Number_city_affected from affected_region where storm_id  =   ( select storm_id from storm where Name = 'Two' ) 	storm_record
SELECT Storm_id from storm where name  = 'Two'	storm_record

SELECT region_name FROM region WHERE region_id NOT IN  ( SELECT region_id FROM affected_region ) 	storm_record
SELECT region_name FROM region WHERE region_id IN  ( SELECT region_id FROM affected_region ) 	storm_record

SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id   =   T2.region_id JOIN storm AS T3 ON T1.storm_id   =   T3.storm_id WHERE T2.Region_name   =   'Afghanistan'  AND T3.Dates_active  =  "May19–May25" INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id   =   T2.region_id JOIN storm AS T3 ON T1.storm_id   =   T3.storm_id WHERE T2.Region_name   =   'Albania' AND T3.Dates_active  =  "May19–May25"	storm_record
select T1.Name from Storm as T1 join affected_region as T2 on T1.Storm_ID  =  T2.Storm_ID where T2.Number_city_affected  =  10.0 or T2.Number_city_affected  =  15.0	storm_record

SELECT sum ( Number_city_affected )  from affected_region	storm_record
Select region_name from region	storm_record
SELECT T1.region_name ,  count ( * )  FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id  =  T2.region_id GROUP BY T1.region_id	storm_record

select count ( * )  from storm	storm_record
select count ( * )  from  ( SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id HAVING count ( * )    > =    2 ) 	storm_record

SELECT product FROM product WHERE max_page_size   =   "A4"	store_product
SELECT product FROM product WHERE pages_per_minute_color  <  5	store_product
SELECT product FROM product WHERE max_page_size   =   "A4" AND pages_per_minute_color  <  5	store_product
SELECT product,interface FROM product WHERE max_page_size   =   "A4" AND pages_per_minute_color  <  5	store_product
SELECT product,dimensions FROM product WHERE max_page_size   =   "A4" AND pages_per_minute_color  <  5	store_product
SELECT product FROM product WHERE pages_per_minute_color  > 5	store_product

SELECT sum ( city_population )  FROM district ORDER BY city_area DESC LIMIT 3	store_product
SELECT District_name FROM district where City_Population  =   ( select max ( City_Population )  from district ) 	store_product
SELECT City_Population, City_Area FROM district where City_Population  =   ( select max ( City_Population )  from district ) 	store_product

SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.Type   =   "City Mall"	store_product
SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "Village Store"	store_product

SELECT avg ( City_Population )  FROM district	store_product
SELECT max ( City_Population )  FROM district	store_product
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1	store_product

SELECT max_page_size FROM product WHERE max_page_size ! =  'A4'	store_product

SELECT store_id, store_name FROM store	store_product
SELECT t1.store_id, t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  "Khanewal District"	store_product

SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1	store_product
SELECT Headquartered_City FROM district ORDER BY city_population DESC LIMIT 1	store_product
SELECT City_Area FROM district ORDER BY city_population DESC LIMIT 1	store_product
SELECT count ( * )   FROM district where city_population > 500000	store_product
SELECT headquartered_city FROM district where city_population > 500000	store_product

SELECT count ( * )  FROM store	store_product
SELECT store_name FROM store	store_product
SELECT City_Population FROM district where  Headquartered_City  =  "Attock City"	store_product
SELECT Area_size FROM store where store_name  =  "Neguac"	store_product

SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.store_name   =   "Blackville"	store_product
SELECT t3.City_Population FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.store_name   =   "Blackville"	store_product
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id order by t3.city_population desc limit 1	store_product
